{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/utils.js","webpack:///./lib/animatable_chart.js","webpack:///./lib/charts/line.js","webpack:///./lib/charts/line-y-scaled.js","webpack:///./lib/charts/bar-stacked.js","webpack:///./lib/charts/bar.js","webpack:///./lib/charts/pie.js","webpack:///./lib/chart_factory.js","webpack:///./lib/night_switch.js","webpack:///./index.js"],"names":["pixelRatio","window","devicePixelRatio","toCssSize","value","fromCssSize","drawLines","ctx","x","lines","lineStates","lineGrades","lineColors","width","height","offsetW","offsetH","graphOffsetH","left","right","dX","maxHeight","minHeight","lineWidth","zoomGrade","inOut","line","label","drawLine","grade","color","bottomGraphOffsetH","dRange","dx","scaleX","scaleY","strokeStyle","fromIndex","getLowerIndex","toIndex","getUpperIndex","prevX","prevXCoord","length","zeroH","beginPath","moveTo","i","xi","y","yCoord","lineTo","stroke","roundingProbes","calcYAlignment","maxVal","minVal","topOffset","maxBottomOffset","highestLine","lowestLine","vals","bottomOffset","max","min","top","bottom","probe","topVal","floorTo","bottomVal","ceilTo","calcTopYAlignment","val","mod","drawGrid","nlines","fromMax","toMax","currentMax","fromMin","toMin","currentMin","lineMax","lineMin","getColor","getYColor","fromRight","lineGrade","textSize","nightGrade","topLineOffset","scale","fromCurTop","toCurTop","fromCurBottom","toCurBottom","fromTopOffset","fromBottomOffset","toTopOffset","toBottomOffset","fromOffsetH","dFrom","toOffsetH","dTo","Math","abs","drawGridLines","fromVal","toVal","yColor","fillStyle","linesDiff","valsDiff","v","measureText","fillText","drawDates","baseX","xDiff","format","fromPeriod","toPeriod","fromFillStyle","toFillStyle","toN","floor","p","timestamp","drawDate","fromN","shortMonths","months","shortDays","days","formatDate","d","Date","getUTCDate","getUTCMonth","getUTCFullYear","leftPad","getUTCHours","getUTCDay","dateOffset","position","text","controlWidth","previewPadding","controlRadius","drawScrollControlls","from","to","getPreviewBlurColor","getPreviewControlColor","fromH","toH","drawRoundedRect","closePath","fill","fromX","toX","fromY","toY","leftRadius","rightRadius","quadraticCurveTo","drawCheckboxes","maxWidth","checkboxes","checkboxHeight","checkboxRadius","checkboxMargin","checkboxFont","ctxFont","font","leftOffset","checkbox","textWidth","drawCheckbox","checkboxBorderWidth","radius","checkGrade","o","legendPadding","legendOffset","crossRadius","drawRuller","rullerWidth","rullerHeight","range","getRullerColor","alphaGrade","drawLinesLegend","lineKinds","lineLabels","closestIndex","paramKinds","textFont","getLegendColor","getLegendBorderColor","getLegendFontColor","getBackgroundColor","coordinates","drawArrow","legendFont","contentWidth","contentHeight","maxValueWidth","lowestTopOffset","name","nameWidth","valWidth","approxValue","lowerIndex","approximateHeight","upperIndex","param","legendWidth","legendHeight","legendOffsetLeft","additionalOffset","nextOffset","rightOverflow","textOffsetH","arrowSide","drawLinesCross","topGraphOffsetH","currentMaxHeight","currentMinHeight","arc","PI","affinity","drawHeader","headerHeight","fontSize","magnifierLineWidth","drawZoomOutControl","coords","magnifierHeight","magnifierRadius","zoomOutText","drawDateRangeSummary","headerFontSize","baseDate","isRange","leftTimestamp","rightTimestamp","drawStackedBars","bars","summedBars","pickedIndex","shrink","offsetLeft","offsetTop","values","Array","pickedAlpha","pickedVal","j","bar","dY","prevY","procent","idx","binarySearch","getClosestIndex","arr","len","m","diff","getMaxY","getMinY","Infinity","sumBars","barGrades","result","sum","colorFromRGBA","r","g","b","a","animatableAlphaHEXcolor","hex","alpha","R","getR","G","getG","B","getB","animatableHexColor","fromHex","fromAlpha","toHex","toAlpha","fromR","fromG","fromB","dR","dG","dB","dAlpha","dynamicHexColor","toAltHex","toAltAlpha","toDR","toDG","toDB","toAltDR","toAltDG","toAltDB","toDAlpha","toDAltAlpha","pickGrade","notPickGrade","parseInt","slice","getDataType","data","type","columns","column","types","push","getLines","getBars","getX","dynamicHexColorWithBlending","mask1","alpha1","mask2","alpha2","blendColors","a1","mask","a2","r1","g1","b1","r2","g2","b2","da2","da1","padHexComponent","toString","join","c","AnimatedCanvas","options","animations","running","prevMs","undefined","el","document","createElement","className","canvasEl","getContext","appendChild","setFont","setSize","headerText","header","details","overview","names","checkboxLabelToIndex","colors","id","currentLeft","scrollLeft","currentRight","scrollRight","currentRange","fromMaxHeight","toMaxHeight","fromMinHeight","toMinHeight","datesGrade","moveDir","legendShown","legendMoving","legendPosition","legendCoordinates","zoomFromGrade","zoomToGrade","zoomedIndex","zoomedData","ref","zoomState","zoomOutCoords","yAlign","addEventListener","e","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","onTouchStart","onTouchMove","onTouchEnd","animationDurationMs","getGridColor","getAxisColor","getZoomOutColor","step","ms","requestAnimationFrame","diffMs","hasAnimations","uniqName","anim","container","prop","duration","render","setBasicSizes","setWidth","style","previewOffsetH","checkboxesOffsetH","previewHeight","padH","checkboxesAreaHeight","chartHeight","mainLinesOffsetH","datesOffsetH","border","fontFamily","resize","chartWidth","padW","lineJoin","datesDiff","previewPadW","previewPadH","previewLineWidth","gridLineWidth","legendTextSize","legendFontSize","dateRangeFontSize","animate","addAnimation","index","direction","getDetails","clearRect","calc","drawView","yAxisdateFormat","legendDateFormat","drawChart","drawPreview","drawScroll","drawLegend","calcDates","currentDiff","lineIdToIndexMap","k","offset","fromLeft","toRight","scrollStart","dir","movePosition","offsetDiff","dOffset","bound","move","getBoundingClientRect","canvasX","canvasY","fromW","toW","getDir","clientX","clientY","setMoveDir","getLabel","toggle","zoom","setPickedIndex","cancelAnimation","destinationPosition","stopPropagation","setScroll","clickCheckbox","clickZoomOut","clickLegend","showLegend","setMove","moveLegend","setNoMove","stopMovingLegend","ev","targetTouches","enable","LineChart","calcHeight","visibleMaxHeight","visibleMinHeight","maxAnim","minAnim","mergeZoomedColumns","rangeMaxHeight","rangeMinHeight","AnimatableChart","LineYScaled","lines2","splice","details2","currentMaxHeight2","fromMaxHeight2","toMaxHeight2","maxHeight2","currentMinHeight2","fromMinHeight2","toMinHeight2","minHeight2","yAlign2","getAxisColor1","getAxisColor2","rangeMaxHeight2","rangeMinHeight2","StackedBarChart","fullSummedBars","newMaxHeight","BarChart","PieChart","create","parent","chart","y_scaled","offsetWidth","stacked","percentage","Object","keys","some","NightSwitch","cb","state","textEl","switch","setText","bodyEl","getElementsByTagName","textContent","factory","ChartFactory","charts","getElementById","datum","switchMode","forEach","nightMode","nightSwitch"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","const pixelRatio = window.devicePixelRatio || 1\n\nexport function toCssSize (value) {\n    return value / pixelRatio\n}\n\nexport function fromCssSize (value) {\n    return value * pixelRatio\n}\n\nexport function drawLines (ctx, x, lines, lineStates, lineGrades, lineColors, width, height, offsetW, offsetH, graphOffsetH, left, right, dX, maxHeight, minHeight, lineWidth, zoomGrade, inOut) {\n    for (let line of lines) {\n        const label = line[0]\n        if (lineStates[label] || lineGrades[label] > 0) {\n            drawLine(ctx, x, line, lineGrades[label], lineColors[label], width, height, offsetW, offsetH, graphOffsetH, left, right, dX, maxHeight, minHeight, lineWidth, zoomGrade, inOut)\n        }\n    }\n}\n\nexport function drawLine (ctx, x, line, grade, color, width, height, offsetW, offsetH, bottomGraphOffsetH, left, right, dX, maxHeight, minHeight, lineWidth, zoomGrade, inOut) {\n\n    if (minHeight > maxHeight) {\n        return\n    }\n\n    const dRange = (right - left) / 2 * (1 - zoomGrade)\n    const dx = dX * (1 - zoomGrade)\n\n    left = left + dRange\n    right = right - dRange\n    dX = dX - dx\n\n    const scaleX = width / dX\n    const scaleY = (height - bottomGraphOffsetH) / (maxHeight - minHeight)\n\n    ctx.lineWidth = lineWidth\n    ctx.strokeStyle = color(grade * zoomGrade)\n\n    const fromIndex = getLowerIndex(x, left - offsetW / width)\n    const toIndex = getUpperIndex(x, right + offsetW / width)\n\n    let prevX = x[fromIndex]\n    let prevXCoord = offsetW +\n        ((prevX - x[1]) / ((x[x.length - 1] - x[1])) - left) * width / (right - left)\n\n    const zeroH = offsetH + height - bottomGraphOffsetH\n\n    ctx.beginPath()\n    ctx.moveTo(prevXCoord, zeroH - line[fromIndex] * scaleY)\n\n    for (let i = fromIndex + 1; i <= toIndex; i++) {\n\n        const xi = x[i]\n        const y = line[i] - minHeight\n\n        const yCoord = zeroH - y * scaleY\n\n        prevXCoord = prevXCoord + (xi - prevX) * scaleX\n        ctx.lineTo(prevXCoord, yCoord)\n        prevX = xi\n    }\n\n    ctx.stroke()\n}\n\nconst roundingProbes = [ 2, 5, 10, 100, 1000, 10000, 100000, 1000000 ]\n\nexport function calcYAlignment (maxVal, minVal, topOffset, maxBottomOffset, highestLine, lowestLine, height, vals) {\n\n    let bottomOffset = height * minVal / maxVal\n    bottomOffset = bottomOffset > maxBottomOffset ? maxBottomOffset : bottomOffset\n\n    vals.max = maxVal - (maxVal - minVal) * (topOffset - highestLine) / (topOffset - bottomOffset)\n    vals.min = minVal + (maxVal - minVal) * (lowestLine - bottomOffset) / (topOffset - bottomOffset)\n    vals.top = height - topOffset\n    vals.bottom = bottomOffset\n\n    for (let probe of roundingProbes) {\n\n        const topVal = floorTo(vals.max, probe)\n        const bottomVal = ceilTo(vals.min, probe)\n\n        if (bottomVal >= topVal) {\n            break\n        }\n\n        let top = (maxVal - topVal) / (topVal - bottomVal) * (highestLine - lowestLine)\n\n        if (top >= (height - highestLine)) {\n            break\n        }\n\n        let bottom = (bottomVal - minVal) / (topVal - bottomVal) * (highestLine - lowestLine)\n\n        if (bottom >= lowestLine) {\n            break\n        }\n\n        vals.max = topVal\n        vals.min = bottomVal\n        vals.top = height - highestLine - top\n        vals.bottom = lowestLine - bottom\n    }\n\n    return vals\n}\n\nexport function calcTopYAlignment (maxVal, topOffset, highestLine, lowestLine, height, vals) {\n\n    vals.max = maxVal - maxVal * (topOffset - highestLine) / (topOffset)\n    vals.top = height - topOffset\n    vals.bottom = 0\n\n    for (let probe of roundingProbes) {\n\n        const topVal = floorTo(vals.max, probe)\n\n        if (topVal < 0) {\n            break\n        }\n\n        let top = (maxVal - topVal) / topVal * (highestLine - lowestLine)\n        if (top >= (height - highestLine)) {\n            break\n        }\n\n\n        vals.max = topVal\n        vals.top = height - highestLine - top\n    }\n\n    vals.min = vals.max / highestLine * lowestLine\n\n    return vals\n}\n\nfunction floorTo (val, mod) {\n    return ((val / mod) | 0) * mod\n}\n\nfunction ceilTo (val, mod) {\n    return (((val / mod) | 0) + 1) * mod\n}\n\nexport function drawGrid (ctx, offsetW, offsetH, width, height, nlines,\n    fromMax, toMax, currentMax,\n    fromMin, toMin, currentMin,\n    lineMax, lineMin,\n    topOffset, bottomOffset,\n    getColor, getYColor, fromRight, lineGrade, lineWidth, textSize, nightGrade, zoomGrade) {\n\n    if (toMin > toMax) {\n        return\n    }\n\n    if (lineGrade === 0) {\n        return\n    }\n\n    const topLineOffset = height - topOffset\n\n    const scale = (topLineOffset - bottomOffset) / (currentMax - currentMin)\n\n    const fromCurTop = topLineOffset - (currentMax - fromMax) * scale\n    const toCurTop = topLineOffset + (toMax - currentMax) * scale\n    const fromCurBottom = bottomOffset + (fromMin - currentMin) * scale\n    const toCurBottom = bottomOffset - (currentMin - toMin) * scale\n\n    const fromTopOffset = (fromCurTop - fromCurBottom) / (topLineOffset - bottomOffset) * topOffset\n    const fromBottomOffset = (fromCurTop - fromCurBottom) / (topLineOffset - bottomOffset) * bottomOffset\n    const toTopOffset = (toCurTop - toCurBottom) / (topLineOffset - bottomOffset) * topOffset\n    const toBottomOffset = (toCurTop - toCurBottom) / (topLineOffset - bottomOffset) * bottomOffset\n\n    const fromOffsetH = fromCurTop + fromTopOffset\n    const dFrom = fromCurTop - fromCurBottom + fromTopOffset + fromBottomOffset\n    const toOffsetH = toCurTop + toTopOffset\n    const dTo = toCurTop - toCurBottom + toTopOffset + toBottomOffset\n\n    const grade = (Math.abs(toMax - fromMax) + Math.abs(toMin - fromMin)) === 0\n        ? 1\n        : (Math.abs(fromMax - currentMax) + Math.abs(fromMin - currentMin)) /\n            (Math.abs(toMax - fromMax) + Math.abs(toMin - fromMin))\n\n    ctx.lineWidth = lineWidth\n    ctx.strokeStyle = getColor(nightGrade, 1)\n\n    ctx.beginPath()\n\n    ctx.moveTo(offsetW, height + offsetH)\n    ctx.lineTo(offsetW + width, height + offsetH)\n\n    ctx.stroke()\n\n    drawGridLines(ctx, offsetW, height + offsetH - toOffsetH, width, dTo, nlines, lineMax, lineMin, textSize, fromRight, getColor(nightGrade, grade * zoomGrade), getYColor(nightGrade, grade * zoomGrade), grade)\n\n    if (grade < 1) {\n        drawGridLines(ctx, offsetW, height + offsetH - fromOffsetH, width, dFrom, nlines, lineMax, lineMin, textSize, fromRight, getColor(nightGrade, (1 - grade) * zoomGrade), getYColor(nightGrade, (1 - grade) * zoomGrade), grade)\n    }\n}\n\nfunction drawGridLines (ctx, offsetW, offsetH, width, height, nlines, fromVal, toVal, textSize, fromRight, color, yColor, grade) {\n\n    ctx.strokeStyle = color\n    ctx.fillStyle = yColor\n\n    ctx.beginPath()\n\n    const linesDiff = height / (nlines + 1)\n    const valsDiff = (fromVal - toVal) / (nlines - 1)\n\n    for (let i = 0, y = offsetH + linesDiff, v = fromVal; i < nlines; i++, y += linesDiff, v -= valsDiff) {\n        ctx.moveTo(offsetW, y)\n        ctx.lineTo(offsetW + width, y)\n        const x = fromRight ? offsetW + width - ctx.measureText(v).width : offsetW\n        ctx.fillText(v | 0, x, y - textSize / 2)\n    }\n\n    const v = (toVal - valsDiff) | 0\n    const x = fromRight ? offsetW + width - ctx.measureText(v).width : offsetW\n    ctx.fillText(v, x, offsetH + height - textSize / 2)\n\n    ctx.stroke()\n}\n\nexport function drawDates (ctx, offsetW, offsetH, scale, baseX, xDiff, format, left, right, fromPeriod, toPeriod, grade, getColor, nightGrade, zoomGrade) {\n\n    let fromFillStyle, toFillStyle\n\n    if (fromPeriod > toPeriod) {\n        toFillStyle = getColor(nightGrade, grade * zoomGrade)\n        fromFillStyle = getColor(nightGrade, zoomGrade)\n    } else {\n        toFillStyle = getColor(nightGrade, zoomGrade)\n        fromFillStyle = getColor(nightGrade, (1 - grade) * zoomGrade)\n    }\n\n    ctx.fillStyle = toFillStyle\n    const toN = Math.floor(left / toPeriod) - 1\n    for (let p = toPeriod * toN; p < right + toPeriod; p += toPeriod) {\n        const timestamp = Math.floor(baseX + xDiff * p)\n        drawDate(ctx, offsetW, offsetH, timestamp, format, p, left, scale)\n    }\n\n    if (fromPeriod === toPeriod) {\n        return\n    }\n\n    ctx.fillStyle = fromFillStyle\n    const fromN = Math.floor(left / fromPeriod) - 1\n    for (let p = fromPeriod * fromN; p < right + fromPeriod; p += fromPeriod) {\n        const timestamp = Math.floor(baseX + xDiff * p)\n        drawDate(ctx, offsetW, offsetH, timestamp, p, left, scale)\n    }\n}\n\nconst shortMonths = [\n    'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\n    'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\n]\nconst months = [\n    'January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'\n]\nconst shortDays = [ 'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat' ]\nconst days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n\n/*\n- Apr 1 'monthdate'\n- 1 April 2019 'date'\n- Saturday, 1 April 2019 'weekdate'\n- Sat, 1 April 2019 'shortweekdate'\n- 12:00 'hours'\n*/\n\nexport function formatDate (timestamp, format) {\n\n    const d = new Date(timestamp)\n\n    switch (format) {\n        case 'date':\n            return d.getUTCDate() + ' ' + months[d.getUTCMonth()] + ' ' + d.getUTCFullYear()\n        case 'hours':\n            return leftPad(d.getUTCHours()) + ':00'\n        case 'monthdate':\n            return shortMonths[d.getUTCMonth()] + ' ' + d.getUTCDate()\n        case 'weekdate':\n            return shortDays[d.getUTCDay()] + ', ' + d.getUTCDate() + ' ' + months[d.getUTCMonth()] + ' ' + d.getUTCFullYear()\n        case 'shortweekdate':\n            return days[d.getUTCDay()] + ', ' + d.getUTCDate() + ' ' + months[d.getUTCMonth()] + ' ' + d.getUTCFullYear()\n\n    }\n}\n\nfunction leftPad (v) {\n    return v < 10 ? '0' + v : v\n}\n\nconst dateOffset = fromCssSize(18)\n\nfunction drawDate (ctx, offsetW, offsetH, timestamp, format, position, left, scale) {\n    const text = formatDate(timestamp, format)\n    ctx.fillText(text, offsetW + (position - left) * scale - dateOffset, offsetH)\n}\n\nexport const controlWidth = fromCssSize(10)\nexport const previewPadding = fromCssSize(2)\nconst controlRadius = fromCssSize(8)\n\nexport function drawScrollControlls (ctx, offsetW, offsetH, width, height, from, to,\n    getPreviewBlurColor, getPreviewControlColor, nightGrade, zoomGrade) {\n\n    const left = offsetW + from * width + controlWidth\n    const right = offsetW + to * width - controlWidth\n    const fromH = offsetH - previewPadding\n    const toH = offsetH + height + previewPadding\n\n    ctx.fillStyle = getPreviewBlurColor(nightGrade, zoomGrade)\n    ctx.beginPath()\n    drawRoundedRect(ctx, offsetW, left, fromH, toH, controlRadius, 0)\n    drawRoundedRect(ctx, right, offsetW + width, fromH, toH, 0, controlRadius)\n    ctx.closePath()\n    ctx.fill()\n\n    ctx.fillStyle = getPreviewControlColor(nightGrade, zoomGrade)\n    ctx.beginPath()\n    drawRoundedRect(ctx, left - controlWidth, left, fromH, toH, controlRadius, 0)\n    drawRoundedRect(ctx, right, right + controlWidth, fromH, toH, 0, controlRadius)\n    ctx.closePath()\n    ctx.fill()\n\n    ctx.strokeStyle = getPreviewControlColor(nightGrade, zoomGrade)\n    ctx.moveTo(left, fromH)\n    ctx.lineTo(right, fromH)\n    ctx.moveTo(left, toH)\n    ctx.lineTo(right, toH)\n    ctx.stroke()\n}\n\nexport function drawRoundedRect (ctx, fromX, toX, fromY, toY, leftRadius, rightRadius) {\n    ctx.moveTo(fromX + leftRadius, fromY)\n    ctx.lineTo(toX - rightRadius, fromY)\n    ctx.quadraticCurveTo(toX, fromY, toX, fromY + rightRadius)\n    ctx.lineTo(toX, toY - rightRadius)\n    ctx.quadraticCurveTo(toX, toY, toX - rightRadius, toY)\n    ctx.lineTo(fromX + leftRadius, toY)\n    ctx.quadraticCurveTo(fromX, toY, fromX, toY - leftRadius)\n    ctx.lineTo(fromX, fromY + leftRadius)\n    ctx.quadraticCurveTo(fromX, fromY, fromX + leftRadius, fromY)\n}\n\nexport function drawCheckboxes (ctx, offsetW, offsetH, maxWidth, checkboxes, checkboxHeight, checkboxRadius, checkboxMargin, checkboxFont, nightGrade) {\n\n    const ctxFont = ctx.font\n\n    ctx.font = (checkboxHeight / 2) + 'px ' + checkboxFont\n\n    let leftOffset = offsetW, topOffset = offsetH\n\n    for (let checkbox of checkboxes) {\n        const textWidth = ctx.measureText(checkbox.label).width\n        const width = textWidth + 1.5 * checkboxHeight\n        if (leftOffset + width + 1.5 * checkboxMargin > maxWidth) {\n            leftOffset = offsetW\n            topOffset = checkboxHeight + checkboxMargin\n        }\n        drawCheckbox(ctx, leftOffset, topOffset, width, checkboxHeight, checkboxRadius,\n            checkbox.label, textWidth, checkbox.getColor, checkbox.grade, nightGrade)\n        checkbox.x = leftOffset\n        checkbox.y = topOffset\n        checkbox.toX = leftOffset + width\n        checkbox.toY = topOffset + checkboxHeight\n        leftOffset += width + checkboxMargin\n    }\n\n    ctx.font = ctxFont\n}\n\nconst checkboxBorderWidth = fromCssSize(4)\n\nexport function drawCheckbox (ctx, offsetW, offsetH, width, height, radius, text, textWidth, getColor, grade, nightGrade) {\n\n    ctx.strokeStyle = getColor(0, 0)\n    ctx.lineWidth = checkboxBorderWidth\n\n    ctx.beginPath()\n    ctx.fillStyle = getColor(1 - grade, nightGrade)\n    drawRoundedRect(ctx, offsetW, offsetW + width, offsetH, offsetH + height, radius, radius)\n    ctx.closePath()\n    ctx.stroke()\n    ctx.fill()\n\n    ctx.fillStyle = getColor(grade, 0)\n    ctx.strokeStyle = ctx.fillStyle\n    ctx.fillText(text, offsetW + 0.75 * height + height * grade / 3, offsetH + 2/3 * height)\n\n    if (grade > 0.5) {\n        const checkGrade = 2 * (grade - 0.5)\n        ctx.lineWidth = checkboxBorderWidth / 2\n        ctx.beginPath()\n        const o = offsetW + height / 4\n        ctx.moveTo(o, offsetH + height / 2)\n        ctx.lineTo(o + height / 6, offsetH + height * 2/3)\n        ctx.lineTo(o + height / 6 + height / 3 * checkGrade, offsetH + height * 2/3 - height / 3 * checkGrade)\n        ctx.stroke()\n    }\n}\n\nconst legendPadding = fromCssSize(10)\nconst legendOffset = fromCssSize(10)\nconst crossRadius = fromCssSize(4)\n\nexport function drawRuller (ctx, offsetW, offsetH, rullerWidth, rullerHeight, width, left, right, range, position, getRullerColor, alphaGrade, nightGrade) {\n\n    const leftOffset = offsetW + (position - left) / (range) * width\n\n    ctx.lineWidth = rullerWidth\n    ctx.strokeStyle = getRullerColor(nightGrade, alphaGrade)\n    ctx.beginPath()\n    ctx.moveTo(leftOffset, offsetH)\n    ctx.lineTo(leftOffset, offsetH + rullerHeight)\n    ctx.stroke()\n}\n\nexport function drawLinesLegend (ctx, x, lineKinds, lineLabels, lineStates, lineGrades, lineColors, lineWidth,\n    position, closestIndex, offsetW, offsetH, left, right, range, width, height, xDiff,\n    paramKinds,\n    textSize, textFont, getLegendColor, getLegendBorderColor, getLegendFontColor, getBackgroundColor,\n    alphaGrade, nightGrade, coordinates, zoomGrade, format, drawArrow) {\n\n    const ctxFont = ctx.font\n\n    const legendFont = textSize + 'px ' + textFont\n\n    const timestamp = Math.floor(x[1] + xDiff * position)\n\n    const text = formatDate(timestamp, format)\n\n    const leftOffset = offsetW + (position - left) / (range) * width\n\n    ctx.font = 'bold ' + legendFont\n    let contentWidth = ctx.measureText(text).width + 3 * legendPadding\n    let contentHeight = textSize\n\n    let maxValueWidth = 0\n\n    let lowestTopOffset = height\n\n    for (let i = 0; i < lineKinds.length; i++) {\n\n        const lines = lineKinds[i]\n\n        for (const line of lines) {\n\n            const label = line[0]\n\n            if (lineStates[label] || lineGrades[label] > 0) {\n\n                const val = line[closestIndex]\n                const name = lineLabels[label]\n\n                ctx.font = legendFont\n                const nameWidth = ctx.measureText(name).width\n                ctx.font = 'bold ' + legendFont\n                const valWidth = ctx.measureText(val).width\n\n                contentHeight += legendPadding + textSize\n\n                const lineWidth = valWidth + nameWidth + legendPadding\n\n                if (lineWidth > contentWidth) {\n                    contentWidth = lineWidth\n                }\n\n                if (valWidth > maxValueWidth) {\n                    maxValueWidth = valWidth\n                }\n\n                let approxValue = val\n\n                if (x[closestIndex] > timestamp) {\n                    const lowerIndex = Math.max(1, closestIndex - 1)\n                    approxValue = approximateHeight(x, line, timestamp, lowerIndex, closestIndex)\n                } else if (x[closestIndex] < timestamp) {\n                    const upperIndex = Math.min(x.length - 1, closestIndex + 1)\n                    approxValue = approximateHeight(x, line, timestamp, closestIndex, upperIndex)\n                }\n\n                const param = paramKinds[i]\n\n                // const topOffset = height - (approxValue - currentMinHeight) * (height - topGraphOffsetH - bottomGraphOffsetH) / (currentMaxHeight - currentMinHeight)\n                // top, bottom, max, min\n                const topOffset = height - (approxValue - param[3]) * (height - param[0] - param[1]) / (param[2] - param[3])\n\n                if (topOffset < lowestTopOffset) {\n                    lowestTopOffset = topOffset\n                }\n            }\n        }\n    }\n\n    const legendWidth = contentWidth + 2 * legendPadding\n    const legendHeight = contentHeight + 2 * legendPadding\n\n    let legendOffsetLeft = leftOffset - legendWidth / 2\n\n    let additionalOffset = 0\n\n    if (lowestTopOffset - legendPadding < offsetH + legendHeight) {\n        additionalOffset = legendWidth / 2 + legendPadding\n    }\n\n    let nextOffset = legendOffsetLeft + additionalOffset\n\n    if (nextOffset < 0) {\n        additionalOffset = additionalOffset ? -additionalOffset : legendWidth / 2 + 10\n    }\n\n    const rightOverflow = nextOffset + legendWidth - width + offsetW\n\n    if (rightOverflow > 0) {\n        additionalOffset = additionalOffset ? -additionalOffset : -legendWidth / 2 - 10\n    }\n\n    legendOffsetLeft += additionalOffset\n\n    ctx.fillStyle = getLegendColor(nightGrade, alphaGrade)\n    ctx.strokeStyle = getLegendBorderColor(alphaGrade)\n    ctx.lineWidth = 1\n    ctx.beginPath()\n    coordinates.x = legendOffsetLeft\n    coordinates.toX = coordinates.x + legendWidth\n    coordinates.y = offsetH\n    coordinates.toY = coordinates.y + legendHeight\n    drawRoundedRect(ctx, coordinates.x, coordinates.toX, coordinates.y, coordinates.toY, controlRadius, controlRadius)\n    ctx.closePath()\n    ctx.fill()\n    ctx.stroke()\n\n    let textOffsetH = coordinates.y + legendPadding + textSize\n\n    ctx.fillStyle = getLegendFontColor(nightGrade, alphaGrade)\n    ctx.fillText(text, coordinates.x + legendPadding, textOffsetH)\n\n    if (drawArrow) {\n        ctx.beginPath()\n        const arrowSide = textSize / 2\n        ctx.moveTo(coordinates.toX - legendPadding - arrowSide, coordinates.y + legendPadding)\n        ctx.lineTo(coordinates.toX - legendPadding, coordinates.y + legendPadding + arrowSide)\n        ctx.lineTo(coordinates.toX - legendPadding - arrowSide, coordinates.y + legendPadding + textSize)\n        ctx.stroke()\n    }\n\n    textOffsetH += legendPadding + textSize\n\n    for (let lines of lineKinds) {\n        for (const line of lines) {\n\n            const label = line[0]\n\n            if (lineStates[label] || lineGrades[label] > 0) {\n\n                const value = line[closestIndex]\n                const name = lineLabels[label]\n\n                ctx.font = legendFont\n                ctx.fillStyle = getLegendFontColor(nightGrade, lineGrades[label] * alphaGrade)\n                ctx.fillText(name, coordinates.x + legendPadding, textOffsetH)\n\n                ctx.font = 'bold ' + legendFont\n                ctx.fillStyle = lineColors[label](lineGrades[label] * zoomGrade)\n                const valWidth = ctx.measureText(value).width\n                ctx.fillText(value, coordinates.x + legendPadding + contentWidth - valWidth, textOffsetH)\n\n                textOffsetH += legendPadding + textSize\n            }\n        }\n    }\n\n    ctx.font = ctxFont\n}\n\nexport function drawLinesCross (ctx, x, line, lineLabels, lineStates, lineGrades, lineColors, lineWidth,\n    position, closestIndex, offsetW, offsetH, left, right, range, width, height, xDiff,\n    topGraphOffsetH, bottomGraphOffsetH, currentMaxHeight, currentMinHeight,\n    getBackgroundColor, nightGrade, zoomGrade) {\n\n    if (zoomGrade < 1) { return }\n\n    if (currentMinHeight >= currentMaxHeight) {\n        return\n    }\n\n    const label = line[0]\n\n    const scaleY = (height - topGraphOffsetH - bottomGraphOffsetH) / (currentMaxHeight - currentMinHeight)\n    const leftOffset = offsetW + (position - left) / (range) * width\n\n    const timestamp = Math.floor(x[1] + xDiff * position)\n\n    if (lineStates[label] || lineGrades[label] > 0) {\n\n        const value = line[closestIndex]\n        ctx.strokeStyle = lineColors[label](lineGrades[label] * zoomGrade)\n\n        let approxValue = value\n\n        if (x[closestIndex] > timestamp) {\n            const lowerIndex = Math.max(1, closestIndex - 1)\n            approxValue = approximateHeight(x, line, timestamp, lowerIndex, closestIndex)\n        } else if (x[closestIndex] < timestamp) {\n            const upperIndex = Math.min(x.length - 1, closestIndex + 1)\n            approxValue = approximateHeight(x, line, timestamp, closestIndex, upperIndex)\n        }\n\n        const topOffset = offsetH + height - bottomGraphOffsetH - (approxValue - currentMinHeight) * scaleY\n\n        ctx.fillStyle = getBackgroundColor(nightGrade)\n        ctx.lineWidth = lineWidth\n        ctx.beginPath()\n        ctx.arc(leftOffset, topOffset, crossRadius, 0, 2 * Math.PI)\n        ctx.fill()\n        ctx.stroke()\n    }\n}\n\nfunction approximateHeight (x, line, timestamp, lowerIndex, upperIndex) {\n    const affinity = (timestamp - x[lowerIndex]) / (x[upperIndex] - x[lowerIndex])\n    return line[lowerIndex] + (line[upperIndex] - line[lowerIndex]) * affinity\n}\n\nexport function drawHeader (ctx, offsetW, offsetH, headerHeight, fontSize, font, text, getColor, nightGrade, zoomGrade) {\n\n    let ctxFont = ctx.font\n\n    ctx.fillStyle = getColor(nightGrade, zoomGrade)\n    ctx.font = 'bold ' + fontSize + 'px ' + font\n\n    ctx.fillText(text, offsetW, offsetH + (headerHeight + fontSize) / 2)\n\n    ctx.font = ctxFont\n}\n\nconst magnifierLineWidth = fromCssSize(2)\n\nexport function drawZoomOutControl (ctx, offsetW, offsetH, headerHeight, fontSize, font, getColor, nightGrade, zoomGrade, coords) {\n\n    let ctxFont = ctx.font\n\n    ctx.fillStyle = getColor(nightGrade, zoomGrade)\n    ctx.strokeStyle = ctx.fillStyle\n    ctx.font = 'bold ' + fontSize + 'px ' + font\n\n    const magnifierHeight = fontSize + 2 * magnifierLineWidth\n    const magnifierRadius = (fontSize - 2 * magnifierLineWidth) / 2\n\n    ctx.lineWidth = magnifierLineWidth\n    ctx.beginPath()\n\n    ctx.arc(offsetW + magnifierRadius, headerHeight / 2, magnifierRadius, 0, 2 * Math.PI)\n    ctx.moveTo(offsetW + magnifierRadius - 1.5 * magnifierLineWidth, headerHeight / 2)\n    ctx.lineTo(offsetW + magnifierRadius + 1.5 * magnifierLineWidth, headerHeight / 2)\n    ctx.moveTo(offsetW + 1.5 * magnifierRadius, headerHeight / 2 + 0.5 * magnifierRadius)\n    ctx.lineTo(offsetW + 2.5 * magnifierRadius, headerHeight / 2 + 1.5 * magnifierRadius)\n\n    ctx.stroke()\n\n    const zoomOutText = 'Zoom Out'\n\n    coords.x = offsetW\n    coords.toX = offsetW + ctx.measureText(zoomOutText).width + magnifierHeight\n    coords.y = offsetH\n    coords.toY = coords.y + headerHeight\n\n    ctx.fillText(zoomOutText, offsetW + magnifierHeight, offsetH + (headerHeight + fontSize) / 2)\n\n    ctx.font = ctxFont\n}\n\nexport function drawDateRangeSummary (ctx, offsetW, offsetH, width, headerHeight, headerFontSize, baseDate, xDiff, left, right, isRange, fontSize, font, getColor, nightGrade, zoomGrade) {\n\n    let ctxFont = ctx.font\n\n    ctx.fillStyle = getColor(nightGrade, zoomGrade)\n    ctx.font = 'bold ' + fontSize + 'px ' + font\n\n    const leftTimestamp = baseDate + xDiff * left\n    const rightTimestamp = baseDate + xDiff * right\n\n    let text\n\n    if (isRange) {\n        text = formatDate(leftTimestamp, 'date') + ' - ' + formatDate(rightTimestamp, 'date')\n    } else {\n        text = formatDate((leftTimestamp + rightTimestamp) / 2, 'weekdate')\n    }\n\n    ctx.fillText(text, offsetW + width - ctx.measureText(text).width, offsetH + (headerHeight + fontSize) / 2 + (headerFontSize - fontSize) / 2)\n\n    ctx.font = ctxFont\n}\n\nexport function drawStackedBars(ctx, x, bars, summedBars, lineStates, lineGrades, lineColors,\n        width, height, offsetW, offsetH, pickedIndex,\n        left, right, maxHeight, zoomGrade, nightGrade, shrink) {\n\n    const scaleX = width / (right - left) / (x.length - 1)\n    const scaleY = height / maxHeight\n    const offsetLeft = -left * width / (right - left) + offsetW - scaleX\n    const offsetTop = offsetH + height\n\n    const fromIndex = getLowerIndex(x, left - offsetW / width)\n    const toIndex = getUpperIndex(x, right + offsetW / width)\n\n    let values = new Array(toIndex - fromIndex + 1)\n\n    let pickedAlpha = pickedIndex > 0 ? 1 : 0\n\n    let pickedVal = summedBars[pickedIndex - fromIndex + 1]\n\n    for (let j = bars.length - 1; j >= 0; j--) {\n\n        const bar = bars[j]\n\n        const label = bar[0]\n\n        ctx.beginPath()\n        ctx.fillStyle = lineColors[label](pickedAlpha, nightGrade, zoomGrade)\n\n        const dY = bar[fromIndex] * lineGrades[label]\n\n        let prevX = offsetLeft + scaleX * fromIndex\n        let prevY = offsetTop - summedBars[1] * scaleY\n\n        summedBars[1] -= dY\n\n        ctx.moveTo(prevX, prevY)\n        prevX += scaleX\n        ctx.lineTo(prevX, prevY)\n\n        for (let i = fromIndex + 1; i <= toIndex; i++) {\n\n            const dY = bar[i] * lineGrades[label]\n            let prevY = offsetTop - summedBars[i - fromIndex + 1] * scaleY\n            summedBars[i - fromIndex + 1] -= dY\n\n            ctx.lineTo(prevX, prevY)\n            prevX = prevX + scaleX\n            ctx.lineTo(prevX, prevY)\n        }\n\n        ctx.lineTo(prevX, offsetTop)\n        ctx.lineTo(offsetLeft + scaleX, offsetTop)\n        ctx.closePath()\n        ctx.fill()\n    }\n\n    if (pickedIndex >= fromIndex && pickedIndex <= toIndex) {\n\n        for (let j = bars.length - 1; j >= 0; j--) {\n\n            const bar = bars[j]\n\n            const label = bar[0]\n\n            ctx.beginPath()\n            ctx.fillStyle = lineColors[label](0, nightGrade, zoomGrade)\n\n            const dY = bar[pickedIndex] * lineGrades[label]\n\n            let prevX = offsetLeft + scaleX * pickedIndex\n            let prevY = offsetTop - pickedVal * scaleY\n\n            pickedVal -= dY\n\n            ctx.moveTo(prevX, prevY)\n            prevX += scaleX\n            ctx.lineTo(prevX, prevY)\n\n            ctx.lineTo(prevX, offsetTop)\n            ctx.lineTo(prevX - scaleX, offsetTop)\n            ctx.closePath()\n            ctx.fill()\n        }\n    }\n}\n\nexport function getLowerIndex (x, procent) {\n    const val = x[1] + (x[x.length - 1] - x[1]) * procent\n    const idx = binarySearch(x, val, 1)\n    return x[idx] > val ? Math.max(idx - 1, 1) : idx\n}\n\nexport function getUpperIndex (x, procent) {\n    const val = x[1] + (x[x.length - 1] - x[1]) * procent\n    const idx = binarySearch(x, val, 1)\n    return x[idx] < val ? Math.min(idx + 1, x.length - 1) : idx\n}\n\n\nexport function getClosestIndex (x, procent) {\n    const val = x[1] + (x[x.length - 1] - x[1]) * procent\n    return binarySearch(x, val, 1)\n}\n\nfunction binarySearch (arr, val, i = 0) {\n\n    const len = arr.length\n\n    let j = len - 1\n\n    while (i < j) {\n        const m = (j + i) >>> 1\n        const v = arr[m]\n        if (v > val) {\n            j = m - 1\n        } else if (v < val) {\n            i = m + 1\n        } else {\n            return m\n        }\n    }\n\n    const diff = val - arr[i]\n\n    if (diff > 0) {\n        return i < len - 1 && diff > arr[i+1] - val ? i + 1 : i\n    } else {\n        return i > 0 && diff < arr[i-1] - val ? i - 1 : i\n    }\n}\n\nexport function getMaxY (x, lines, lineStates, left, right) {\n\n    let max = 0\n\n    const from = getLowerIndex(x, left)\n    const to = getUpperIndex(x, right)\n\n    for (const line of lines) {\n\n        if (!lineStates[line[0]]) {\n            continue\n        }\n\n        for (let i = from; i < to; i++) {\n            if (line[i] > max) {\n                max = line[i]\n            }\n        }\n    }\n\n    return max\n}\n\nexport function getMinY (x, lines, lineStates, left, right) {\n\n    let min = Infinity\n\n    const from = getLowerIndex(x, left)\n    const to = getUpperIndex(x, right)\n\n    for (const line of lines) {\n\n        if (!lineStates[line[0]]) {\n            continue\n        }\n\n        for (let i = from; i < to; i++) {\n            if (line[i] < min) {\n                min = line[i]\n            }\n        }\n    }\n\n    return min\n}\n\nexport function sumBars (x, bars, barGrades, left, right) {\n\n    const from = getLowerIndex(x, left)\n    const to = getUpperIndex(x, right)\n\n    const result = new Array(to - from + 2)\n\n    result[0] = 0\n\n    for (let i = from; i <= to; i++) {\n        let sum = 0\n        for (let j = 1; j < bars.length; j++) {\n            sum += bars[j][i] * barGrades[bars[j][0]]\n        }\n        result[i - from + 1] = sum\n        if (sum > result[0]) {\n            result[0] = sum\n        }\n    }\n\n    return result\n}\n\nfunction colorFromRGBA (r, g, b, a) {\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')'\n}\n\nexport function animatableAlphaHEXcolor (hex, alpha) {\n\n    const R = getR(hex)\n    const G = getG(hex)\n    const B = getB(hex)\n\n    return function (grade) {\n        return colorFromRGBA(R, G, B, alpha * grade)\n    }\n}\n\nexport function animatableHexColor (fromHex, fromAlpha, toHex, toAlpha) {\n\n    const fromR = getR(fromHex)\n    const fromG = getG(fromHex)\n    const fromB = getB(fromHex)\n    const dR = getR(toHex) - fromR\n    const dG = getG(toHex) - fromG\n    const dB = getB(toHex) - fromB\n    const dAlpha = toAlpha - fromAlpha\n\n    return function (grade, alphaGrade = 1) {\n        return colorFromRGBA(\n            fromR + dR * grade,\n            fromG + dG * grade,\n            fromB + dB * grade,\n            (fromAlpha + dAlpha * grade) * alphaGrade\n        )\n    }\n}\n\nexport function dynamicHexColor (fromHex, fromAlpha, toHex, toAlpha, toAltHex, toAltAlpha) {\n\n    const fromR = getR(fromHex)\n    const fromG = getG(fromHex)\n    const fromB = getB(fromHex)\n    const toDR = getR(toHex) - fromR\n    const toDG = getG(toHex) - fromG\n    const toDB = getB(toHex) - fromB\n    const toAltDR = getR(toAltHex) - fromR\n    const toAltDG = getG(toAltHex) - fromG\n    const toAltDB = getB(toAltHex) - fromB\n    const toDAlpha = toAlpha - fromAlpha\n    const toDAltAlpha = toAltAlpha - fromAlpha\n\n    return function (grade, pickGrade = 0, alphaGrade = 1) {\n        const notPickGrade = 1 - pickGrade\n        return colorFromRGBA(\n            (fromR + toDR * grade) * notPickGrade +\n            (fromR + toAltDR * grade) * pickGrade,\n            (fromG + toDG * grade) * notPickGrade +\n            (fromG + toAltDG * grade) * pickGrade,\n            (fromB + toDB * grade) * notPickGrade +\n            (fromB + toAltDB * grade) * pickGrade,\n            ((fromAlpha + toDAlpha * grade) * notPickGrade +\n            (fromAlpha + toDAltAlpha * grade) * pickGrade) * alphaGrade\n        )\n    }\n}\n\nfunction getR (hex) {\n    return parseInt(hex.slice(1, 3), 16)\n}\n\nfunction getG (hex) {\n    return parseInt(hex.slice(3, 5), 16)\n}\n\nfunction getB (hex) {\n    return parseInt(hex.slice(5), 16)\n}\n\nfunction getDataType (data, type) {\n    const result = []\n    for (let column of data.columns) {\n        if (data.types[column[0]] === type) {\n            result.push(column)\n        }\n    }\n    return result\n}\n\nexport function getLines (data) {\n    return getDataType(data, 'line')\n}\n\nexport function getBars (data) {\n    return getDataType(data, 'bar')\n}\n\nexport function getX (data) {\n    for (let column of data.columns) {\n        if (data.types[column[0]] === 'x') {\n            return column\n        }\n    }\n}\n\nexport function dynamicHexColorWithBlending (fromHex, fromAlpha, mask1, alpha1, mask2, alpha2) {\n\n    const [ toHex, toAlpha ] = blendColors(fromHex, fromAlpha, mask1, alpha1)\n    const [ toAltHex, toAltAlpha ] = blendColors(fromHex, fromAlpha, mask2, alpha2)\n\n    return dynamicHexColor(fromHex, fromAlpha, toHex, toAlpha, toAltHex, toAltAlpha)\n}\n\n\nfunction blendColors (hex, a1, mask, a2) {\n\n    const r1 = getR(hex)\n    const g1 = getG(hex)\n    const b1 = getB(hex)\n    const r2 = getR(mask)\n    const g2 = getG(mask)\n    const b2 = getB(mask)\n\n    const a = 1 - (1 - a1) * (1 - a2)\n    const da2 = a2 / a\n    const da1 = a1 * (1 - a2) / a\n\n    const r = (r2 * da2 + r1 * da1) | 0\n    const g = (g2 * da2 + g1 * da1) | 0\n    const b = (b2 * da2 + b1 * da1) | 0\n\n    return [toHex(r, g, b), a]\n}\n\nfunction toHex (r, g, b) {\n    return [\n        '#',\n        padHexComponent(r.toString(16)),\n        padHexComponent(g.toString(16)),\n        padHexComponent(b.toString(16)),\n    ].join('')\n}\n\nfunction padHexComponent (c) {\n    return c.length > 1 ? c : '0' + c\n}\n","import {\n\n    getX,\n\n    controlWidth,\n    previewPadding,\n    calcYAlignment,\n\n    animatableAlphaHEXcolor,\n    animatableHexColor,\n    dynamicHexColor,\n\n    fromCssSize,\n    toCssSize,\n    getMaxY,\n    getMinY,\n    getClosestIndex,\n    getLowerIndex,\n    getUpperIndex,\n    drawLines,\n    drawScrollControlls,\n    drawGrid,\n    drawTranslateYLabels,\n    drawDates,\n    drawCheckboxes,\n    drawLinesLegend,\n    drawHeader,\n    drawZoomOutControl,\n    drawDateRangeSummary,\n    drawRuller,\n    drawLinesCross,\n} from './utils'\n\nexport default class AnimatedCanvas {\n\n    constructor (data, options) {\n\n        this.animations = {}\n        this.running = false\n        this.prevMs = undefined\n\n        this.el = document.createElement('div')\n        this.el.className = 'chart'\n\n        this.canvasEl = document.createElement('canvas')\n        this.ctx = this.canvasEl.getContext('2d')\n\n        this.el.appendChild(this.canvasEl)\n\n        this.setFont(options)\n        this.setSize(options)\n\n        this.headerText = options.header\n\n        this.details = data.details\n\n        data = data.overview\n\n        this.x = getX(data)\n\n        this.xDiff = this.x[this.x.length - 1] - this.x[1]\n\n        this.lineStates = {}\n        this.lineGrades = {}\n        this.lineColors = {}\n        this.lineLabels = data.names\n        this.checkboxes = []\n        this.checkboxLabelToIndex = {}\n        let i = 0\n        for (let label in data.names) {\n            this.lineStates[label] = true\n            this.lineGrades[label] = 1\n            this.lineColors[label] = animatableAlphaHEXcolor(data.colors[label], 1)\n            this.checkboxLabelToIndex[label] = i++\n            this.checkboxes.push({\n                id: label,\n                label: data.names[label],\n                getColor: dynamicHexColor(data.colors[label], 1, '#FFFFFF', 1, '#26333F', 1),\n                grade: 1,\n                x: 0,\n                y: 0,\n                toX: 0,\n                toY: 0,\n            })\n        }\n\n        this.currentLeft = this.scrollLeft = options.from\n        this.currentRight = this.scrollRight = options.to\n        this.currentRange = options.to - options.from\n\n        this.currentMaxHeight = this.fromMaxHeight = this.toMaxHeight = 0\n        this.maxHeight = 0\n\n        this.currentMinHeight = this.fromMinHeight = this.toMinHeight = 0\n        this.minHeight = 0\n\n        this.fromPeriod = this.toPeriod = 0\n        this.datesGrade = 1\n\n        this.moveDir = 'no'\n\n        this.legendShown = false\n        this.legendMoving = false\n        this.legendPosition = 0\n        this.pickedIndex = 0\n        this.legendCoordinates = {}\n\n        this.nightGrade = 0\n\n        this.zoomFromGrade = 1\n        this.zoomToGrade = 0\n        this.zoomedIndex = -1\n        this.zoomedData = null\n        this.ref = this\n        this.zoomState = 'overview'\n        this.zoomOutCoords = {}\n\n        this.yAlign = { top: 0, bottom: 0 }\n\n        this.el.addEventListener('mousedown', e => this.onMouseDown(e))\n        this.el.addEventListener('mousemove', e => this.onMouseMove(e))\n        this.el.addEventListener('mouseup', e => this.onMouseUp(e))\n        this.el.addEventListener('mouseleave', e => this.onMouseLeave(e))\n\n        this.el.addEventListener('touchstart', e => this.onTouchStart(e))\n        this.el.addEventListener('touchmove', e => this.onTouchMove(e))\n        this.el.addEventListener('touchend', e => this.onTouchEnd(e))\n\n        this.animationDurationMs = 250\n\n        this.getGridColor = animatableHexColor('#182D3B', 0.1, '#FFFFFF', 0.1)\n        this.getAxisColor = animatableHexColor('#8E8E93', 1, '#A3B1C2', 0.6)\n        this.getRullerColor = animatableHexColor('#182D3B', 0.1, '#FFFFFF', 0.1)\n        this.getLegendBorderColor = animatableAlphaHEXcolor('#1E1E1E', 0.2)\n        this.getLegendFontColor = animatableHexColor('#000000', 1, '#FFFFFF', 1)\n        this.getLegendColor = animatableHexColor('#FFFFFF', 1, '#1F2A35', 1)\n        this.getBackgroundColor = animatableHexColor('#FFFFFF', 1, '#26333F', 1)\n        this.getPreviewBlurColor = animatableHexColor('#E2EEF9', 0.6, '#304259', 0.6)\n        this.getPreviewControlColor = animatableHexColor('#C0D1E1', 1, '#56626D', 1)\n        this.getZoomOutColor = animatableHexColor('#108BE3', 1, '#48AAF0', 1)\n    }\n\n    animate () {\n\n        if (this.running) {\n            return\n        }\n\n        this.running = true\n\n        const step = (ms) => {\n\n            if (!this.prevMs) {\n                this.prevMs = ms\n                requestAnimationFrame(step)\n                return\n            }\n\n            const diffMs = ms - this.prevMs\n            this.prevMs = ms\n\n            if (diffMs === 0) {\n                requestAnimationFrame(step)\n                return\n            }\n\n            let hasAnimations = false\n\n            for (const uniqName in this.animations) {\n                const anim = this.animations[uniqName]\n                if (!anim || anim.from === anim.to || anim.from === Infinity || anim.to === Infinity) {\n                    this.animations[uniqName] = null\n                    continue\n                }\n                hasAnimations = true\n                anim.container[anim.prop] += (anim.to - anim.from) * diffMs / anim.duration\n                if ((anim.container[anim.prop] - anim.from) / (anim.to - anim.from) >= 1) {\n                    anim.container[anim.prop] = anim.to\n                    anim.from = anim.to\n                }\n            }\n\n            if (hasAnimations) {\n                requestAnimationFrame(step)\n            } else {\n                this.prevMs = undefined\n                this.running = false\n            }\n\n            this.render()\n        }\n\n        requestAnimationFrame(step)\n    }\n\n    addAnimation (container, prop, to, duration, uniqName) {\n        this.animations[uniqName || prop] = {\n            container,\n            prop,\n            from: container[prop],\n            to,\n            duration\n        }\n    }\n\n    cancelAnimation (uniqName) {\n        delete this.animations[uniqName]\n    }\n\n    setSize (options) {\n\n        this.setBasicSizes(options)\n        this.setWidth(options.width)\n\n        this.height = fromCssSize(options.height)\n        this.canvasEl.height = this.height\n        this.canvasEl.style.height = options.height + 'px'\n\n        const previewOffsetH = options.headerHeight + options.height + options.fontSize * 2\n        const checkboxesOffsetH = previewOffsetH + options.previewHeight + options.padH\n        const height = checkboxesOffsetH + options.checkboxesAreaHeight\n\n        this.height = fromCssSize(height)\n        this.canvasEl.height = fromCssSize(height)\n        this.canvasEl.style.height = height + 'px'\n\n        this.chartHeight = fromCssSize(options.height - 2 * options.padH)\n        this.mainLinesOffsetH = this.headerHeight + this.padH\n        this.datesOffsetH = this.headerHeight + this.chartHeight + this.padH + 1.5 * this.textSize\n        this.previewOffsetH = fromCssSize(previewOffsetH)\n        this.checkboxesOffsetH = fromCssSize(checkboxesOffsetH)\n\n        this.border = null\n    }\n\n    setFont (options) {\n        this.textSize = fromCssSize(options.fontSize)\n        this.textFont = options.fontFamily\n        this.ctxFont = this.textSize + 'px ' + options.fontFamily\n        this.ctx.font = this.ctxFont\n    }\n\n    setWidth (width, resize) {\n\n        this.width = fromCssSize(width)\n        this.canvasEl.width = this.width\n        this.canvasEl.style.width = width + 'px'\n\n        this.chartWidth = this.width - 2 * this.padW\n\n        this.ctx.font = this.ctxFont\n        this.ctx.lineJoin = 'bevel'\n\n        if (resize) {\n            this.border = null\n            this.render()\n        }\n    }\n\n    setBasicSizes (options) {\n        this.padW = fromCssSize(options.padW)\n        this.padH = fromCssSize(options.padH)\n        this.datesDiff = fromCssSize(options.datesDiff)\n        this.previewPadW = fromCssSize(options.previewPadW)\n        this.previewPadH = fromCssSize(options.previewPadH)\n        this.previewHeight = fromCssSize(options.previewHeight)\n        this.checkboxHeight = fromCssSize(options.checkboxHeight)\n        this.checkboxRadius = fromCssSize(options.checkboxRadius)\n        this.checkboxMargin = fromCssSize(options.checkboxMargin)\n        this.lineWidth = fromCssSize(options.lineWidth)\n        this.rullerWidth = fromCssSize(options.rullerWidth)\n        this.previewLineWidth = fromCssSize(options.previewLineWidth)\n        this.gridLineWidth = fromCssSize(options.gridLineWidth)\n        this.legendTextSize = fromCssSize(options.legendFontSize)\n        this.headerFontSize = fromCssSize(options.headerFontSize)\n        this.dateRangeFontSize = fromCssSize(options.dateRangeFontSize)\n        this.headerHeight = fromCssSize(options.headerHeight)\n    }\n\n    move (ref, left, right) {\n        ref.currentLeft = left\n        ref.currentRight = right\n        ref.currentRange = right - left\n        this.animate()\n    }\n\n    toggle (label) {\n        this.lineStates[label] = !this.lineStates[label]\n        const to = +this.lineStates[label]\n        this.addAnimation(this.lineGrades, label, to, this.animationDurationMs)\n        this.addAnimation(this.checkboxes[this.checkboxLabelToIndex[label]], 'grade', to, this.animationDurationMs, 'checkbox_' + label)\n        this.animate()\n    }\n\n    zoom (index, direction) {\n\n        if (direction) {\n            this.addAnimation(this, 'zoomFromGrade', 0, this.animationDurationMs)\n            if (index !== this.zoomedIndex) {\n                this.zoomedData = this.getDetails(index)\n                this.zoomedIndex = index\n            }\n            this.ref = this.zoomedData\n            this.addAnimation(this, 'zoomToGrade', 1, this.animationDurationMs)\n            this.zoomState = 'details'\n        } else {\n            this.ref = this\n            this.addAnimation(this, 'zoomFromGrade', 1, this.animationDurationMs)\n            this.addAnimation(this, 'zoomToGrade', 0, this.animationDurationMs)\n            this.zoomState = 'overview'\n        }\n\n        this.animate()\n    }\n\n    render () {\n\n        this.ctx.clearRect(0, 0, this.width, this.height)\n\n        if (this.zoomFromGrade > 0) {\n            this.calc(this)\n\n            drawHeader(this.ctx, this.padW, 0, this.headerHeight, this.headerFontSize, this.textFont, this.headerText, this.getLegendFontColor, this.nightGrade, this.zoomFromGrade)\n            drawDateRangeSummary(this.ctx, this.padW, 0, this.chartWidth, this.headerHeight, this.headerFontSize, this.x[1], this.xDiff, this.currentLeft, this.currentRight, true, this.dateRangeFontSize, this.textFont, this.getLegendFontColor, this.nightGrade, this.zoomFromGrade)\n\n            this.drawView(this, false, 'monthdate', 'shortweekdate', this.zoomFromGrade)\n        }\n\n        if (this.zoomToGrade > 0) {\n            const details = this.zoomedData\n            this.calc(details)\n\n            drawZoomOutControl(this.ctx, this.padW, 0, this.headerHeight, this.headerFontSize, this.textFont, this.getZoomOutColor, this.nightGrade, this.zoomToGrade, this.zoomOutCoords)\n            drawDateRangeSummary(this.ctx, this.padW, 0, this.chartWidth, this.headerHeight, this.headerFontSize, details.x[1], details.xDiff, details.currentLeft, details.currentRight, false, this.dateRangeFontSize, this.textFont, this.getLegendFontColor, this.nightGrade, this.zoomToGrade)\n\n            this.drawView(details, true, 'hours', 'hours', this.zoomToGrade)\n        }\n\n        // redraw only if checked\n        drawCheckboxes(this.ctx, this.padW, this.checkboxesOffsetH, this.chartWidth,\n            this.checkboxes, this.checkboxHeight, this.checkboxRadius, this.checkboxMargin, this.textFont, this.nightGrade)\n    }\n\n    drawView (ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade) {\n\n        this.drawGrid(ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade)\n\n        this.drawChart(ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade)\n\n        this.drawDates(ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade)\n\n        this.drawPreview(ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade)\n\n        this.drawScroll(ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade)\n\n        if (ref.legendShown && (zoomGrade < 1 || (ref.legendPosition >= ref.currentLeft && ref.legendPosition <= ref.currentRight))) {\n            this.drawLegend(ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade)\n        }\n    }\n\n    drawGrid (ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade) {\n\n        drawGrid(this.ctx, this.padW, this.headerHeight, this.chartWidth, this.chartHeight + this.padH, 5,\n            ref.fromMaxHeight, ref.toMaxHeight, ref.currentMaxHeight,\n            ref.fromMinHeight, ref.toMinHeight, ref.currentMinHeight,\n            ref.yAlign.max, ref.yAlign.min, ref.yAlign.top, ref.yAlign.bottom,\n            this.getGridColor, this.getAxisColor, false, 1, this.gridLineWidth, this.textSize, this.nightGrade, zoomGrade)\n    }\n\n    drawChart (ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade) {}\n\n    drawDates (ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade) {\n\n        // redraw only if moving\n        drawDates(this.ctx, this.padW, this.datesOffsetH,\n            this.chartWidth / ref.currentRange, ref.x[1], ref.xDiff, yAxisdateFormat, ref.currentLeft, ref.currentRight,\n            this.fromPeriod, this.toPeriod, this.datesGrade, this.getAxisColor, this.nightGrade, zoomGrade)\n    }\n\n    drawPreview (ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade) {}\n\n    drawScroll (ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade) {\n\n        // redraw only if moving or checked\n        drawScrollControlls(this.ctx, this.padW, this.previewOffsetH, this.chartWidth, this.previewHeight,\n            ref.currentLeft, ref.currentRight, this.getPreviewBlurColor, this.getPreviewControlColor, this.nightGrade, zoomGrade)\n    }\n\n    drawLegend (ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade) {}\n\n    calc (ref) {\n        this.calcDates(ref)\n    }\n\n    calcDates (ref) {\n\n        if (ref.currentRange < (1 / ref.x.length)) {\n            ref.fromPeriod = 0\n            return\n        }\n\n        if (ref.fromPeriod === 0) {\n            ref.fromPeriod = ref.toPeriod =\n                this.datesDiff * (ref.currentRange) / this.chartWidth\n        }\n\n        const currentDiff = ref.toPeriod * this.chartWidth / ref.currentRange\n\n        if (currentDiff >= 2 * this.datesDiff) {\n            const uniqName = this.zoomState + 'datesGrade'\n            ref.fromPeriod = ref.toPeriod\n            ref.toPeriod = ref.toPeriod / 2\n            ref.datesGrade = 0\n            this.addAnimation(ref, 'datesGrade', 1, this.animationDurationMs, uniqName)\n            this.animate()\n        } else if (currentDiff < this.datesDiff) {\n            const uniqName = this.zoomState + 'datesGrade'\n            ref.fromPeriod = ref.toPeriod\n            ref.toPeriod = ref.toPeriod * 2\n            this.datesGrade = 0\n            this.addAnimation(ref, 'datesGrade', 1, this.animationDurationMs, uniqName)\n            this.animate()\n        }\n    }\n\n    mergeZoomedColumns (from, to) {\n\n        const columns = [], lineIdToIndexMap = {}\n\n        for (let i = from; i <= to; i++) {\n            const timestamp = this.x[i]\n            const details = this.details[timestamp]\n            for (const column of details.columns) {\n                if (lineIdToIndexMap[column[0]] === undefined) {\n                    lineIdToIndexMap[column[0]] = columns.length\n                    columns.push(column.slice())\n                } else {\n                    let k = column.length\n                    const to = columns[lineIdToIndexMap[column[0]]]\n                    const offset = to.length - 1\n                    while (k-- > 1) {\n                        to[offset + k] = column[k]\n                    }\n                }\n            }\n        }\n\n        return columns\n    }\n\n    getDetails (index) {\n\n        let fromLeft = index - 3\n        let toRight = index + 3\n\n        if (fromLeft < 1) {\n            toRight += 1 - fromLeft\n            fromLeft = 1\n        } else if (toRight >= this.x.length) {\n            fromLeft -= toRight - this.x.length + 1\n            toRight = this.x.length - 1\n        }\n\n        let scrollLeft, scrollRight\n        const currentLeft = scrollLeft = (index - fromLeft) / 7\n        const currentRight = scrollRight = currentLeft + 1 / 7\n        const currentRange = currentRight - currentLeft\n\n        return {\n            fromLeft, toRight,\n            currentLeft, currentRight, currentRange,\n\n            lineStates: this.lineStates,\n            fromPeriod: 0,\n            toPeriod: 0,\n            datesGrade: 1,\n\n            moveDir: 'no',\n            scrollStart: 0,\n            scrollLeft, scrollRight,\n\n            legendShown: false,\n            legendMoving: false,\n            legendCoordinates: {},\n            pickedIndex: -1,\n            legendPosition: 0,\n            yAlign: {},\n        }\n    }\n\n    setNoMove (ref) {\n        ref.moveDir = 'no'\n        ref.scrollLeft = ref.currentLeft\n        ref.scrollRight = ref.currentRight\n    }\n\n    setMoveDir (ref, dir, position) {\n        ref.moveDir = dir\n        ref.scrollStart = position\n        ref.scrollLeft = ref.currentLeft\n        ref.scrollRight = ref.currentRight\n    }\n\n    setMove (ref, movePosition) {\n\n        if (ref.moveDir === 'no') {\n            return\n        }\n\n        let from = ref.scrollLeft, to = ref.scrollRight\n\n        const offsetDiff = fromCssSize(movePosition - ref.scrollStart)\n        const dOffset = offsetDiff / this.chartWidth\n        const bound = 2 * controlWidth / this.chartWidth\n\n        if (ref.moveDir === 'left') {\n            from += dOffset\n            if (from + bound > to) {\n                from = to - bound\n            }\n            if (from < 0) {\n                from = 0\n            }\n        } else if (ref.moveDir === 'right') {\n            to += dOffset\n            if (from + bound > to) {\n                to = from + bound\n            }\n            if (to > 1) {\n                to = 1\n            }\n        } else {\n            from += dOffset\n            to += dOffset\n            if (from < 0) {\n                to = to - from\n                from = 0\n            }\n            if (to > 1) {\n                from = from - (to - 1)\n                to = 1\n            }\n        }\n\n        this.move(ref, from, to)\n    }\n\n    getDir (ref, x, y) {\n\n        const border = this.getBoundingClientRect()\n\n        const canvasX = fromCssSize(x - border.left)\n        const canvasY = fromCssSize(y - border.top)\n\n        const fromW = this.padW + ref.currentLeft * this.chartWidth - controlWidth\n        const toW = this.padW + ref.currentRight * this.chartWidth + controlWidth\n        const fromH = this.previewOffsetH - previewPadding\n        const toH = this.previewOffsetH + this.previewHeight + previewPadding\n\n        if (canvasX < fromW || canvasX > toW || canvasY < fromH || canvasY > toH) {\n            return 'no'\n        }\n\n        if (canvasX < fromW + 2 * controlWidth) {\n            return 'left'\n        } else if (canvasX > toW - 2 * controlWidth) {\n            return 'right'\n        } else {\n            return 'both'\n        }\n    }\n\n    getLabel (x, y) {\n\n        const border = this.getBoundingClientRect()\n\n        const canvasX = fromCssSize(x - border.left)\n        const canvasY = fromCssSize(y - border.top)\n\n        if (canvasY < this.checkboxesOffsetH) {\n            return\n        }\n        for (const c of this.checkboxes) {\n            if (c.x <= canvasX && c.toX >= canvasX && c.y <= canvasY && c.toY >= canvasY ) {\n                return c.id\n            }\n        }\n\n        return\n    }\n\n    setScroll (ref, e) {\n        const dir = this.getDir(ref, e.clientX, e.clientY)\n        if (dir === 'no') {\n            return\n        }\n        this.setMoveDir(ref, dir, e.clientX)\n    }\n\n    clickCheckbox (e) {\n        const label = this.getLabel(e.clientX, e.clientY)\n        if (label) {\n            this.toggle(label)\n        }\n    }\n\n    clickZoomOut (e) {\n\n        const border = this.getBoundingClientRect()\n\n        const canvasX = fromCssSize(e.clientX - border.left)\n        const canvasY = fromCssSize(e.clientY - border.top)\n\n        const c = this.zoomOutCoords\n\n        if (c.x <= canvasX && c.toX >= canvasX && c.y <= canvasY && c.toY >= canvasY ) {\n            this.zoom(this.pickedIndex, false)\n        }\n    }\n\n    clickLegend (ref, e) {\n\n        if (!ref.legendShown) {\n            return false\n        }\n\n        const border = this.getBoundingClientRect()\n\n        const canvasX = fromCssSize(e.clientX - border.left)\n        const canvasY = fromCssSize(e.clientY - border.top)\n\n        const c = ref.legendCoordinates\n\n        if (canvasX >= c.x && canvasX <= c.toX && canvasY >= c.y && canvasY <= c.toY) {\n            if (ref === this) {\n                this.zoom(this.pickedIndex, true)\n            }\n            return true\n        }\n\n        return false\n    }\n\n    showLegend (ref, e) {\n\n        if (ref.moveDir !== 'no') {\n            return\n        }\n\n        const bound = this.el.getBoundingClientRect()\n\n        const canvasY = fromCssSize(e.clientY - bound.top)\n\n        if (canvasY > this.padH + this.chartHeight || canvasY < this.legendCoordinates.y) {\n            return\n        }\n\n        const offsetLeft = fromCssSize(e.clientX - bound.left)\n\n        this.setPickedIndex(ref, offsetLeft)\n\n        this.cancelAnimation('legendPosition')\n\n        ref.legendMoving = true\n        ref.legendShown = true\n\n        this.render()\n    }\n\n    moveLegend (ref, e) {\n\n        if (!ref.legendMoving) {\n            return\n        }\n\n        const bound = this.el.getBoundingClientRect()\n\n        const canvasY = fromCssSize(e.clientY - bound.top)\n\n        if (canvasY > this.padH + this.chartHeight || canvasY <= this.headerHeight) {\n            return\n        }\n\n        const offsetLeft = fromCssSize(e.clientX - bound.left)\n\n        this.setPickedIndex(ref, offsetLeft)\n\n        this.render()\n    }\n\n    setPickedIndex (ref, offsetLeft) {\n\n        let position = ref.currentLeft + (offsetLeft - this.padW) / this.chartWidth * ref.currentRange\n\n        if (position < ref.currentLeft) {\n            position = ref.currentLeft\n        } else if (position > ref.currentRight) {\n            position = ref.currentRight\n        }\n\n        ref.legendPosition = position\n        ref.pickedIndex = getClosestIndex(ref.x, position)\n    }\n\n    stopMovingLegend (ref) {\n        if (!ref.legendMoving) { return }\n        ref.legendMoving = false\n        const destinationPosition = (ref.x[ref.pickedIndex] - ref.x[1]) / ref.xDiff\n        const uniqName = this.zoomState + 'legendPosition'\n        this.addAnimation(ref, 'legendPosition', destinationPosition, this.animationDurationMs, uniqName)\n        this.animate()\n    }\n\n    onMouseDown (e) {\n        e.stopPropagation()\n        this.setScroll(this.ref, e)\n        this.clickCheckbox(e)\n        this.clickZoomOut(e)\n        if (!this.clickLegend(this.ref, e)) {\n            this.showLegend(this.ref, e)\n        }\n    }\n\n    onMouseMove (e) {\n        e.stopPropagation()\n        this.setMove(this.ref, e.clientX)\n        this.moveLegend(this.ref, e)\n    }\n\n    onMouseUp (e) {\n        e.stopPropagation()\n        this.setNoMove(this.ref)\n        this.stopMovingLegend(this.ref)\n    }\n\n    onMouseLeave (e) {\n        e.stopPropagation()\n        this.setNoMove(this.ref)\n    }\n\n    onTouchStart (e) {\n        e.stopPropagation()\n        const ev = e.targetTouches[0]\n        this.setScroll(this.ref, ev)\n        this.clickCheckbox(ev)\n        this.clickZoomOut(ev)\n        if (!this.clickLegend(this.ref, ev)) {\n            this.showLegend(this.ref, ev)\n        }\n    }\n\n    onTouchMove (e) {\n        e.stopPropagation()\n\n        const ev = e.targetTouches[0]\n        this.setMove(this.ref, ev.clientX)\n        this.moveLegend(this.ref, ev)\n    }\n\n    onTouchEnd (e) {\n        e.stopPropagation()\n        this.setNoMove()\n        this.stopMovingLegend(this.ref)\n    }\n\n    nightMode (enable) {\n        if (enable) {\n            this.addAnimation(this, 'nightGrade', 1, this.animationDurationMs)\n        } else {\n            this.addAnimation(this, 'nightGrade', 0, this.animationDurationMs)\n        }\n        this.animate()\n    }\n\n    getBoundingClientRect () {\n        return this.canvasEl.getBoundingClientRect()\n    }\n}\n","import AnimatableChart from '../animatable_chart'\nimport {\n\n    getX,\n    getLines,\n\n    controlWidth,\n    previewPadding,\n    calcYAlignment,\n\n    animatableAlphaHEXcolor,\n    animatableHexColor,\n    dynamicHexColor,\n\n    fromCssSize,\n    toCssSize,\n    getMaxY,\n    getMinY,\n    getClosestIndex,\n    getLowerIndex,\n    getUpperIndex,\n    drawLines,\n    drawScrollControlls,\n    drawGrid,\n    drawTranslateYLabels,\n    drawDates,\n    drawCheckboxes,\n    drawLinesLegend,\n    drawHeader,\n    drawZoomOutControl,\n    drawDateRangeSummary,\n    drawRuller,\n    drawLinesCross,\n} from '../utils'\n\nexport default class LineChart extends AnimatableChart {\n\n    constructor (data, options) {\n        super(data, options)\n\n        this.lines = getLines(data.overview)\n\n        this.currentMaxHeight = this.fromMaxHeight = this.toMaxHeight =\n            getMaxY(this.x, this.lines, this.lineStates, this.currentLeft, this.currentRight)\n        this.maxHeight = getMaxY(this.x, this.lines, this.lineStates, 0, 1)\n\n        this.currentMinHeight = this.fromMinHeight = this.toMinHeight =\n            getMinY(this.x, this.lines, this.lineStates, this.currentLeft, this.currentRight)\n        this.minHeight = getMinY(this.x, this.lines, this.lineStates, 0, 1)\n    }\n\n    drawChart (ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade) {\n\n        drawLines(this.ctx, ref.x, ref.lines, this.lineStates, this.lineGrades, this.lineColors,\n            this.chartWidth, this.chartHeight + this.padH - ref.yAlign.top, this.padW, this.headerHeight + ref.yAlign.top, ref.yAlign.bottom,\n            ref.currentLeft, ref.currentRight, ref.xDiff * ref.currentRange, ref.currentMaxHeight, ref.currentMinHeight, this.lineWidth, zoomGrade, shrink)\n    }\n\n    drawPreview (ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade) {\n\n        drawLines(this.ctx, ref.x, ref.lines, this.lineStates, this.lineGrades, this.lineColors,\n            this.chartWidth, this.previewHeight, this.padW, this.previewOffsetH, 0,\n            0, 1, ref.xDiff, ref.maxHeight, ref.minHeight, this.previewLineWidth, zoomGrade, shrink)\n    }\n\n    drawLegend (ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade) {\n\n        drawRuller(this.ctx, this.padW, this.headerHeight + this.padH, this.rullerWidth, this.chartHeight, this.chartWidth,\n            ref.currentLeft, ref.currentRight, ref.currentRange, ref.legendPosition, this.getRullerColor, zoomGrade, this.nightGrade)\n\n        for (let line of ref.lines) {\n            drawLinesCross(this.ctx, ref.x, line, this.lineLabels, this.lineStates, this.lineGrades, this.lineColors, this.lineWidth,\n                ref.legendPosition, ref.pickedIndex, this.padW, this.headerHeight, ref.currentLeft, ref.currentRight, ref.currentRange,\n                this.chartWidth, this.chartHeight + this.padH, ref.xDiff,\n                ref.yAlign.top, ref.yAlign.bottom, ref.currentMaxHeight, ref.currentMinHeight,\n                this.getBackgroundColor, this.nightGrade, zoomGrade)\n        }\n\n        drawLinesLegend(this.ctx, ref.x, [ref.lines], this.lineLabels, this.lineStates, this.lineGrades, this.lineColors, this.lineWidth,\n            ref.legendPosition, ref.pickedIndex, this.padW, this.headerHeight + this.padH, ref.currentLeft, ref.currentRight, ref.currentRange,\n            this.chartWidth, this.chartHeight + this.padH, ref.xDiff,\n            [[ref.yAlign.top, ref.yAlign.bottom, ref.currentMaxHeight, ref.currentMinHeight]],\n            this.legendTextSize, this.textFont, this.getLegendColor, this.getLegendBorderColor, this.getLegendFontColor, this.getBackgroundColor,\n            zoomGrade, this.nightGrade, ref.legendCoordinates, zoomGrade, legendDateFormat, this.zoomState === 'overview')\n    }\n\n    calc (ref) {\n        super.calc(ref)\n        this.calcHeight(ref)\n        this.calcYAlignment(ref)\n    }\n\n    calcYAlignment(ref) {\n\n        const chartHeight = this.chartHeight + this.padH\n        const linesDiff = chartHeight / 6\n\n        calcYAlignment(ref.toMaxHeight, ref.toMinHeight,\n            chartHeight - this.padH, this.padH, chartHeight - linesDiff, linesDiff, chartHeight, ref.yAlign)\n    }\n\n    calcHeight (ref) {\n\n        const visibleMaxHeight = getMaxY(ref.x, ref.lines, ref.lineStates, ref.currentLeft, ref.currentRight)\n\n        if (visibleMaxHeight !== ref.toMaxHeight) {\n            const uniqName = this.zoomState + 'currentMaxHeight'\n            this.addAnimation(ref, 'currentMaxHeight', visibleMaxHeight, this.animationDurationMs, uniqName)\n            this.animate()\n        }\n\n        const visibleMinHeight = getMinY(ref.x, ref.lines, ref.lineStates, ref.currentLeft, ref.currentRight)\n\n        if (visibleMinHeight !== ref.toMinHeight) {\n            const uniqName = this.zoomState + 'currentMinHeight'\n            this.addAnimation(ref, 'currentMinHeight', visibleMinHeight, this.animationDurationMs, uniqName)\n            this.animate()\n        }\n\n        const maxAnim = this.animations[this.zoomState + 'currentMaxHeight']\n\n        if (maxAnim) {\n            ref.fromMaxHeight = maxAnim.from\n            ref.toMaxHeight = maxAnim.to\n        }\n\n        const minAnim = this.animations[this.zoomState + 'currentMinHeight']\n\n        if (minAnim) {\n            ref.fromMinHeight = minAnim.from\n            ref.toMinHeight = minAnim.to\n        }\n    }\n\n    getDetails (index) {\n\n        const details = super.getDetails(index)\n\n        const columns = this.mergeZoomedColumns(details.fromLeft, details.toRight)\n\n        const data = { columns, types: this.details[this.x[1]].types }\n        const x = getX(data)\n        const lines = getLines(data)\n        const rangeMaxHeight = getMaxY(x, lines, this.lineStates, details.currentLeft, details.currentRight)\n        const rangeMinHeight = getMinY(x, lines, this.lineStates, details.currentLeft, details.currentRight)\n\n        const maxHeight = getMaxY(x, lines, this.lineStates, 0, 1)\n        const minHeight = getMinY(x, lines, this.lineStates, 0, 1)\n\n        let fromMaxHeight, toMaxHeight, currentMaxHeight,\n            fromMinHeight, toMinHeight, currentMinHeight\n\n        fromMaxHeight = toMaxHeight = currentMaxHeight = rangeMaxHeight\n        fromMinHeight = toMinHeight = currentMinHeight = rangeMinHeight\n\n        const xDiff = x[x.length - 1] - x[1]\n\n        details.x = x\n        details.xDiff = xDiff\n        details.lines = lines\n        details.maxHeight = maxHeight\n        details.minHeight = minHeight\n        details.fromMaxHeight = fromMaxHeight\n        details.toMaxHeight = toMaxHeight\n        details.currentMaxHeight = currentMaxHeight\n        details.fromMinHeight = fromMinHeight\n        details.toMinHeight = toMinHeight\n        details.currentMinHeight = currentMinHeight\n\n        return details\n    }\n}\n","import LineChart from './line'\nimport {\n\n    calcYAlignment,\n    animatableHexColor,\n\n    fromCssSize,\n    toCssSize,\n    getMaxY,\n    getMinY,\n    getClosestIndex,\n    getLowerIndex,\n    getUpperIndex,\n    drawLines,\n    drawScrollControlls,\n    drawGrid,\n    drawTranslateYLabels,\n    drawDates,\n    drawCheckboxes,\n    drawLinesLegend,\n    drawHeader,\n    drawZoomOutControl,\n    drawDateRangeSummary,\n    drawRuller,\n    drawLinesCross,\n} from '../utils'\n\nconst animationDurationMs = 250\n\nexport default class LineYScaled extends LineChart {\n\n    constructor (data, options) {\n\n        const lines2 = data.overview.columns.splice(2, 1)\n\n        const details2 = {}\n\n        for (let timestamp in data.details) {\n            details2[timestamp] = data.details[timestamp].columns.splice(2, 1)[0]\n        }\n\n        super(data, options)\n\n        this.lines2 = lines2\n        this.details2 = details2\n\n        this.currentMaxHeight2 = this.fromMaxHeight2 = this.toMaxHeight2 =\n            getMaxY(this.x, lines2, this.lineStates, this.currentLeft, this.currentRight)\n        this.maxHeight2 = getMaxY(this.x, lines2, this.lineStates, 0, 1)\n\n        this.currentMinHeight2 = this.fromMinHeight2 = this.toMinHeight2 =\n            getMinY(this.x, lines2, this.lineStates, this.currentLeft, this.currentRight)\n        this.minHeight2 = getMinY(this.x, lines2, this.lineStates, 0, 1)\n\n        this.yAlign2 = {}\n\n        this.getAxisColor1 = animatableHexColor(data.overview.colors['y0'], 1, data.overview.colors['y0'], 1)\n        this.getAxisColor2 = animatableHexColor(data.overview.colors['y1'], 1, data.overview.colors['y0'], 1)\n    }\n\n    drawGrid (ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade) {\n\n        drawGrid(this.ctx, this.padW, this.headerHeight, this.chartWidth, this.chartHeight + this.padH, 5,\n            ref.fromMaxHeight, ref.toMaxHeight, ref.currentMaxHeight,\n            ref.fromMinHeight, ref.toMinHeight, ref.currentMinHeight,\n            ref.yAlign.max, ref.yAlign.min, ref.yAlign.top, ref.yAlign.bottom,\n            this.getGridColor, this.getAxisColor1, false, this.lineGrades['y0'], this.gridLineWidth, this.textSize, this.nightGrade, zoomGrade)\n\n        drawGrid(this.ctx, this.padW, this.headerHeight, this.chartWidth, this.chartHeight + this.padH, 5,\n            ref.fromMaxHeight2, ref.toMaxHeight2, ref.currentMaxHeight2,\n            ref.fromMinHeight2, ref.toMinHeight2, ref.currentMinHeight2,\n            ref.yAlign2.max, ref.yAlign2.min, ref.yAlign2.top, ref.yAlign2.bottom,\n            this.getGridColor, this.getAxisColor2, true, this.lineGrades['y1'], this.gridLineWidth, this.textSize, this.nightGrade, zoomGrade)\n    }\n\n    drawChart (ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade) {\n\n        drawLines(this.ctx, ref.x, ref.lines2, this.lineStates, this.lineGrades, this.lineColors,\n            this.chartWidth, this.chartHeight + this.padH - ref.yAlign2.top, this.padW, this.headerHeight + ref.yAlign2.top, ref.yAlign2.bottom,\n            ref.currentLeft, ref.currentRight, ref.xDiff * ref.currentRange,\n            ref.currentMaxHeight2, ref.currentMinHeight2, this.lineWidth, zoomGrade, shrink)\n\n        drawLines(this.ctx, ref.x, ref.lines, this.lineStates, this.lineGrades, this.lineColors,\n            this.chartWidth, this.chartHeight + this.padH - ref.yAlign.top, this.padW, this.headerHeight + ref.yAlign.top, ref.yAlign.bottom,\n            ref.currentLeft, ref.currentRight, ref.xDiff * ref.currentRange, ref.currentMaxHeight, ref.currentMinHeight, this.lineWidth, zoomGrade, shrink)\n    }\n\n    drawPreview (ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade) {\n\n        drawLines(this.ctx, ref.x, ref.lines2, this.lineStates, this.lineGrades, this.lineColors,\n            this.chartWidth, this.previewHeight, this.padW, this.previewOffsetH, 0,\n            0, 1, ref.xDiff, ref.maxHeight2, ref.minHeight2, this.previewLineWidth, zoomGrade, shrink)\n\n        drawLines(this.ctx, ref.x, ref.lines, this.lineStates, this.lineGrades, this.lineColors,\n            this.chartWidth, this.previewHeight, this.padW, this.previewOffsetH, 0,\n            0, 1, ref.xDiff, ref.maxHeight, ref.minHeight, this.previewLineWidth, zoomGrade, shrink)\n    }\n\n    drawLegend (ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade) {\n\n        drawRuller(this.ctx, this.padW, this.headerHeight + this.padH, this.rullerWidth, this.chartHeight, this.chartWidth,\n            ref.currentLeft, ref.currentRight, ref.currentRange, ref.legendPosition, this.getRullerColor, zoomGrade, this.nightGrade)\n\n        for (let line of ref.lines) {\n            drawLinesCross(this.ctx, ref.x, line, this.lineLabels, this.lineStates, this.lineGrades, this.lineColors, this.lineWidth,\n                ref.legendPosition, ref.pickedIndex, this.padW, this.headerHeight, ref.currentLeft, ref.currentRight, ref.currentRange,\n                this.chartWidth, this.chartHeight + this.padH, ref.xDiff,\n                ref.yAlign.top, ref.yAlign.bottom, ref.currentMaxHeight, ref.currentMinHeight,\n                this.getBackgroundColor, this.nightGrade, zoomGrade)\n        }\n\n        for (let line of ref.lines2) {\n            drawLinesCross(this.ctx, ref.x, line, this.lineLabels, this.lineStates, this.lineGrades, this.lineColors, this.lineWidth,\n                ref.legendPosition, ref.pickedIndex, this.padW, this.headerHeight, ref.currentLeft, ref.currentRight, ref.currentRange,\n                this.chartWidth, this.chartHeight + this.padH, ref.xDiff,\n                ref.yAlign2.top, ref.yAlign2.bottom, ref.currentMaxHeight2, ref.currentMinHeight2,\n                this.getBackgroundColor, this.nightGrade, zoomGrade)\n        }\n\n        drawLinesLegend(this.ctx, ref.x, [ref.lines, ref.lines2], this.lineLabels, this.lineStates, this.lineGrades, this.lineColors, this.lineWidth,\n            ref.legendPosition, ref.pickedIndex, this.padW, this.headerHeight + this.padH, ref.currentLeft, ref.currentRight, ref.currentRange,\n            this.chartWidth, this.chartHeight + this.padH, ref.xDiff,\n            [\n                [ref.yAlign.top, ref.yAlign.bottom, ref.currentMaxHeight, ref.currentMinHeight,],\n                [ref.yAlign2.top, ref.yAlign2.bottom, ref.currentMaxHeight2, ref.currentMinHeight2,]\n            ],\n            this.legendTextSize, this.textFont, this.getLegendColor, this.getLegendBorderColor, this.getLegendFontColor, this.getBackgroundColor,\n            zoomGrade, this.nightGrade, ref.legendCoordinates, zoomGrade, legendDateFormat, this.zoomState === 'overview')\n    }\n\n    calcYAlignment (ref) {\n\n        super.calcYAlignment(ref)\n\n        const chartHeight = this.chartHeight + this.padH\n        const linesDiff = chartHeight / 6\n\n        calcYAlignment(ref.toMaxHeight2, ref.toMinHeight2,\n            chartHeight - this.padH, this.padH, chartHeight - linesDiff, linesDiff, chartHeight, ref.yAlign2)\n    }\n\n    calcHeight (ref) {\n\n        super.calcHeight(ref)\n\n        const visibleMaxHeight = getMaxY(ref.x, ref.lines2, ref.lineStates, ref.currentLeft, ref.currentRight)\n\n        if (visibleMaxHeight !== ref.toMaxHeight2) {\n            const uniqName = this.zoomState + 'currentMaxHeight2'\n            this.addAnimation(ref, 'currentMaxHeight2', visibleMaxHeight, animationDurationMs, uniqName)\n            this.animate()\n        }\n\n        const visibleMinHeight = getMinY(ref.x, ref.lines2, ref.lineStates, ref.currentLeft, ref.currentRight)\n\n        if (visibleMinHeight !== ref.toMinHeight2) {\n            const uniqName = this.zoomState + 'currentMinHeight2'\n            this.addAnimation(ref, 'currentMinHeight2', visibleMinHeight, animationDurationMs, uniqName)\n            this.animate()\n        }\n\n        const maxAnim = this.animations[this.zoomState + 'currentMaxHeight2']\n\n        if (maxAnim) {\n            ref.fromMaxHeight2 = maxAnim.from\n            ref.toMaxHeight2 = maxAnim.to\n        }\n\n        const minAnim = this.animations[this.zoomState + 'currentMinHeight2']\n\n        if (minAnim) {\n            ref.fromMinHeight2 = minAnim.from\n            ref.toMinHeight2 = minAnim.to\n        }\n    }\n\n    getDetails (index) {\n\n        const details = super.getDetails(index)\n\n        let fromLeft = index - 3\n        let toRight = index + 3\n\n        if (fromLeft < 1) {\n            toRight += 1 - fromLeft\n            fromLeft = 1\n        } else if (toRight >= this.x.length) {\n            fromLeft -= toRight - this.x.length + 1\n            toRight = this.x.length - 1\n        }\n\n        let lines2 = []\n\n        for (let i = fromLeft; i <= toRight; i++) {\n            const timestamp = this.x[i]\n            const details2 = this.details2[timestamp]\n            if (!lines2.length) {\n                lines2[0] = details2[0]\n            }\n            let k = details2.length\n            const offset = lines2.length - 1\n            while (k-- > 1) {\n                lines2[offset + k] = details2[k]\n            }\n        }\n\n        lines2 = [lines2]\n\n        const rangeMaxHeight2 = getMaxY(details.x, lines2, this.lineStates, details.currentLeft, details.currentRight)\n        const rangeMinHeight2 = getMinY(details.x, lines2, this.lineStates, details.currentLeft, details.currentRight)\n\n        const maxHeight2 = getMaxY(details.x, lines2, this.lineStates, 0, 1)\n        const minHeight2 = getMinY(details.x, lines2, this.lineStates, 0, 1)\n\n        let fromMaxHeight2, toMaxHeight2, currentMaxHeight2,\n            fromMinHeight2, toMinHeight2, currentMinHeight2\n\n        fromMaxHeight2 = toMaxHeight2 = currentMaxHeight2 = rangeMaxHeight2\n        fromMinHeight2 = toMinHeight2 = currentMinHeight2 = rangeMinHeight2\n\n        details.lines2 = lines2\n        details.maxHeight2 = maxHeight2\n        details.minHeight2 = minHeight2\n        details.fromMaxHeight2 = fromMaxHeight2\n        details.toMaxHeight2 = toMaxHeight2\n        details.currentMaxHeight2 = currentMaxHeight2\n        details.fromMinHeight2 = fromMinHeight2\n        details.toMinHeight2 = toMinHeight2\n        details.currentMinHeight2 = currentMinHeight2\n        details.yAlign2 = {}\n\n        return details\n    }\n}\n","import AnimatableChart from '../animatable_chart'\nimport {\n    getX,\n    sumBars,\n    getBars,\n    drawStackedBars,\n    calcTopYAlignment,\n    dynamicHexColorWithBlending,\n    drawLinesLegend,\n} from '../utils'\n\nexport default class StackedBarChart extends AnimatableChart {\n\n    constructor (data, options) {\n        super(data, options)\n\n        this.bars = getBars(data.overview)\n\n\n        this.lineColors = {}\n        for (let label in this.lineLabels) {\n            this.lineColors[label] =\n                dynamicHexColorWithBlending(data.overview.colors[label], 1, '#FFFFFF', 0.5, '#242F3E', 0.5)\n        }\n\n        this.summedBars = sumBars(this.x, this.bars, this.lineGrades,\n            this.currentLeft - this.padW / this.chartWidth, this.currentRight + this.padW / this.chartWidth)\n        this.fullSummedBars = sumBars(this.x, this.bars, this.lineGrades, 0, 1)\n\n        this.currentMaxHeight = this.fromMaxHeight = this.toMaxHeight =\n            this.summedBars[0]\n        this.maxHeight = this.fullSummedBars[0]\n\n        this.currentMinHeight = this.fromMinHeight = this.toMinHeight = 0\n        this.minHeight = 0\n    }\n\n    drawView (ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade) {\n\n        this.drawChart(ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade)\n\n        this.drawGrid(ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade)\n\n        this.drawDates(ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade)\n\n        this.drawPreview(ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade)\n\n        this.drawScroll(ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade)\n\n        if (ref.legendShown && (zoomGrade < 1 || (ref.legendPosition >= ref.currentLeft && ref.legendPosition <= ref.currentRight))) {\n            this.drawLegend(ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade)\n        }\n    }\n\n    drawChart (ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade) {\n\n        drawStackedBars(this.ctx, ref.x, ref.bars, ref.summedBars, this.lineGrades, this.lineGrades, this.lineColors,\n            this.chartWidth, this.chartHeight + this.padH, this.padW, this.headerHeight, ref.pickedIndex,\n            ref.currentLeft, ref.currentRight, ref.currentMaxHeight, zoomGrade, this.nightGrade, shrink)\n    }\n\n    drawPreview (ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade) {\n\n        drawStackedBars(this.ctx, ref.x, ref.bars, ref.fullSummedBars.slice(0), this.lineGrades, this.lineGrades, this.lineColors,\n            this.chartWidth, this.previewHeight, this.padW, this.previewOffsetH, 0,\n            0, 1, ref.maxHeight, zoomGrade, shrink)\n    }\n\n    drawLegend (ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade) {\n\n        drawLinesLegend(this.ctx, ref.x, [ref.bars], this.lineLabels, this.lineStates, this.lineGrades, this.lineColors, this.lineWidth,\n            ref.legendPosition, ref.pickedIndex, this.padW, this.headerHeight + this.padH, ref.currentLeft, ref.currentRight, ref.currentRange,\n            this.chartWidth, this.chartHeight + this.padH, ref.xDiff,\n            [[0, 0, 0, 0]],\n            this.legendTextSize, this.textFont, this.getLegendColor, this.getLegendBorderColor, this.getLegendFontColor, this.getBackgroundColor,\n            zoomGrade, this.nightGrade, ref.legendCoordinates, zoomGrade, legendDateFormat, this.zoomState === 'overview')\n    }\n\n    calc (ref) {\n        super.calc(ref)\n        this.calcHeight(ref)\n        this.calcYAlignment(ref)\n    }\n\n    calcYAlignment(ref) {\n\n        const chartHeight = this.chartHeight + this.padH\n        const linesDiff = chartHeight / 6\n\n        calcTopYAlignment(ref.toMaxHeight, chartHeight - this.padH,\n            chartHeight - linesDiff, linesDiff, chartHeight, ref.yAlign)\n    }\n\n    calcHeight (ref) {\n\n        ref.summedBars = sumBars(ref.x, ref.bars, this.lineGrades,\n            ref.currentLeft - this.padW / this.chartWidth, ref.currentRight + this.padW / this.chartWidth)\n\n        const newMaxHeight = ref.summedBars[0]\n\n        if (newMaxHeight !== this.toMaxHeight) {\n            const uniqName = this.zoomState + 'currentMaxHeight'\n            this.addAnimation(ref, 'currentMaxHeight', newMaxHeight, this.animationDurationMs, uniqName)\n            this.animate()\n        }\n\n        const maxAnim = this.animations[this.zoomState + 'currentMaxHeight']\n\n        if (maxAnim) {\n            ref.fromMaxHeight = maxAnim.from\n            ref.toMaxHeight = maxAnim.to\n        }\n    }\n\n    getDetails (index) {\n\n        const details = super.getDetails(index)\n\n        const columns = this.mergeZoomedColumns(details.fromLeft, details.toRight)\n\n        const data = { columns, types: this.details[this.x[1]].types }\n        const x = getX(data)\n        const bars = getBars(data)\n\n        const summedBars = sumBars(x, bars, this.lineGrades,\n            details.currentLeft - this.padW / this.chartWidth, details.currentRight + this.padW / this.chartWidth)\n        const rangeMaxHeight = summedBars[0]\n        const rangeMinHeight = 0\n\n        const fullSummedBars = sumBars(x, bars, this.lineGrades, 0, 1)\n        const maxHeight = fullSummedBars[0]\n        const minHeight = 0\n\n        let fromMaxHeight, toMaxHeight, currentMaxHeight,\n            fromMinHeight, toMinHeight, currentMinHeight\n\n        fromMaxHeight = toMaxHeight = currentMaxHeight = rangeMaxHeight\n        fromMinHeight = toMinHeight = currentMinHeight = rangeMinHeight\n\n        const xDiff = x[x.length - 1] - x[1]\n\n        details.x = x\n        details.xDiff = xDiff\n        details.bars = bars\n        details.summedBars = summedBars\n        details.fullSummedBars = fullSummedBars\n        details.maxHeight = maxHeight\n        details.minHeight = minHeight\n        details.fromMaxHeight = fromMaxHeight\n        details.toMaxHeight = toMaxHeight\n        details.currentMaxHeight = currentMaxHeight\n        details.fromMinHeight = fromMinHeight\n        details.toMinHeight = toMinHeight\n        details.currentMinHeight = currentMinHeight\n\n        return details\n    }\n}\n","import AnimatableChart from '../animatable_chart'\n\nexport default class BarChart extends AnimatableChart {\n\n    constructor (data, options) {\n        super(data, options)\n    }\n}\n","import AnimatableChart from '../animatable_chart'\n\nexport default class PieChart extends AnimatableChart {\n\n    constructor (data, options) {\n        super(data, options)\n    }\n}\n","import LineChart from './charts/line'\nimport LineYScaled from './charts/line-y-scaled'\nimport StackedBarChart from './charts/bar-stacked'\nimport BarChart from './charts/bar'\nimport PieChart from './charts/pie'\n\nexport default function () {\n\n    return {\n\n        create: function (data, parent) {\n\n            let chart = null\n\n            const overview = data.overview\n\n            if (overview.y_scaled) {\n                chart = new LineYScaled(data, {\n                    width: parent.offsetWidth,\n                    height: 320,\n                    fontFamily: 'Helvetica, sans-serif',\n                    fontSize: 10,\n                    padW: 10,\n                    padH: 20,\n                    lineWidth: 2,\n                    previewPadW: 10,\n                    previewPadH: 4,\n                    previewHeight: 32,\n                    previewLineWidth: 1,\n                    checkboxesAreaHeight: 80,\n                    checkboxHeight: 28,\n                    checkboxRadius: 14,\n                    checkboxMargin: 8,\n                    legendFontSize: 12,\n                    rullerWidth: 1,\n                    from: 0.75,\n                    to: 1,\n                    datesDiff: 60,\n                    gridLineWidth: 1,\n                    header: 'Line Y Scaled Chart',\n                    headerFontSize: 14,\n                    dateRangeFontSize: 12,\n                    headerHeight: 20,\n                })\n            } else if (overview.stacked && overview.percentage) {\n                chart = new PieChart(data, {\n                    width: parent.offsetWidth,\n                    height: 320,\n                    fontFamily: 'Helvetica, sans-serif',\n                    fontSize: 10,\n                    padW: 10,\n                    padH: 20,\n                    lineWidth: 2,\n                    previewPadW: 10,\n                    previewPadH: 4,\n                    previewHeight: 32,\n                    previewLineWidth: 1,\n                    checkboxesAreaHeight: 80,\n                    checkboxHeight: 28,\n                    checkboxRadius: 14,\n                    checkboxMargin: 8,\n                    legendFontSize: 12,\n                    rullerWidth: 1,\n                    from: 0.75,\n                    to: 1,\n                    datesDiff: 60,\n                    gridLineWidth: 1,\n                    header: 'Pie Chart',\n                    headerFontSize: 14,\n                    dateRangeFontSize: 12,\n                    headerHeight: 20,\n                })\n            } else if (overview.stacked) {\n                chart = new StackedBarChart(data, {\n                    width: parent.offsetWidth,\n                    height: 320,\n                    fontFamily: 'Helvetica, sans-serif',\n                    fontSize: 10,\n                    padW: 10,\n                    padH: 20,\n                    lineWidth: 2,\n                    previewPadW: 10,\n                    previewPadH: 4,\n                    previewHeight: 32,\n                    previewLineWidth: 1,\n                    checkboxesAreaHeight: 80,\n                    checkboxHeight: 28,\n                    checkboxRadius: 14,\n                    checkboxMargin: 8,\n                    legendFontSize: 12,\n                    rullerWidth: 1,\n                    from: 0.75,\n                    to: 1,\n                    datesDiff: 60,\n                    gridLineWidth: 1,\n                    header: 'Stacked Bar Chart',\n                    headerFontSize: 14,\n                    dateRangeFontSize: 12,\n                    headerHeight: 20,\n                })\n            } else if (Object.keys(overview.types).some(k => overview.types[k] === 'bar')) {\n                chart = new BarChart(data, {\n                    width: parent.offsetWidth,\n                    height: 320,\n                    fontFamily: 'Helvetica, sans-serif',\n                    fontSize: 10,\n                    padW: 10,\n                    padH: 20,\n                    lineWidth: 2,\n                    previewPadW: 10,\n                    previewPadH: 4,\n                    previewHeight: 32,\n                    previewLineWidth: 1,\n                    checkboxesAreaHeight: 80,\n                    checkboxHeight: 28,\n                    checkboxRadius: 14,\n                    checkboxMargin: 8,\n                    legendFontSize: 12,\n                    rullerWidth: 1,\n                    from: 0.75,\n                    to: 1,\n                    datesDiff: 60,\n                    gridLineWidth: 1,\n                    header: 'Bar Chart',\n                    headerFontSize: 14,\n                    dateRangeFontSize: 12,\n                    headerHeight: 20,\n                })\n            } else {\n                chart = new LineChart(data, {\n                    width: parent.offsetWidth,\n                    height: 320,\n                    fontFamily: 'Helvetica, sans-serif',\n                    fontSize: 10,\n                    padW: 10,\n                    padH: 20,\n                    lineWidth: 2,\n                    previewPadW: 10,\n                    previewPadH: 4,\n                    previewHeight: 32,\n                    previewLineWidth: 1,\n                    checkboxesAreaHeight: 80,\n                    checkboxHeight: 28,\n                    checkboxRadius: 14,\n                    checkboxMargin: 8,\n                    legendFontSize: 12,\n                    rullerWidth: 1,\n                    from: 0.75,\n                    to: 1,\n                    datesDiff: 60,\n                    gridLineWidth: 1,\n                    header: 'Line Chart',\n                    headerFontSize: 14,\n                    dateRangeFontSize: 12,\n                    headerHeight: 20,\n                })\n            }\n\n            parent.appendChild(chart.el)\n            chart.render()\n\n            return chart\n        },\n    }\n}\n","class NightSwitch {\n\n    constructor (cb) {\n        this.cb = cb\n\n        this.state = false\n\n        this.el = document.createElement('div')\n        this.el.className = 'night-switch day'\n        this.textEl = document.createElement('span')\n        this.textEl.className = 'night-switch-text'\n        this.el.appendChild(this.textEl)\n\n        this.el.addEventListener('click', () => this.switch())\n\n        this.setText()\n    }\n\n    switch () {\n        this.state = !this.state\n        const bodyEl = document.getElementsByTagName('body')[0]\n        this.state ? bodyEl.className = 'night' : bodyEl.className = 'day'\n        this.state ? this.el.className = 'night-switch night' : this.el.className = 'night-switch day'\n        this.setText()\n        this.cb(this.state)\n    }\n\n    setText () {\n        this.textEl.textContent = this.state\n            ? 'Switch to Day Mode'\n            : 'Switch to Night Mode'\n    }\n}\n\nexport default NightSwitch\n","import ChartFactory from './lib/chart_factory'\nimport NightSwitch from './lib/night_switch'\n\nimport data from './generated_data'\n\nconst factory = new ChartFactory()\n\nlet charts = []\n\ndocument.addEventListener('DOMContentLoaded', function () {\n\n    const parent = document.getElementById('root')\n\n    for (let datum of data) {\n        charts.push(factory.create(datum, parent))\n    }\n\n    function switchMode (enable) {\n        charts.forEach(function (chart) {\n            chart.nightMode(enable)\n        })\n    }\n\n    const nightSwitch = new NightSwitch(switchMode)\n    parent.appendChild(nightSwitch.el)\n\n    function resize (width) {\n        charts.forEach(function (chart) {\n            chart.setWidth(width, true)\n        })\n    }\n\n    window.addEventListener('resize', function () {\n        resize(parent.offsetWidth)\n    })\n\n    resize(parent.offsetWidth)\n})\n"],"sourceRoot":""}