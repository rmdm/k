{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/utils.js","webpack:///./lib/animatable_chart.js","webpack:///./lib/charts/line.js","webpack:///./lib/charts/line-y-scaled.js","webpack:///./lib/charts/bar-stacked.js","webpack:///./lib/charts/bar.js","webpack:///./lib/charts/pie.js","webpack:///./lib/chart_factory.js","webpack:///./lib/night_switch.js","webpack:///./index.js"],"names":["pixelRatio","window","devicePixelRatio","toCssSize","value","fromCssSize","drawLines","ctx","x","lines","lineStates","lineGrades","lineColors","width","height","offsetW","offsetH","graphOffsetH","left","right","dX","maxHeight","minHeight","lineWidth","zoomGrade","inOut","line","label","drawLine","grade","color","bottomGraphOffsetH","dRange","dx","scaleX","scaleY","strokeStyle","fromIndex","getLowerIndex","toIndex","getUpperIndex","prevX","prevXCoord","length","zeroH","beginPath","moveTo","i","xi","y","yCoord","lineTo","stroke","roundingProbes","calcYAlignment","maxVal","minVal","topOffset","maxBottomOffset","highestLine","lowestLine","vals","bottomOffset","max","min","top","bottom","probe","topVal","floorTo","bottomVal","ceilTo","calcTopYAlignment","val","mod","drawGrid","nlines","fromMax","toMax","currentMax","fromMin","toMin","currentMin","lineMax","lineMin","getColor","getYColor","fromRight","lineGrade","textSize","nightGrade","topLineOffset","scale","fromCurTop","toCurTop","fromCurBottom","toCurBottom","fromTopOffset","fromBottomOffset","toTopOffset","toBottomOffset","fromOffsetH","dFrom","toOffsetH","dTo","Math","abs","drawGridLines","fromVal","toVal","yColor","fillStyle","linesDiff","valsDiff","v","measureText","fillText","drawDates","baseX","xDiff","format","fromPeriod","toPeriod","fromFillStyle","toFillStyle","toN","floor","p","timestamp","drawDate","fromN","dateOffset","position","text","formatDate","shortMonths","months","shortDays","days","d","Date","getUTCDate","getUTCMonth","getUTCFullYear","leftPad","getUTCHours","getUTCDay","controlWidth","previewPadding","controlRadius","decorColor","animatableAlphaHEXcolor","drawScrollControlls","from","to","getPreviewBlurColor","getPreviewControlColor","fromH","toH","drawRoundedRect","closePath","fill","ver","hor","fromX","toX","fromY","toY","leftRadius","rightRadius","quadraticCurveTo","drawCheckboxes","maxWidth","checkboxes","checkboxHeight","checkboxRadius","checkboxMargin","checkboxFont","ctxFont","font","leftOffset","checkbox","textWidth","drawCheckbox","checkboxBorderWidth","radius","getDynamicColor","checkGrade","o","legendPadding","legendOffset","crossRadius","drawRuller","rullerWidth","rullerHeight","range","getRullerColor","alphaGrade","drawLinesLegend","lineKinds","lineLabels","closestIndex","paramKinds","textFont","getLegendColor","getLegendBorderColor","getLegendFontColor","getBackgroundColor","coordinates","drawArrow","drawAll","drawPercents","legendFont","contentWidth","contentHeight","percentsWidth","maxValueWidth","lowestTopOffset","totalValues","name","nameWidth","valWidth","approxValue","lowerIndex","approximateHeight","upperIndex","param","legendWidth","legendHeight","legendOffsetLeft","additionalOffset","nextOffset","rightOverflow","textOffsetH","arrowSide","lOffset","percent","drawLinesCross","topGraphOffsetH","currentMaxHeight","currentMinHeight","arc","PI","affinity","drawHeader","headerHeight","fontSize","magnifierLineWidth","drawZoomOutControl","coords","magnifierHeight","magnifierRadius","zoomOutText","drawDateRangeSummary","headerFontSize","baseDate","isRange","leftTimestamp","rightTimestamp","drawStackedBars","bars","summedBars","pickedIndex","shrink","offsetLeft","offsetTop","values","Array","pickedAlpha","pickedVal","j","bar","dY","prevY","drawArea","areas","summedAreas","referenceSummedAreas","fullWidth","area","fullSum","currentSum","idx","drawPie","shares","centerX","centerY","startAngle","lastAngle","share","angle","procent","xOffset","yOffset","middle","cos","sin","drawPieLegend","sum","angles","console","log","binarySearch","getClosestIndex","arr","len","m","diff","getMaxY","getMinY","Infinity","sumBars","barGrades","result","getDataType","data","type","columns","column","types","push","getLines","getBars","getAreas","getX","colorFromRGBA","r","g","b","a","hex","alpha","R","getR","G","getG","B","getB","animatableHexColor","fromHex","fromAlpha","toHex","toAlpha","fromR","fromG","fromB","dR","dG","dB","dAlpha","dynamicHexColor","toAltHex","toAltAlpha","toDR","toDG","toDB","toAltDR","toAltDG","toAltDB","toDAlpha","toDAltAlpha","pickGrade","notPickGrade","parseInt","slice","dynamicHexColorWithBlending","mask1","alpha1","mask2","alpha2","blendColors","a1","mask","a2","r1","g1","b1","r2","g2","b2","da2","da1","padHexComponent","toString","join","c","AnimatedCanvas","options","animations","running","prevMs","undefined","el","document","createElement","className","canvasEl","getContext","appendChild","setFont","setSize","headerText","header","details","overview","names","checkboxLabelToIndex","colors","id","currentLeft","scrollLeft","currentRight","scrollRight","currentRange","fromMaxHeight","toMaxHeight","fromMinHeight","toMinHeight","datesGrade","moveDir","legendShown","legendMoving","legendPosition","legendCoordinates","zoomFromGrade","zoomToGrade","zoomedIndex","zoomedData","ref","zoomState","zoomOutCoords","yAlign","longTapTime","longTapTout","addEventListener","e","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","onTouchStart","onTouchMove","onTouchEnd","animationDurationMs","getGridColor","getAxisColor","getZoomOutColor","step","ms","requestAnimationFrame","diffMs","hasAnimations","uniqName","anim","container","prop","duration","render","setBasicSizes","setWidth","style","previewOffsetH","checkboxesOffsetH","previewHeight","padH","checkboxesAreaHeight","chartHeight","mainLinesOffsetH","datesOffsetH","border","fontFamily","resize","chartWidth","padW","lineJoin","datesDiff","previewPadW","previewPadH","previewLineWidth","gridLineWidth","legendTextSize","legendFontSize","dateRangeFontSize","animate","isLast","addAnimation","index","direction","getDetails","clearRect","calc","drawView","yAxisdateFormat","legendDateFormat","drawChart","drawPreview","drawScroll","drawLegend","calcDates","currentDiff","lineIdToIndexMap","k","offset","fromLeft","toRight","scrollStart","dir","movePosition","offsetDiff","dOffset","bound","move","getBoundingClientRect","canvasX","canvasY","fromW","toW","getDir","clientX","clientY","setMoveDir","getLabel","toggle","zoom","setPickedIndex","cancelAnimation","destinationPosition","stopPropagation","setScroll","clickLegend","showLegend","setTimeout","unclickCheckbox","setMove","moveLegend","clearTimeout","setNoMove","stopMovingLegend","clickCheckbox","clickZoomOut","ev","targetTouches","preventDefault","changedTouches","enable","LineChart","calcHeight","visibleMaxHeight","visibleMinHeight","maxAnim","minAnim","mergeZoomedColumns","rangeMaxHeight","rangeMinHeight","AnimatableChart","LineYScaled","lines2","splice","details2","currentMaxHeight2","fromMaxHeight2","toMaxHeight2","maxHeight2","currentMinHeight2","fromMinHeight2","toMinHeight2","minHeight2","yAlign2","getAxisColor1","getAxisColor2","rangeMaxHeight2","rangeMinHeight2","StackedBarChart","fullSummedBars","showAll","newMaxHeight","skip","BarChart","detailsColors","indexes","detailsAtIndex","PieChart","calcProcents","maxIndex","leftIndex","rightIndex","fullSummedAreas","referenceFullSummedAreas","calcShares","total","areaSum","atan","found","clickPie","create","parent","chart","y_scaled","offsetWidth","stacked","percentage","Object","keys","some","NightSwitch","cb","state","textEl","switch","setText","bodyEl","getElementsByTagName","textContent","factory","ChartFactory","charts","getElementById","datum","switchMode","forEach","nightMode","nightSwitch"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClFA,IAAMA,UAAU,GAAGC,MAAM,CAACC,gBAAP,IAA2B,CAA9C;AAEO,SAASC,SAAT,CAAoBC,KAApB,EAA2B;AAC9B,SAAOA,KAAK,GAAGJ,UAAf;AACH;AAEM,SAASK,WAAT,CAAsBD,KAAtB,EAA6B;AAChC,SAAOA,KAAK,GAAGJ,UAAf;AACH;AAEM,SAASM,SAAT,CAAoBC,GAApB,EAAyBC,CAAzB,EAA4BC,KAA5B,EAAmCC,UAAnC,EAA+CC,UAA/C,EAA2DC,UAA3D,EAAuEC,KAAvE,EAA8EC,MAA9E,EAAsFC,OAAtF,EAA+FC,OAA/F,EAAwGC,YAAxG,EAAsHC,IAAtH,EAA4HC,KAA5H,EAAmIC,EAAnI,EAAuIC,SAAvI,EAAkJC,SAAlJ,EAA6JC,SAA7J,EAAwKC,SAAxK,EAAmLC,KAAnL,EAA0L;AAAA;AAAA;AAAA;;AAAA;AAC7L,yBAAiBhB,KAAjB,8HAAwB;AAAA,UAAfiB,IAAe;AACpB,UAAMC,KAAK,GAAGD,IAAI,CAAC,CAAD,CAAlB;;AACA,UAAIhB,UAAU,CAACiB,KAAD,CAAV,IAAqBhB,UAAU,CAACgB,KAAD,CAAV,GAAoB,CAA7C,EAAgD;AAC5CC,gBAAQ,CAACrB,GAAD,EAAMC,CAAN,EAASkB,IAAT,EAAef,UAAU,CAACgB,KAAD,CAAzB,EAAkCf,UAAU,CAACe,KAAD,CAA5C,EAAqDd,KAArD,EAA4DC,MAA5D,EAAoEC,OAApE,EAA6EC,OAA7E,EAAsFC,YAAtF,EAAoGC,IAApG,EAA0GC,KAA1G,EAAiHC,EAAjH,EAAqHC,SAArH,EAAgIC,SAAhI,EAA2IC,SAA3I,EAAsJC,SAAtJ,EAAiKC,KAAjK,CAAR;AACH;AACJ;AAN4L;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOhM;AAEM,SAASG,QAAT,CAAmBrB,GAAnB,EAAwBC,CAAxB,EAA2BkB,IAA3B,EAAiCG,KAAjC,EAAwCC,KAAxC,EAA+CjB,KAA/C,EAAsDC,MAAtD,EAA8DC,OAA9D,EAAuEC,OAAvE,EAAgFe,kBAAhF,EAAoGb,IAApG,EAA0GC,KAA1G,EAAiHC,EAAjH,EAAqHC,SAArH,EAAgIC,SAAhI,EAA2IC,SAA3I,EAAsJC,SAAtJ,EAAiKC,KAAjK,EAAwK;AAE3K,MAAIH,SAAS,GAAGD,SAAhB,EAA2B;AACvB;AACH;;AAED,MAAMW,MAAM,GAAG,CAACb,KAAK,GAAGD,IAAT,IAAiB,CAAjB,IAAsB,IAAIM,SAA1B,CAAf;AACA,MAAMS,EAAE,GAAGb,EAAE,IAAI,IAAII,SAAR,CAAb;AAEAN,MAAI,GAAGA,IAAI,GAAGc,MAAd;AACAb,OAAK,GAAGA,KAAK,GAAGa,MAAhB;AACAZ,IAAE,GAAGA,EAAE,GAAGa,EAAV;AAEA,MAAMC,MAAM,GAAGrB,KAAK,GAAGO,EAAvB;AACA,MAAMe,MAAM,GAAG,CAACrB,MAAM,GAAGiB,kBAAV,KAAiCV,SAAS,GAAGC,SAA7C,CAAf;AAEAf,KAAG,CAACgB,SAAJ,GAAgBA,SAAhB;AACAhB,KAAG,CAAC6B,WAAJ,GAAkBN,KAAK,CAACD,KAAK,GAAGL,SAAT,CAAvB;AAEA,MAAMa,SAAS,GAAGC,aAAa,CAAC9B,CAAD,EAAIU,IAAI,GAAGH,OAAO,GAAGF,KAArB,CAA/B;AACA,MAAM0B,OAAO,GAAGC,aAAa,CAAChC,CAAD,EAAIW,KAAK,GAAGJ,OAAO,GAAGF,KAAtB,CAA7B;AAEA,MAAI4B,KAAK,GAAGjC,CAAC,CAAC6B,SAAD,CAAb;AACA,MAAIK,UAAU,GAAG3B,OAAO,GACpB,CAAC,CAAC0B,KAAK,GAAGjC,CAAC,CAAC,CAAD,CAAV,KAAmBA,CAAC,CAACA,CAAC,CAACmC,MAAF,GAAW,CAAZ,CAAD,GAAkBnC,CAAC,CAAC,CAAD,CAAtC,IAA8CU,IAA/C,IAAuDL,KAAvD,IAAgEM,KAAK,GAAGD,IAAxE,CADJ;AAGA,MAAM0B,KAAK,GAAG5B,OAAO,GAAGF,MAAV,GAAmBiB,kBAAjC;AAEAxB,KAAG,CAACsC,SAAJ;AACAtC,KAAG,CAACuC,MAAJ,CAAWJ,UAAX,EAAuBE,KAAK,GAAGlB,IAAI,CAACW,SAAD,CAAJ,GAAkBF,MAAjD;;AAEA,OAAK,IAAIY,CAAC,GAAGV,SAAS,GAAG,CAAzB,EAA4BU,CAAC,IAAIR,OAAjC,EAA0CQ,CAAC,EAA3C,EAA+C;AAE3C,QAAMC,EAAE,GAAGxC,CAAC,CAACuC,CAAD,CAAZ;AACA,QAAME,CAAC,GAAGvB,IAAI,CAACqB,CAAD,CAAJ,GAAUzB,SAApB;AAEA,QAAM4B,MAAM,GAAGN,KAAK,GAAGK,CAAC,GAAGd,MAA3B;AAEAO,cAAU,GAAGA,UAAU,GAAG,CAACM,EAAE,GAAGP,KAAN,IAAeP,MAAzC;AACA3B,OAAG,CAAC4C,MAAJ,CAAWT,UAAX,EAAuBQ,MAAvB;AACAT,SAAK,GAAGO,EAAR;AACH;;AAEDzC,KAAG,CAAC6C,MAAJ;AACH;AAED,IAAMC,cAAc,GAAG,CAAE,CAAF,EAAK,CAAL,EAAQ,EAAR,EAAY,GAAZ,EAAiB,IAAjB,EAAuB,KAAvB,EAA8B,MAA9B,EAAsC,OAAtC,CAAvB;AAEO,SAASC,oBAAT,CAAyBC,MAAzB,EAAiCC,MAAjC,EAAyCC,SAAzC,EAAoDC,eAApD,EAAqEC,WAArE,EAAkFC,UAAlF,EAA8F9C,MAA9F,EAAsG+C,IAAtG,EAA4G;AAE/G,MAAIC,YAAY,GAAGhD,MAAM,GAAG0C,MAAT,GAAkBD,MAArC;AACAO,cAAY,GAAGA,YAAY,GAAGJ,eAAf,GAAiCA,eAAjC,GAAmDI,YAAlE;AAEAD,MAAI,CAACE,GAAL,GAAWR,MAAM,GAAG,CAACA,MAAM,GAAGC,MAAV,KAAqBC,SAAS,GAAGE,WAAjC,KAAiDF,SAAS,GAAGK,YAA7D,CAApB;AACAD,MAAI,CAACG,GAAL,GAAWR,MAAM,GAAG,CAACD,MAAM,GAAGC,MAAV,KAAqBI,UAAU,GAAGE,YAAlC,KAAmDL,SAAS,GAAGK,YAA/D,CAApB;AACAD,MAAI,CAACI,GAAL,GAAWnD,MAAM,GAAG2C,SAApB;AACAI,MAAI,CAACK,MAAL,GAAcJ,YAAd;AAR+G,aAU7FT,cAV6F;;AAU/G,2CAAkC;AAA7B,QAAIc,KAAK,WAAT;AAED,QAAMC,MAAM,GAAGC,OAAO,CAACR,IAAI,CAACE,GAAN,EAAWI,KAAX,CAAtB;AACA,QAAMG,SAAS,GAAGC,MAAM,CAACV,IAAI,CAACG,GAAN,EAAWG,KAAX,CAAxB;;AAEA,QAAIG,SAAS,IAAIF,MAAjB,EAAyB;AACrB;AACH;;AAED,QAAIH,GAAG,GAAG,CAACV,MAAM,GAAGa,MAAV,KAAqBA,MAAM,GAAGE,SAA9B,KAA4CX,WAAW,GAAGC,UAA1D,CAAV;;AAEA,QAAIK,GAAG,IAAKnD,MAAM,GAAG6C,WAArB,EAAmC;AAC/B;AACH;;AAED,QAAIO,MAAM,GAAG,CAACI,SAAS,GAAGd,MAAb,KAAwBY,MAAM,GAAGE,SAAjC,KAA+CX,WAAW,GAAGC,UAA7D,CAAb;;AAEA,QAAIM,MAAM,IAAIN,UAAd,EAA0B;AACtB;AACH;;AAEDC,QAAI,CAACE,GAAL,GAAWK,MAAX;AACAP,QAAI,CAACG,GAAL,GAAWM,SAAX;AACAT,QAAI,CAACI,GAAL,GAAWnD,MAAM,GAAG6C,WAAT,GAAuBM,GAAlC;AACAJ,QAAI,CAACK,MAAL,GAAcN,UAAU,GAAGM,MAA3B;AACH;;AAED,SAAOL,IAAP;AACH;AAEM,SAASW,iBAAT,CAA4BjB,MAA5B,EAAoCE,SAApC,EAA+CE,WAA/C,EAA4DC,UAA5D,EAAwE9C,MAAxE,EAAgF+C,IAAhF,EAAsF;AAEzFA,MAAI,CAACE,GAAL,GAAWR,MAAM,GAAGA,MAAM,IAAIE,SAAS,GAAGE,WAAhB,CAAN,GAAsCF,SAA1D;AACAI,MAAI,CAACI,GAAL,GAAWnD,MAAM,GAAG2C,SAApB;AACAI,MAAI,CAACK,MAAL,GAAc,CAAd;AAJyF,cAMvEb,cANuE;;AAMzF,+CAAkC;AAA7B,QAAIc,KAAK,aAAT;AAED,QAAMC,MAAM,GAAGC,OAAO,CAACR,IAAI,CAACE,GAAN,EAAWI,KAAX,CAAtB;;AAEA,QAAIC,MAAM,GAAG,CAAb,EAAgB;AACZ;AACH;;AAED,QAAIH,GAAG,GAAG,CAACV,MAAM,GAAGa,MAAV,IAAoBA,MAApB,IAA8BT,WAAW,GAAGC,UAA5C,CAAV;;AACA,QAAIK,GAAG,IAAKnD,MAAM,GAAG6C,WAArB,EAAmC;AAC/B;AACH;;AAGDE,QAAI,CAACE,GAAL,GAAWK,MAAX;AACAP,QAAI,CAACI,GAAL,GAAWnD,MAAM,GAAG6C,WAAT,GAAuBM,GAAlC;AACH;;AAEDJ,MAAI,CAACG,GAAL,GAAWH,IAAI,CAACE,GAAL,GAAWJ,WAAX,GAAyBC,UAApC;AAEA,SAAOC,IAAP;AACH;;AAED,SAASQ,OAAT,CAAkBI,GAAlB,EAAuBC,GAAvB,EAA4B;AACxB,SAAO,CAAED,GAAG,GAAGC,GAAP,GAAc,CAAf,IAAoBA,GAA3B;AACH;;AAED,SAASH,MAAT,CAAiBE,GAAjB,EAAsBC,GAAtB,EAA2B;AACvB,SAAO,CAAC,CAAED,GAAG,GAAGC,GAAP,GAAc,CAAf,IAAoB,CAArB,IAA0BA,GAAjC;AACH;;AAEM,SAASC,cAAT,CAAmBpE,GAAnB,EAAwBQ,OAAxB,EAAiCC,OAAjC,EAA0CH,KAA1C,EAAiDC,MAAjD,EAAyD8D,MAAzD,EACHC,OADG,EACMC,KADN,EACaC,UADb,EAEHC,OAFG,EAEMC,KAFN,EAEaC,UAFb,EAGHC,OAHG,EAGMC,OAHN,EAIH3B,SAJG,EAIQK,YAJR,EAKHuB,QALG,EAKOC,SALP,EAKkBC,SALlB,EAK6BC,SAL7B,EAKwCjE,SALxC,EAKmDkE,QALnD,EAK6DC,UAL7D,EAKyElE,SALzE,EAKoF;AAEvF,MAAIyD,KAAK,GAAGH,KAAZ,EAAmB;AACf;AACH;;AAED,MAAIU,SAAS,KAAK,CAAlB,EAAqB;AACjB;AACH;;AAED,MAAMG,aAAa,GAAG7E,MAAM,GAAG2C,SAA/B;AAEA,MAAMmC,KAAK,GAAG,CAACD,aAAa,GAAG7B,YAAjB,KAAkCiB,UAAU,GAAGG,UAA/C,CAAd;AAEA,MAAMW,UAAU,GAAGF,aAAa,GAAG,CAACZ,UAAU,GAAGF,OAAd,IAAyBe,KAA5D;AACA,MAAME,QAAQ,GAAGH,aAAa,GAAG,CAACb,KAAK,GAAGC,UAAT,IAAuBa,KAAxD;AACA,MAAMG,aAAa,GAAGjC,YAAY,GAAG,CAACkB,OAAO,GAAGE,UAAX,IAAyBU,KAA9D;AACA,MAAMI,WAAW,GAAGlC,YAAY,GAAG,CAACoB,UAAU,GAAGD,KAAd,IAAuBW,KAA1D;AAEA,MAAMK,aAAa,GAAG,CAACJ,UAAU,GAAGE,aAAd,KAAgCJ,aAAa,GAAG7B,YAAhD,IAAgEL,SAAtF;AACA,MAAMyC,gBAAgB,GAAG,CAACL,UAAU,GAAGE,aAAd,KAAgCJ,aAAa,GAAG7B,YAAhD,IAAgEA,YAAzF;AACA,MAAMqC,WAAW,GAAG,CAACL,QAAQ,GAAGE,WAAZ,KAA4BL,aAAa,GAAG7B,YAA5C,IAA4DL,SAAhF;AACA,MAAM2C,cAAc,GAAG,CAACN,QAAQ,GAAGE,WAAZ,KAA4BL,aAAa,GAAG7B,YAA5C,IAA4DA,YAAnF;AAEA,MAAMuC,WAAW,GAAGR,UAAU,GAAGI,aAAjC;AACA,MAAMK,KAAK,GAAGT,UAAU,GAAGE,aAAb,GAA6BE,aAA7B,GAA6CC,gBAA3D;AACA,MAAMK,SAAS,GAAGT,QAAQ,GAAGK,WAA7B;AACA,MAAMK,GAAG,GAAGV,QAAQ,GAAGE,WAAX,GAAyBG,WAAzB,GAAuCC,cAAnD;AAEA,MAAMvE,KAAK,GAAI4E,IAAI,CAACC,GAAL,CAAS5B,KAAK,GAAGD,OAAjB,IAA4B4B,IAAI,CAACC,GAAL,CAASzB,KAAK,GAAGD,OAAjB,CAA7B,KAA4D,CAA5D,GACR,CADQ,GAER,CAACyB,IAAI,CAACC,GAAL,CAAS7B,OAAO,GAAGE,UAAnB,IAAiC0B,IAAI,CAACC,GAAL,CAAS1B,OAAO,GAAGE,UAAnB,CAAlC,KACGuB,IAAI,CAACC,GAAL,CAAS5B,KAAK,GAAGD,OAAjB,IAA4B4B,IAAI,CAACC,GAAL,CAASzB,KAAK,GAAGD,OAAjB,CAD/B,CAFN;AAKAzE,KAAG,CAACgB,SAAJ,GAAgBA,SAAhB;AACAhB,KAAG,CAAC6B,WAAJ,GAAkBiD,QAAQ,CAACK,UAAD,EAAa,CAAb,CAA1B;AAEAnF,KAAG,CAACsC,SAAJ;AAEAtC,KAAG,CAACuC,MAAJ,CAAW/B,OAAX,EAAoBD,MAAM,GAAGE,OAA7B;AACAT,KAAG,CAAC4C,MAAJ,CAAWpC,OAAO,GAAGF,KAArB,EAA4BC,MAAM,GAAGE,OAArC;AAEAT,KAAG,CAAC6C,MAAJ;AAEAuD,eAAa,CAACpG,GAAD,EAAMQ,OAAN,EAAeD,MAAM,GAAGE,OAAT,GAAmBuF,SAAlC,EAA6C1F,KAA7C,EAAoD2F,GAApD,EAAyD5B,MAAzD,EAAiEO,OAAjE,EAA0EC,OAA1E,EAAmFK,QAAnF,EAA6FF,SAA7F,EAAwGF,QAAQ,CAACK,UAAD,EAAa7D,KAAK,GAAGL,SAArB,CAAhH,EAAiJ8D,SAAS,CAACI,UAAD,EAAa7D,KAAK,GAAGL,SAArB,CAA1J,EAA2LK,KAA3L,CAAb;;AAEA,MAAIA,KAAK,GAAG,CAAZ,EAAe;AACX8E,iBAAa,CAACpG,GAAD,EAAMQ,OAAN,EAAeD,MAAM,GAAGE,OAAT,GAAmBqF,WAAlC,EAA+CxF,KAA/C,EAAsDyF,KAAtD,EAA6D1B,MAA7D,EAAqEO,OAArE,EAA8EC,OAA9E,EAAuFK,QAAvF,EAAiGF,SAAjG,EAA4GF,QAAQ,CAACK,UAAD,EAAa,CAAC,IAAI7D,KAAL,IAAcL,SAA3B,CAApH,EAA2J8D,SAAS,CAACI,UAAD,EAAa,CAAC,IAAI7D,KAAL,IAAcL,SAA3B,CAApK,EAA2MK,KAA3M,CAAb;AACH;AACJ;;AAED,SAAS8E,aAAT,CAAwBpG,GAAxB,EAA6BQ,OAA7B,EAAsCC,OAAtC,EAA+CH,KAA/C,EAAsDC,MAAtD,EAA8D8D,MAA9D,EAAsEgC,OAAtE,EAA+EC,KAA/E,EAAsFpB,QAAtF,EAAgGF,SAAhG,EAA2GzD,KAA3G,EAAkHgF,MAAlH,EAA0HjF,KAA1H,EAAiI;AAE7HtB,KAAG,CAAC6B,WAAJ,GAAkBN,KAAlB;AACAvB,KAAG,CAACwG,SAAJ,GAAgBD,MAAhB;AAEAvG,KAAG,CAACsC,SAAJ;AAEA,MAAMmE,SAAS,GAAGlG,MAAM,IAAI8D,MAAM,GAAG,CAAb,CAAxB;AACA,MAAMqC,QAAQ,GAAG,CAACL,OAAO,GAAGC,KAAX,KAAqBjC,MAAM,GAAG,CAA9B,CAAjB;;AAEA,OAAK,IAAI7B,CAAC,GAAG,CAAR,EAAWE,CAAC,GAAGjC,OAAO,GAAGgG,SAAzB,EAAoCE,EAAC,GAAGN,OAA7C,EAAsD7D,CAAC,GAAG6B,MAA1D,EAAkE7B,CAAC,IAAIE,CAAC,IAAI+D,SAAT,EAAoBE,EAAC,IAAID,QAA5F,EAAsG;AAClG1G,OAAG,CAACuC,MAAJ,CAAW/B,OAAX,EAAoBkC,CAApB;AACA1C,OAAG,CAAC4C,MAAJ,CAAWpC,OAAO,GAAGF,KAArB,EAA4BoC,CAA5B;;AACA,QAAMzC,EAAC,GAAG+E,SAAS,GAAGxE,OAAO,GAAGF,KAAV,GAAkBN,GAAG,CAAC4G,WAAJ,CAAgBD,EAAhB,EAAmBrG,KAAxC,GAAgDE,OAAnE;;AACAR,OAAG,CAAC6G,QAAJ,CAAaF,EAAC,GAAG,CAAjB,EAAoB1G,EAApB,EAAuByC,CAAC,GAAGwC,QAAQ,GAAG,CAAtC;AACH;;AAED,MAAMyB,CAAC,GAAIL,KAAK,GAAGI,QAAT,GAAqB,CAA/B;AACA,MAAMzG,CAAC,GAAG+E,SAAS,GAAGxE,OAAO,GAAGF,KAAV,GAAkBN,GAAG,CAAC4G,WAAJ,CAAgBD,CAAhB,EAAmBrG,KAAxC,GAAgDE,OAAnE;AACAR,KAAG,CAAC6G,QAAJ,CAAaF,CAAb,EAAgB1G,CAAhB,EAAmBQ,OAAO,GAAGF,MAAV,GAAmB2E,QAAQ,GAAG,CAAjD;AAEAlF,KAAG,CAAC6C,MAAJ;AACH;;AAEM,SAASiE,eAAT,CAAoB9G,GAApB,EAAyBQ,OAAzB,EAAkCC,OAAlC,EAA2C4E,KAA3C,EAAkD0B,KAAlD,EAAyDC,KAAzD,EAAgEC,MAAhE,EAAwEtG,IAAxE,EAA8EC,KAA9E,EAAqFsG,UAArF,EAAiGC,QAAjG,EAA2G7F,KAA3G,EAAkHwD,QAAlH,EAA4HK,UAA5H,EAAwIlE,SAAxI,EAAmJ;AAEtJ,MAAImG,aAAJ,EAAmBC,WAAnB;;AAEA,MAAIH,UAAU,GAAGC,QAAjB,EAA2B;AACvBE,eAAW,GAAGvC,QAAQ,CAACK,UAAD,EAAa7D,KAAK,GAAGL,SAArB,CAAtB;AACAmG,iBAAa,GAAGtC,QAAQ,CAACK,UAAD,EAAalE,SAAb,CAAxB;AACH,GAHD,MAGO;AACHoG,eAAW,GAAGvC,QAAQ,CAACK,UAAD,EAAalE,SAAb,CAAtB;AACAmG,iBAAa,GAAGtC,QAAQ,CAACK,UAAD,EAAa,CAAC,IAAI7D,KAAL,IAAcL,SAA3B,CAAxB;AACH;;AAEDjB,KAAG,CAACwG,SAAJ,GAAgBa,WAAhB;AACA,MAAMC,GAAG,GAAGpB,IAAI,CAACqB,KAAL,CAAW5G,IAAI,GAAGwG,QAAlB,IAA8B,CAA1C;;AACA,OAAK,IAAIK,CAAC,GAAGL,QAAQ,GAAGG,GAAxB,EAA6BE,CAAC,GAAG5G,KAAK,GAAGuG,QAAzC,EAAmDK,CAAC,IAAIL,QAAxD,EAAkE;AAC9D,QAAMM,SAAS,GAAGvB,IAAI,CAACqB,KAAL,CAAWR,KAAK,GAAGC,KAAK,GAAGQ,CAA3B,CAAlB;AACAE,YAAQ,CAAC1H,GAAD,EAAMQ,OAAN,EAAeC,OAAf,EAAwBgH,SAAxB,EAAmCR,MAAnC,EAA2CO,CAA3C,EAA8C7G,IAA9C,EAAoD0E,KAApD,CAAR;AACH;;AAED,MAAI6B,UAAU,KAAKC,QAAnB,EAA6B;AACzB;AACH;;AAEDnH,KAAG,CAACwG,SAAJ,GAAgBY,aAAhB;AACA,MAAMO,KAAK,GAAGzB,IAAI,CAACqB,KAAL,CAAW5G,IAAI,GAAGuG,UAAlB,IAAgC,CAA9C;;AACA,OAAK,IAAIM,EAAC,GAAGN,UAAU,GAAGS,KAA1B,EAAiCH,EAAC,GAAG5G,KAAK,GAAGsG,UAA7C,EAAyDM,EAAC,IAAIN,UAA9D,EAA0E;AACtE,QAAMO,UAAS,GAAGvB,IAAI,CAACqB,KAAL,CAAWR,KAAK,GAAGC,KAAK,GAAGQ,EAA3B,CAAlB;;AACAE,YAAQ,CAAC1H,GAAD,EAAMQ,OAAN,EAAeC,OAAf,EAAwBgH,UAAxB,EAAmCR,MAAnC,EAA2CO,EAA3C,EAA8C7G,IAA9C,EAAoD0E,KAApD,CAAR;AACH;AACJ;AAED,IAAMuC,UAAU,GAAG9H,WAAW,CAAC,EAAD,CAA9B;;AAEA,SAAS4H,QAAT,CAAmB1H,GAAnB,EAAwBQ,OAAxB,EAAiCC,OAAjC,EAA0CgH,SAA1C,EAAqDR,MAArD,EAA6DY,QAA7D,EAAuElH,IAAvE,EAA6E0E,KAA7E,EAAoF;AAChF,MAAMyC,IAAI,GAAGC,UAAU,CAACN,SAAD,EAAYR,MAAZ,CAAvB;AACAjH,KAAG,CAAC6G,QAAJ,CAAaiB,IAAb,EAAmBtH,OAAO,GAAG,CAACqH,QAAQ,GAAGlH,IAAZ,IAAoB0E,KAA9B,GAAsCuC,UAAzD,EAAqEnH,OAArE;AACH;;AAED,IAAMuH,WAAW,GAAG,CAChB,KADgB,EACT,KADS,EACF,KADE,EACK,KADL,EACY,KADZ,EACmB,KADnB,EAEhB,KAFgB,EAET,KAFS,EAEF,KAFE,EAEK,KAFL,EAEY,KAFZ,EAEmB,KAFnB,CAApB;AAIA,IAAMC,MAAM,GAAG,CACX,SADW,EACA,UADA,EACY,OADZ,EACqB,OADrB,EAC8B,KAD9B,EACqC,MADrC,EAEX,MAFW,EAEH,QAFG,EAEO,WAFP,EAEoB,SAFpB,EAE+B,UAF/B,EAE2C,UAF3C,CAAf;AAIA,IAAMC,SAAS,GAAG,CAAE,KAAF,EAAS,KAAT,EAAgB,KAAhB,EAAuB,KAAvB,EAA8B,KAA9B,EAAqC,KAArC,EAA4C,KAA5C,CAAlB;AACA,IAAMC,IAAI,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,EAAgC,WAAhC,EAA6C,UAA7C,EAAyD,QAAzD,EAAmE,UAAnE,CAAb;AAEA;;;;;;;;;AASO,SAASJ,UAAT,CAAqBN,SAArB,EAAgCR,MAAhC,EAAwC;AAE3C,MAAMmB,CAAC,GAAG,IAAIC,IAAJ,CAASZ,SAAT,CAAV;;AAEA,UAAQR,MAAR;AACI,SAAK,MAAL;AACI,aAAOmB,CAAC,CAACE,UAAF,KAAiB,GAAjB,GAAuBL,MAAM,CAACG,CAAC,CAACG,WAAF,EAAD,CAA7B,GAAiD,GAAjD,GAAuDH,CAAC,CAACI,cAAF,EAA9D;;AACJ,SAAK,OAAL;AACI,aAAOC,OAAO,CAACL,CAAC,CAACM,WAAF,EAAD,CAAP,GAA2B,KAAlC;;AACJ,SAAK,WAAL;AACI,aAAOV,WAAW,CAACI,CAAC,CAACG,WAAF,EAAD,CAAX,GAA+B,GAA/B,GAAqCH,CAAC,CAACE,UAAF,EAA5C;;AACJ,SAAK,UAAL;AACI,aAAOJ,SAAS,CAACE,CAAC,CAACO,SAAF,EAAD,CAAT,GAA2B,IAA3B,GAAkCP,CAAC,CAACE,UAAF,EAAlC,GAAmD,GAAnD,GAAyDL,MAAM,CAACG,CAAC,CAACG,WAAF,EAAD,CAA/D,GAAmF,GAAnF,GAAyFH,CAAC,CAACI,cAAF,EAAhG;;AACJ,SAAK,eAAL;AACI,aAAOL,IAAI,CAACC,CAAC,CAACO,SAAF,EAAD,CAAJ,GAAsB,IAAtB,GAA6BP,CAAC,CAACE,UAAF,EAA7B,GAA8C,GAA9C,GAAoDL,MAAM,CAACG,CAAC,CAACG,WAAF,EAAD,CAA1D,GAA8E,GAA9E,GAAoFH,CAAC,CAACI,cAAF,EAA3F;;AACJ,SAAK,KAAL;AACI,aAAOJ,CAAC,CAACE,UAAF,KAAiB,GAAjB,GAAuBL,MAAM,CAACG,CAAC,CAACG,WAAF,EAAD,CAApC;AAZR;AAcH;;AAED,SAASE,OAAT,CAAkB9B,CAAlB,EAAqB;AACjB,SAAOA,CAAC,GAAG,EAAJ,GAAS,MAAMA,CAAf,GAAmBA,CAA1B;AACH;;AAEM,IAAMiC,YAAY,GAAG9I,WAAW,CAAC,EAAD,CAAhC;AACA,IAAM+I,cAAc,GAAG/I,WAAW,CAAC,CAAD,CAAlC;AACP,IAAMgJ,aAAa,GAAGhJ,WAAW,CAAC,CAAD,CAAjC;AACA,IAAMiJ,UAAU,GAAGC,uBAAuB,CAAC,SAAD,EAAY,CAAZ,CAA1C;AAEO,SAASC,mBAAT,CAA8BjJ,GAA9B,EAAmCQ,OAAnC,EAA4CC,OAA5C,EAAqDH,KAArD,EAA4DC,MAA5D,EAAoE2I,IAApE,EAA0EC,EAA1E,EACHC,mBADG,EACkBC,sBADlB,EAC0ClE,UAD1C,EACsDlE,SADtD,EACiE;AAEpE,MAAMN,IAAI,GAAGH,OAAO,GAAG0I,IAAI,GAAG5I,KAAjB,GAAyBsI,YAAtC;AACA,MAAMhI,KAAK,GAAGJ,OAAO,GAAG2I,EAAE,GAAG7I,KAAf,GAAuBsI,YAArC;AACA,MAAMU,KAAK,GAAG7I,OAAO,GAAGoI,cAAxB;AACA,MAAMU,GAAG,GAAG9I,OAAO,GAAGF,MAAV,GAAmBsI,cAA/B;AAEA7I,KAAG,CAACwG,SAAJ,GAAgB4C,mBAAmB,CAACjE,UAAD,EAAalE,SAAb,CAAnC;AACAjB,KAAG,CAACsC,SAAJ;AACAkH,iBAAe,CAACxJ,GAAD,EAAMQ,OAAN,EAAeG,IAAf,EAAqB2I,KAArB,EAA4BC,GAA5B,EAAiCT,aAAjC,EAAgD,CAAhD,CAAf;AACAU,iBAAe,CAACxJ,GAAD,EAAMY,KAAN,EAAaJ,OAAO,GAAGF,KAAvB,EAA8BgJ,KAA9B,EAAqCC,GAArC,EAA0C,CAA1C,EAA6CT,aAA7C,CAAf;AACA9I,KAAG,CAACyJ,SAAJ;AACAzJ,KAAG,CAAC0J,IAAJ;AAEA1J,KAAG,CAACwG,SAAJ,GAAgB6C,sBAAsB,CAAClE,UAAD,EAAalE,SAAb,CAAtC;AACAjB,KAAG,CAACsC,SAAJ;AACAkH,iBAAe,CAACxJ,GAAD,EAAMW,IAAI,GAAGiI,YAAb,EAA2BjI,IAA3B,EAAiC2I,KAAjC,EAAwCC,GAAxC,EAA6CT,aAA7C,EAA4D,CAA5D,CAAf;AACAU,iBAAe,CAACxJ,GAAD,EAAMY,KAAN,EAAaA,KAAK,GAAGgI,YAArB,EAAmCU,KAAnC,EAA0CC,GAA1C,EAA+C,CAA/C,EAAkDT,aAAlD,CAAf;AACA9I,KAAG,CAACyJ,SAAJ;AACAzJ,KAAG,CAAC0J,IAAJ;AAEA1J,KAAG,CAAC6B,WAAJ,GAAkBwH,sBAAsB,CAAClE,UAAD,EAAalE,SAAb,CAAxC;AACAjB,KAAG,CAACuC,MAAJ,CAAW5B,IAAX,EAAiB2I,KAAjB;AACAtJ,KAAG,CAAC4C,MAAJ,CAAWhC,KAAX,EAAkB0I,KAAlB;AACAtJ,KAAG,CAACuC,MAAJ,CAAW5B,IAAX,EAAiB4I,GAAjB;AACAvJ,KAAG,CAAC4C,MAAJ,CAAWhC,KAAX,EAAkB2I,GAAlB;AACAvJ,KAAG,CAAC6C,MAAJ;AAEA7C,KAAG,CAACwG,SAAJ,GAAgBuC,UAAU,CAAC9H,SAAD,CAA1B;AACAjB,KAAG,CAACsC,SAAJ;AACA,MAAMqH,GAAG,GAAGf,YAAY,GAAG,CAA3B;AAAA,MAA8BgB,GAAG,GAAG,CAACN,KAAK,GAAGC,GAAT,IAAgB,CAApD;AACAC,iBAAe,CAACxJ,GAAD,EAAMW,IAAI,GAAGgJ,GAAP,GAAa,CAAnB,EAAsBhJ,IAAI,GAAGgJ,GAAP,GAAa,CAAnC,EAAsCC,GAAG,GAAG,CAA5C,EAA+CA,GAAG,GAAG,CAArD,EAAwD,CAAxD,EAA2D,CAA3D,CAAf;AACAJ,iBAAe,CAACxJ,GAAD,EAAMY,KAAK,GAAG+I,GAAR,GAAc,CAApB,EAAuB/I,KAAK,GAAG+I,GAAR,GAAc,CAArC,EAAwCC,GAAG,GAAG,CAA9C,EAAiDA,GAAG,GAAG,CAAvD,EAA0D,CAA1D,EAA6D,CAA7D,CAAf;AACA5J,KAAG,CAACyJ,SAAJ;AACAzJ,KAAG,CAAC0J,IAAJ;AACH;AAEM,SAASF,eAAT,CAA0BxJ,GAA1B,EAA+B6J,KAA/B,EAAsCC,GAAtC,EAA2CC,KAA3C,EAAkDC,GAAlD,EAAuDC,UAAvD,EAAmEC,WAAnE,EAAgF;AACnFlK,KAAG,CAACuC,MAAJ,CAAWsH,KAAK,GAAGI,UAAnB,EAA+BF,KAA/B;AACA/J,KAAG,CAAC4C,MAAJ,CAAWkH,GAAG,GAAGI,WAAjB,EAA8BH,KAA9B;AACA/J,KAAG,CAACmK,gBAAJ,CAAqBL,GAArB,EAA0BC,KAA1B,EAAiCD,GAAjC,EAAsCC,KAAK,GAAGG,WAA9C;AACAlK,KAAG,CAAC4C,MAAJ,CAAWkH,GAAX,EAAgBE,GAAG,GAAGE,WAAtB;AACAlK,KAAG,CAACmK,gBAAJ,CAAqBL,GAArB,EAA0BE,GAA1B,EAA+BF,GAAG,GAAGI,WAArC,EAAkDF,GAAlD;AACAhK,KAAG,CAAC4C,MAAJ,CAAWiH,KAAK,GAAGI,UAAnB,EAA+BD,GAA/B;AACAhK,KAAG,CAACmK,gBAAJ,CAAqBN,KAArB,EAA4BG,GAA5B,EAAiCH,KAAjC,EAAwCG,GAAG,GAAGC,UAA9C;AACAjK,KAAG,CAAC4C,MAAJ,CAAWiH,KAAX,EAAkBE,KAAK,GAAGE,UAA1B;AACAjK,KAAG,CAACmK,gBAAJ,CAAqBN,KAArB,EAA4BE,KAA5B,EAAmCF,KAAK,GAAGI,UAA3C,EAAuDF,KAAvD;AACH;AAEM,SAASK,oBAAT,CAAyBpK,GAAzB,EAA8BQ,OAA9B,EAAuCC,OAAvC,EAAgD4J,QAAhD,EAA0DC,UAA1D,EAAsEC,cAAtE,EAAsFC,cAAtF,EAAsGC,cAAtG,EAAsHC,YAAtH,EAAoIvF,UAApI,EAAgJlE,SAAhJ,EAA2J;AAE9J,MAAM0J,OAAO,GAAG3K,GAAG,CAAC4K,IAApB;AAEA5K,KAAG,CAAC4K,IAAJ,GAAYL,cAAc,GAAG,CAAlB,GAAuB,KAAvB,GAA+BG,YAA1C;AAEA,MAAIG,UAAU,GAAGrK,OAAjB;AAAA,MAA0B0C,SAAS,GAAGzC,OAAtC;AAN8J;AAAA;AAAA;;AAAA;AAQ9J,0BAAqB6J,UAArB,mIAAiC;AAAA,UAAxBQ,QAAwB;AAC7B,UAAMC,SAAS,GAAG/K,GAAG,CAAC4G,WAAJ,CAAgBkE,QAAQ,CAAC1J,KAAzB,EAAgCd,KAAlD;AACA,UAAMA,KAAK,GAAGyK,SAAS,GAAG,MAAMR,cAAhC;;AACA,UAAIM,UAAU,GAAGvK,KAAb,GAAqB,MAAMmK,cAA3B,GAA4CJ,QAAhD,EAA0D;AACtDQ,kBAAU,GAAGrK,OAAb;AACA0C,iBAAS,IAAIqH,cAAc,GAAGE,cAA9B;AACH;;AACDO,kBAAY,CAAChL,GAAD,EAAM6K,UAAN,EAAkB3H,SAAlB,EAA6B5C,KAA7B,EAAoCiK,cAApC,EAAoDC,cAApD,EACRM,QAAQ,CAAC1J,KADD,EACQ2J,SADR,EACmBD,QAAQ,CAAChG,QAD5B,EACsCgG,QAAQ,CAACxJ,KAD/C,EACsD6D,UADtD,EACkElE,SADlE,CAAZ;AAEA6J,cAAQ,CAAC7K,CAAT,GAAa4K,UAAb;AACAC,cAAQ,CAACpI,CAAT,GAAaQ,SAAb;AACA4H,cAAQ,CAAChB,GAAT,GAAee,UAAU,GAAGvK,KAA5B;AACAwK,cAAQ,CAACd,GAAT,GAAe9G,SAAS,GAAGqH,cAA3B;AACAM,gBAAU,IAAIvK,KAAK,GAAGmK,cAAtB;AACH;AAtB6J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAwB9JzK,KAAG,CAAC4K,IAAJ,GAAWD,OAAX;AACH;AAED,IAAMM,mBAAmB,GAAGnL,WAAW,CAAC,CAAD,CAAvC;AAEO,SAASkL,YAAT,CAAuBhL,GAAvB,EAA4BQ,OAA5B,EAAqCC,OAArC,EAA8CH,KAA9C,EAAqDC,MAArD,EAA6D2K,MAA7D,EAAqEpD,IAArE,EAA2EiD,SAA3E,EAAsFI,eAAtF,EAAuG7J,KAAvG,EAA8G6D,UAA9G,EAA0HlE,SAA1H,EAAqI;AAExIjB,KAAG,CAAC6B,WAAJ,GAAkBsJ,eAAe,CAAClK,SAAD,EAAY,CAAZ,EAAe,CAAf,CAAjC;AAEAjB,KAAG,CAACgB,SAAJ,GAAgBiK,mBAAhB;AAEAjL,KAAG,CAACsC,SAAJ;AACAtC,KAAG,CAACwG,SAAJ,GAAgB2E,eAAe,CAAClK,SAAD,EAAY,IAAIK,KAAhB,EAAuB6D,UAAvB,CAA/B;AAEAqE,iBAAe,CAACxJ,GAAD,EAAMQ,OAAN,EAAeA,OAAO,GAAGF,KAAzB,EAAgCG,OAAhC,EAAyCA,OAAO,GAAGF,MAAnD,EAA2D2K,MAA3D,EAAmEA,MAAnE,CAAf;AACAlL,KAAG,CAACyJ,SAAJ;AACAzJ,KAAG,CAAC6C,MAAJ;AACA7C,KAAG,CAAC0J,IAAJ;AAEA1J,KAAG,CAACwG,SAAJ,GAAgB2E,eAAe,CAAClK,SAAD,EAAYK,KAAZ,EAAmB,CAAnB,CAA/B;AAEAtB,KAAG,CAAC6B,WAAJ,GAAkB7B,GAAG,CAACwG,SAAtB;AACAxG,KAAG,CAAC6G,QAAJ,CAAaiB,IAAb,EAAmBtH,OAAO,GAAG,OAAOD,MAAjB,GAA0BA,MAAM,GAAGe,KAAT,GAAiB,CAA9D,EAAiEb,OAAO,GAAG,IAAE,CAAF,GAAMF,MAAjF;;AAEA,MAAIe,KAAK,GAAG,GAAZ,EAAiB;AACb,QAAM8J,UAAU,GAAG,KAAK9J,KAAK,GAAG,GAAb,CAAnB;AACAtB,OAAG,CAACgB,SAAJ,GAAgBiK,mBAAmB,GAAG,CAAtC;AACAjL,OAAG,CAACsC,SAAJ;AACA,QAAM+I,CAAC,GAAG7K,OAAO,GAAGD,MAAM,GAAG,CAA7B;AACAP,OAAG,CAACuC,MAAJ,CAAW8I,CAAX,EAAc5K,OAAO,GAAGF,MAAM,GAAG,CAAjC;AACAP,OAAG,CAAC4C,MAAJ,CAAWyI,CAAC,GAAG9K,MAAM,GAAG,CAAxB,EAA2BE,OAAO,GAAGF,MAAM,GAAG,CAAT,GAAW,CAAhD;AACAP,OAAG,CAAC4C,MAAJ,CAAWyI,CAAC,GAAG9K,MAAM,GAAG,CAAb,GAAiBA,MAAM,GAAG,CAAT,GAAa6K,UAAzC,EAAqD3K,OAAO,GAAGF,MAAM,GAAG,CAAT,GAAW,CAArB,GAAyBA,MAAM,GAAG,CAAT,GAAa6K,UAA3F;AACApL,OAAG,CAAC6C,MAAJ;AACH;AACJ;AAED,IAAMyI,aAAa,GAAGxL,WAAW,CAAC,EAAD,CAAjC;AACA,IAAMyL,YAAY,GAAGzL,WAAW,CAAC,EAAD,CAAhC;AACA,IAAM0L,WAAW,GAAG1L,WAAW,CAAC,CAAD,CAA/B;AAEO,SAAS2L,UAAT,CAAqBzL,GAArB,EAA0BQ,OAA1B,EAAmCC,OAAnC,EAA4CiL,WAA5C,EAAyDC,YAAzD,EAAuErL,KAAvE,EAA8EK,IAA9E,EAAoFC,KAApF,EAA2FgL,KAA3F,EAAkG/D,QAAlG,EAA4GgE,cAA5G,EAA4HC,UAA5H,EAAwI3G,UAAxI,EAAoJ;AAEvJ,MAAM0F,UAAU,GAAGrK,OAAO,GAAG,CAACqH,QAAQ,GAAGlH,IAAZ,IAAqBiL,KAArB,GAA8BtL,KAA3D;AAEAN,KAAG,CAACgB,SAAJ,GAAgB0K,WAAhB;AACA1L,KAAG,CAAC6B,WAAJ,GAAkBgK,cAAc,CAAC1G,UAAD,EAAa2G,UAAb,CAAhC;AACA9L,KAAG,CAACsC,SAAJ;AACAtC,KAAG,CAACuC,MAAJ,CAAWsI,UAAX,EAAuBpK,OAAvB;AACAT,KAAG,CAAC4C,MAAJ,CAAWiI,UAAX,EAAuBpK,OAAO,GAAGkL,YAAjC;AACA3L,KAAG,CAAC6C,MAAJ;AACH;AAEM,SAASkJ,eAAT,CAA0B/L,GAA1B,EAA+BC,CAA/B,EAAkC+L,SAAlC,EAA6CC,UAA7C,EAAyD9L,UAAzD,EAAqEC,UAArE,EAAiFC,UAAjF,EAA6FW,SAA7F,EACH6G,QADG,EACOqE,YADP,EACqB1L,OADrB,EAC8BC,OAD9B,EACuCE,IADvC,EAC6CC,KAD7C,EACoDgL,KADpD,EAC2DtL,KAD3D,EACkEC,MADlE,EAC0EyG,KAD1E,EAEHmF,UAFG,EAGHjH,QAHG,EAGOkH,QAHP,EAGiBC,cAHjB,EAGiCC,oBAHjC,EAGuDC,kBAHvD,EAG2EC,kBAH3E,EAIHV,UAJG,EAIS3G,UAJT,EAIqBsH,WAJrB,EAIkCxL,SAJlC,EAI6CgG,MAJ7C,EAIqDyF,SAJrD,EAIgEC,OAJhE,EAIyEC,YAJzE,EAIuF;AAE1F,MAAMjC,OAAO,GAAG3K,GAAG,CAAC4K,IAApB;AAEA,MAAMiC,UAAU,GAAG3H,QAAQ,GAAG,KAAX,GAAmBkH,QAAtC;AAEA,MAAM3E,SAAS,GAAGvB,IAAI,CAACqB,KAAL,CAAWtH,CAAC,CAAC,CAAD,CAAD,GAAO+G,KAAK,GAAGa,QAA1B,CAAlB;AAEA,MAAMC,IAAI,GAAGC,UAAU,CAACN,SAAD,EAAYR,MAAZ,CAAvB;AAEA,MAAM4D,UAAU,GAAGrK,OAAO,GAAG,CAACqH,QAAQ,GAAGlH,IAAZ,IAAqBiL,KAArB,GAA8BtL,KAA3D;AAEAN,KAAG,CAAC4K,IAAJ,GAAW,UAAUiC,UAArB;AACA,MAAIC,YAAY,GAAG9M,GAAG,CAAC4G,WAAJ,CAAgBkB,IAAhB,EAAsBxH,KAAtB,GAA8B,IAAIgL,aAArD;AACA,MAAIyB,aAAa,GAAG7H,QAApB;AAEA,MAAI8H,aAAa,GAAGhN,GAAG,CAAC4G,WAAJ,CAAgB,KAAhB,EAAuBtG,KAA3C;AAEA,MAAI2M,aAAa,GAAG,CAApB;AAEA,MAAIC,eAAe,GAAG3M,MAAtB;AAEA,MAAI4M,WAAW,GAAG,CAAlB;;AAEA,OAAK,IAAI3K,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwJ,SAAS,CAAC5J,MAA9B,EAAsCI,CAAC,EAAvC,EAA2C;AAEvC,QAAMtC,KAAK,GAAG8L,SAAS,CAACxJ,CAAD,CAAvB;AAFuC;AAAA;AAAA;;AAAA;AAIvC,4BAAmBtC,KAAnB,mIAA0B;AAAA,YAAfiB,IAAe;AAEtB,YAAMC,KAAK,GAAGD,IAAI,CAAC,CAAD,CAAlB;;AAEA,YAAIhB,UAAU,CAACiB,KAAD,CAAV,IAAqBhB,UAAU,CAACgB,KAAD,CAAV,GAAoB,CAA7C,EAAgD;AAE5C,cAAM8C,GAAG,GAAG/C,IAAI,CAAC+K,YAAD,CAAhB;AACA,cAAMkB,IAAI,GAAGnB,UAAU,CAAC7K,KAAD,CAAvB;AAEA+L,qBAAW,IAAIjJ,GAAf;AAEAlE,aAAG,CAAC4K,IAAJ,GAAWiC,UAAX;AACA,cAAMQ,SAAS,GAAGrN,GAAG,CAAC4G,WAAJ,CAAgBwG,IAAhB,EAAsB9M,KAAxC;AACAN,aAAG,CAAC4K,IAAJ,GAAW,UAAUiC,UAArB;AACA,cAAMS,QAAQ,GAAGtN,GAAG,CAAC4G,WAAJ,CAAgB1C,GAAhB,EAAqB5D,KAAtC;AAEAyM,uBAAa,IAAIzB,aAAa,GAAGpG,QAAjC;;AAEA,cAAMlE,UAAS,GAAGsM,QAAQ,GAAGD,SAAX,GAAuB/B,aAAzC;;AAEA,cAAItK,UAAS,GAAG8L,YAAhB,EAA8B;AAC1BA,wBAAY,GAAG9L,UAAf;AACH;;AAED,cAAIsM,QAAQ,GAAGL,aAAf,EAA8B;AAC1BA,yBAAa,GAAGK,QAAhB;AACH;;AAED,cAAIC,WAAW,GAAGrJ,GAAlB;;AAEA,cAAIjE,CAAC,CAACiM,YAAD,CAAD,GAAkBzE,SAAtB,EAAiC;AAC7B,gBAAM+F,UAAU,GAAGtH,IAAI,CAAC1C,GAAL,CAAS,CAAT,EAAY0I,YAAY,GAAG,CAA3B,CAAnB;AACAqB,uBAAW,GAAGE,iBAAiB,CAACxN,CAAD,EAAIkB,IAAJ,EAAUsG,SAAV,EAAqB+F,UAArB,EAAiCtB,YAAjC,CAA/B;AACH,WAHD,MAGO,IAAIjM,CAAC,CAACiM,YAAD,CAAD,GAAkBzE,SAAtB,EAAiC;AACpC,gBAAMiG,UAAU,GAAGxH,IAAI,CAACzC,GAAL,CAASxD,CAAC,CAACmC,MAAF,GAAW,CAApB,EAAuB8J,YAAY,GAAG,CAAtC,CAAnB;AACAqB,uBAAW,GAAGE,iBAAiB,CAACxN,CAAD,EAAIkB,IAAJ,EAAUsG,SAAV,EAAqByE,YAArB,EAAmCwB,UAAnC,CAA/B;AACH;;AAED,cAAMC,KAAK,GAAGxB,UAAU,CAAC3J,CAAD,CAAxB,CAlC4C,CAoC5C;AACA;;AACA,cAAMU,SAAS,GAAG3C,MAAM,GAAG,CAACgN,WAAW,GAAGI,KAAK,CAAC,CAAD,CAApB,KAA4BpN,MAAM,GAAGoN,KAAK,CAAC,CAAD,CAAd,GAAoBA,KAAK,CAAC,CAAD,CAArD,KAA6DA,KAAK,CAAC,CAAD,CAAL,GAAWA,KAAK,CAAC,CAAD,CAA7E,CAA3B;;AAEA,cAAIzK,SAAS,GAAGgK,eAAhB,EAAiC;AAC7BA,2BAAe,GAAGhK,SAAlB;AACH;AACJ;AACJ;AApDsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqD1C;;AAED,MAAIyJ,OAAJ,EAAa;AACTI,iBAAa,IAAIzB,aAAa,GAAGpG,QAAjC;AACH;;AAED,MAAI0H,YAAJ,EAAkB;AACdE,gBAAY,IAAIE,aAAa,GAAG1B,aAAhC;AACH;;AAED,MAAMsC,WAAW,GAAGd,YAAY,GAAG,IAAIxB,aAAvC;AACA,MAAMuC,YAAY,GAAGd,aAAa,GAAG,IAAIzB,aAAzC;AAEA,MAAIwC,gBAAgB,GAAGjD,UAAU,GAAG+C,WAAW,GAAG,CAAlD;AAEA,MAAIG,gBAAgB,GAAG,CAAvB;;AAEA,MAAIb,eAAe,GAAG5B,aAAlB,GAAkC7K,OAAO,GAAGoN,YAAhD,EAA8D;AAC1DE,oBAAgB,GAAGH,WAAW,GAAG,CAAd,GAAkBtC,aAArC;AACH;;AAED,MAAI0C,UAAU,GAAGF,gBAAgB,GAAGC,gBAApC;;AAEA,MAAIC,UAAU,GAAG,CAAjB,EAAoB;AAChBD,oBAAgB,GAAGA,gBAAgB,GAAG,CAACA,gBAAJ,GAAuBH,WAAW,GAAG,CAAd,GAAkB,EAA5E;AACH;;AAED,MAAMK,aAAa,GAAGD,UAAU,GAAGJ,WAAb,GAA2BtN,KAA3B,GAAmCE,OAAzD;;AAEA,MAAIyN,aAAa,GAAG,CAApB,EAAuB;AACnBF,oBAAgB,GAAGA,gBAAgB,GAAG,CAACA,gBAAJ,GAAuB,CAACH,WAAD,GAAe,CAAf,GAAmB,EAA7E;AACH;;AAEDE,kBAAgB,IAAIC,gBAApB;AAEA/N,KAAG,CAACwG,SAAJ,GAAgB6F,cAAc,CAAClH,UAAD,EAAa2G,UAAb,CAA9B;AACA9L,KAAG,CAAC6B,WAAJ,GAAkByK,oBAAoB,CAACR,UAAD,CAAtC;AACA9L,KAAG,CAACgB,SAAJ,GAAgB,CAAhB;AACAhB,KAAG,CAACsC,SAAJ;AACAmK,aAAW,CAACxM,CAAZ,GAAgB6N,gBAAhB;AACArB,aAAW,CAAC3C,GAAZ,GAAkB2C,WAAW,CAACxM,CAAZ,GAAgB2N,WAAlC;AACAnB,aAAW,CAAC/J,CAAZ,GAAgBjC,OAAhB;AACAgM,aAAW,CAACzC,GAAZ,GAAkByC,WAAW,CAAC/J,CAAZ,GAAgBmL,YAAlC;AACArE,iBAAe,CAACxJ,GAAD,EAAMyM,WAAW,CAACxM,CAAlB,EAAqBwM,WAAW,CAAC3C,GAAjC,EAAsC2C,WAAW,CAAC/J,CAAlD,EAAqD+J,WAAW,CAACzC,GAAjE,EAAsElB,aAAtE,EAAqFA,aAArF,CAAf;AACA9I,KAAG,CAACyJ,SAAJ;AACAzJ,KAAG,CAAC0J,IAAJ;AACA1J,KAAG,CAAC6C,MAAJ;AAEA,MAAIqL,WAAW,GAAGzB,WAAW,CAAC/J,CAAZ,GAAgB4I,aAAhB,GAAgCpG,QAAlD;AAEAlF,KAAG,CAACwG,SAAJ,GAAgB+F,kBAAkB,CAACpH,UAAD,EAAa2G,UAAb,CAAlC;AACA9L,KAAG,CAAC6G,QAAJ,CAAaiB,IAAb,EAAmB2E,WAAW,CAACxM,CAAZ,GAAgBqL,aAAnC,EAAkD4C,WAAlD;;AAEA,MAAIxB,SAAJ,EAAe;AACX1M,OAAG,CAACsC,SAAJ;AACA,QAAM6L,SAAS,GAAGjJ,QAAQ,GAAG,CAA7B;AACAlF,OAAG,CAACuC,MAAJ,CAAWkK,WAAW,CAAC3C,GAAZ,GAAkBwB,aAAlB,GAAkC6C,SAA7C,EAAwD1B,WAAW,CAAC/J,CAAZ,GAAgB4I,aAAxE;AACAtL,OAAG,CAAC4C,MAAJ,CAAW6J,WAAW,CAAC3C,GAAZ,GAAkBwB,aAA7B,EAA4CmB,WAAW,CAAC/J,CAAZ,GAAgB4I,aAAhB,GAAgC6C,SAA5E;AACAnO,OAAG,CAAC4C,MAAJ,CAAW6J,WAAW,CAAC3C,GAAZ,GAAkBwB,aAAlB,GAAkC6C,SAA7C,EAAwD1B,WAAW,CAAC/J,CAAZ,GAAgB4I,aAAhB,GAAgCpG,QAAxF;AACAlF,OAAG,CAAC6C,MAAJ;AACH;;AAEDqL,aAAW,IAAI5C,aAAa,GAAGpG,QAA/B;AAEA,MAAIkJ,OAAO,GAAG3B,WAAW,CAACxM,CAA1B;AA7I0F;AAAA;AAAA;;AAAA;AA+I1F,0BAAkB+L,SAAlB,mIAA6B;AAAA,UAApB9L,MAAoB;AAAA;AAAA;AAAA;;AAAA;AACzB,8BAAmBA,MAAnB,mIAA0B;AAAA,cAAfiB,KAAe;AAEtB,cAAMC,MAAK,GAAGD,KAAI,CAAC,CAAD,CAAlB;;AAEA,cAAIhB,UAAU,CAACiB,MAAD,CAAV,IAAqBhB,UAAU,CAACgB,MAAD,CAAV,GAAoB,CAA7C,EAAgD;AAE5C,gBAAMvB,KAAK,GAAGsB,KAAI,CAAC+K,YAAD,CAAlB;AACA,gBAAMkB,KAAI,GAAGnB,UAAU,CAAC7K,MAAD,CAAvB;;AAEA,gBAAIwL,YAAJ,EAAkB;AACd5M,iBAAG,CAAC4K,IAAJ,GAAW,UAAUiC,UAArB;AACA7M,iBAAG,CAACwG,SAAJ,GAAgB+F,kBAAkB,CAACpH,UAAD,EAAa2G,UAAb,CAAlC;AACA,kBAAMuC,OAAO,GAAIxO,KAAK,GAAGsN,WAAR,GAAsB,GAAvB,GAA8B,CAA9C;AACAnN,iBAAG,CAAC6G,QAAJ,CAAawH,OAAO,GAAG,GAAvB,EAA4B5B,WAAW,CAACxM,CAAZ,GAAgBqL,aAAhB,IAAiC+C,OAAO,GAAG,EAAV,GAAerB,aAAa,GAAG,CAA/B,GAAmC,CAApE,CAA5B,EAAoGkB,WAApG;AACAE,qBAAO,GAAG3B,WAAW,CAACxM,CAAZ,GAAgB+M,aAAhB,GAAgC1B,aAA1C;AACH;;AAEDtL,eAAG,CAAC4K,IAAJ,GAAWiC,UAAX;AACA7M,eAAG,CAACwG,SAAJ,GAAgB+F,kBAAkB,CAACpH,UAAD,EAAa/E,UAAU,CAACgB,MAAD,CAAV,GAAoB0K,UAAjC,CAAlC;AACA9L,eAAG,CAAC6G,QAAJ,CAAauG,KAAb,EAAmBgB,OAAO,GAAG9C,aAA7B,EAA4C4C,WAA5C;AAEAlO,eAAG,CAAC4K,IAAJ,GAAW,UAAUiC,UAArB;AACA7M,eAAG,CAACwG,SAAJ,GAAgBnG,UAAU,CAACe,MAAD,CAAV,CAAkBhB,UAAU,CAACgB,MAAD,CAAV,GAAoBH,SAAtC,CAAhB;AACA,gBAAMqM,UAAQ,GAAGtN,GAAG,CAAC4G,WAAJ,CAAgB/G,KAAhB,EAAuBS,KAAxC;AACAN,eAAG,CAAC6G,QAAJ,CAAahH,KAAb,EAAoB4M,WAAW,CAACxM,CAAZ,GAAgBqL,aAAhB,GAAgCwB,YAAhC,GAA+CQ,UAAnE,EAA6EY,WAA7E;AAEAA,uBAAW,IAAI5C,aAAa,GAAGpG,QAA/B;AACH;AACJ;AA7BwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8B5B;AA7KyF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA+K1F,MAAIyH,OAAJ,EAAa;AAET,QAAMpL,KAAK,GAAGgL,kBAAkB,CAACpH,UAAD,EAAa2G,UAAb,CAAhC;AAEA9L,OAAG,CAAC4K,IAAJ,GAAWiC,UAAX;AACA7M,OAAG,CAACwG,SAAJ,GAAgBjF,KAAhB;AACAvB,OAAG,CAAC6G,QAAJ,CAAa,KAAb,EAAoB4F,WAAW,CAACxM,CAAZ,GAAgBqL,aAApC,EAAmD4C,WAAnD;AAEAlO,OAAG,CAAC4K,IAAJ,GAAW,UAAUiC,UAArB;AACA7M,OAAG,CAACwG,SAAJ,GAAgBjF,KAAhB;AACA,QAAM+L,SAAQ,GAAGtN,GAAG,CAAC4G,WAAJ,CAAgBuG,WAAhB,EAA6B7M,KAA9C;AACAN,OAAG,CAAC6G,QAAJ,CAAasG,WAAb,EAA0BV,WAAW,CAACxM,CAAZ,GAAgBqL,aAAhB,GAAgCwB,YAAhC,GAA+CQ,SAAzE,EAAmFY,WAAnF;AACH;;AAEDlO,KAAG,CAAC4K,IAAJ,GAAWD,OAAX;AACH;AAEM,SAAS2D,cAAT,CAAyBtO,GAAzB,EAA8BC,CAA9B,EAAiCkB,IAAjC,EAAuC8K,UAAvC,EAAmD9L,UAAnD,EAA+DC,UAA/D,EAA2EC,UAA3E,EAAuFW,SAAvF,EACH6G,QADG,EACOqE,YADP,EACqB1L,OADrB,EAC8BC,OAD9B,EACuCE,IADvC,EAC6CC,KAD7C,EACoDgL,KADpD,EAC2DtL,KAD3D,EACkEC,MADlE,EAC0EyG,KAD1E,EAEHuH,eAFG,EAEc/M,kBAFd,EAEkCgN,gBAFlC,EAEoDC,gBAFpD,EAGHjC,kBAHG,EAGiBrH,UAHjB,EAG6BlE,SAH7B,EAGwC;AAE3C,MAAIA,SAAS,GAAG,CAAhB,EAAmB;AAAE;AAAQ;;AAE7B,MAAIwN,gBAAgB,IAAID,gBAAxB,EAA0C;AACtC;AACH;;AAED,MAAMpN,KAAK,GAAGD,IAAI,CAAC,CAAD,CAAlB;AAEA,MAAMS,MAAM,GAAG,CAACrB,MAAM,GAAGgO,eAAT,GAA2B/M,kBAA5B,KAAmDgN,gBAAgB,GAAGC,gBAAtE,CAAf;AACA,MAAM5D,UAAU,GAAGrK,OAAO,GAAG,CAACqH,QAAQ,GAAGlH,IAAZ,IAAqBiL,KAArB,GAA8BtL,KAA3D;AAEA,MAAMmH,SAAS,GAAGvB,IAAI,CAACqB,KAAL,CAAWtH,CAAC,CAAC,CAAD,CAAD,GAAO+G,KAAK,GAAGa,QAA1B,CAAlB;;AAEA,MAAI1H,UAAU,CAACiB,KAAD,CAAV,IAAqBhB,UAAU,CAACgB,KAAD,CAAV,GAAoB,CAA7C,EAAgD;AAE5C,QAAMvB,KAAK,GAAGsB,IAAI,CAAC+K,YAAD,CAAlB;AACAlM,OAAG,CAAC6B,WAAJ,GAAkBxB,UAAU,CAACe,KAAD,CAAV,CAAkBhB,UAAU,CAACgB,KAAD,CAAV,GAAoBH,SAAtC,CAAlB;AAEA,QAAIsM,WAAW,GAAG1N,KAAlB;;AAEA,QAAII,CAAC,CAACiM,YAAD,CAAD,GAAkBzE,SAAtB,EAAiC;AAC7B,UAAM+F,UAAU,GAAGtH,IAAI,CAAC1C,GAAL,CAAS,CAAT,EAAY0I,YAAY,GAAG,CAA3B,CAAnB;AACAqB,iBAAW,GAAGE,iBAAiB,CAACxN,CAAD,EAAIkB,IAAJ,EAAUsG,SAAV,EAAqB+F,UAArB,EAAiCtB,YAAjC,CAA/B;AACH,KAHD,MAGO,IAAIjM,CAAC,CAACiM,YAAD,CAAD,GAAkBzE,SAAtB,EAAiC;AACpC,UAAMiG,UAAU,GAAGxH,IAAI,CAACzC,GAAL,CAASxD,CAAC,CAACmC,MAAF,GAAW,CAApB,EAAuB8J,YAAY,GAAG,CAAtC,CAAnB;AACAqB,iBAAW,GAAGE,iBAAiB,CAACxN,CAAD,EAAIkB,IAAJ,EAAUsG,SAAV,EAAqByE,YAArB,EAAmCwB,UAAnC,CAA/B;AACH;;AAED,QAAMxK,SAAS,GAAGzC,OAAO,GAAGF,MAAV,GAAmBiB,kBAAnB,GAAwC,CAAC+L,WAAW,GAAGkB,gBAAf,IAAmC7M,MAA7F;AAEA5B,OAAG,CAACwG,SAAJ,GAAgBgG,kBAAkB,CAACrH,UAAD,CAAlC;AACAnF,OAAG,CAACgB,SAAJ,GAAgBA,SAAhB;AACAhB,OAAG,CAACsC,SAAJ;AACAtC,OAAG,CAAC0O,GAAJ,CAAQ7D,UAAR,EAAoB3H,SAApB,EAA+BsI,WAA/B,EAA4C,CAA5C,EAA+C,IAAItF,IAAI,CAACyI,EAAxD;AACA3O,OAAG,CAAC0J,IAAJ;AACA1J,OAAG,CAAC6C,MAAJ;AACH;AACJ;;AAED,SAAS4K,iBAAT,CAA4BxN,CAA5B,EAA+BkB,IAA/B,EAAqCsG,SAArC,EAAgD+F,UAAhD,EAA4DE,UAA5D,EAAwE;AACpE,MAAMkB,QAAQ,GAAG,CAACnH,SAAS,GAAGxH,CAAC,CAACuN,UAAD,CAAd,KAA+BvN,CAAC,CAACyN,UAAD,CAAD,GAAgBzN,CAAC,CAACuN,UAAD,CAAhD,CAAjB;AACA,SAAOrM,IAAI,CAACqM,UAAD,CAAJ,GAAmB,CAACrM,IAAI,CAACuM,UAAD,CAAJ,GAAmBvM,IAAI,CAACqM,UAAD,CAAxB,IAAwCoB,QAAlE;AACH;;AAEM,SAASC,UAAT,CAAqB7O,GAArB,EAA0BQ,OAA1B,EAAmCC,OAAnC,EAA4CqO,YAA5C,EAA0DC,QAA1D,EAAoEnE,IAApE,EAA0E9C,IAA1E,EAAgFhD,QAAhF,EAA0FK,UAA1F,EAAsGlE,SAAtG,EAAiH;AAEpH,MAAI0J,OAAO,GAAG3K,GAAG,CAAC4K,IAAlB;AAEA5K,KAAG,CAACwG,SAAJ,GAAgB1B,QAAQ,CAACK,UAAD,EAAalE,SAAb,CAAxB;AACAjB,KAAG,CAAC4K,IAAJ,GAAW,UAAUmE,QAAV,GAAqB,KAArB,GAA6BnE,IAAxC;AAEA5K,KAAG,CAAC6G,QAAJ,CAAaiB,IAAb,EAAmBtH,OAAnB,EAA4BC,OAAO,GAAG,CAACqO,YAAY,GAAGC,QAAhB,IAA4B,CAAlE;AAEA/O,KAAG,CAAC4K,IAAJ,GAAWD,OAAX;AACH;AAED,IAAMqE,kBAAkB,GAAGlP,WAAW,CAAC,CAAD,CAAtC;AAEO,SAASmP,kBAAT,CAA6BjP,GAA7B,EAAkCQ,OAAlC,EAA2CC,OAA3C,EAAoDqO,YAApD,EAAkEC,QAAlE,EAA4EnE,IAA5E,EAAkF9F,QAAlF,EAA4FK,UAA5F,EAAwGlE,SAAxG,EAAmHiO,MAAnH,EAA2H;AAE9H,MAAIvE,OAAO,GAAG3K,GAAG,CAAC4K,IAAlB;AAEA5K,KAAG,CAACwG,SAAJ,GAAgB1B,QAAQ,CAACK,UAAD,EAAalE,SAAb,CAAxB;AACAjB,KAAG,CAAC6B,WAAJ,GAAkB7B,GAAG,CAACwG,SAAtB;AACAxG,KAAG,CAAC4K,IAAJ,GAAW,UAAUmE,QAAV,GAAqB,KAArB,GAA6BnE,IAAxC;AAEA,MAAMuE,eAAe,GAAGJ,QAAQ,GAAG,IAAIC,kBAAvC;AACA,MAAMI,eAAe,GAAG,CAACL,QAAQ,GAAG,IAAIC,kBAAhB,IAAsC,CAA9D;AAEAhP,KAAG,CAACgB,SAAJ,GAAgBgO,kBAAhB;AACAhP,KAAG,CAACsC,SAAJ;AAEAtC,KAAG,CAAC0O,GAAJ,CAAQlO,OAAO,GAAG4O,eAAlB,EAAmCN,YAAY,GAAG,CAAlD,EAAqDM,eAArD,EAAsE,CAAtE,EAAyE,IAAIlJ,IAAI,CAACyI,EAAlF;AACA3O,KAAG,CAACuC,MAAJ,CAAW/B,OAAO,GAAG4O,eAAV,GAA4B,MAAMJ,kBAA7C,EAAiEF,YAAY,GAAG,CAAhF;AACA9O,KAAG,CAAC4C,MAAJ,CAAWpC,OAAO,GAAG4O,eAAV,GAA4B,MAAMJ,kBAA7C,EAAiEF,YAAY,GAAG,CAAhF;AACA9O,KAAG,CAACuC,MAAJ,CAAW/B,OAAO,GAAG,MAAM4O,eAA3B,EAA4CN,YAAY,GAAG,CAAf,GAAmB,MAAMM,eAArE;AACApP,KAAG,CAAC4C,MAAJ,CAAWpC,OAAO,GAAG,MAAM4O,eAA3B,EAA4CN,YAAY,GAAG,CAAf,GAAmB,MAAMM,eAArE;AAEApP,KAAG,CAAC6C,MAAJ;AAEA,MAAMwM,WAAW,GAAG,UAApB;AAEAH,QAAM,CAACjP,CAAP,GAAWO,OAAX;AACA0O,QAAM,CAACpF,GAAP,GAAatJ,OAAO,GAAGR,GAAG,CAAC4G,WAAJ,CAAgByI,WAAhB,EAA6B/O,KAAvC,GAA+C6O,eAA5D;AACAD,QAAM,CAACxM,CAAP,GAAWjC,OAAX;AACAyO,QAAM,CAAClF,GAAP,GAAakF,MAAM,CAACxM,CAAP,GAAWoM,YAAxB;AAEA9O,KAAG,CAAC6G,QAAJ,CAAawI,WAAb,EAA0B7O,OAAO,GAAG2O,eAApC,EAAqD1O,OAAO,GAAG,CAACqO,YAAY,GAAGC,QAAhB,IAA4B,CAA3F;AAEA/O,KAAG,CAAC4K,IAAJ,GAAWD,OAAX;AACH;AAEM,SAAS2E,oBAAT,CAA+BtP,GAA/B,EAAoCQ,OAApC,EAA6CC,OAA7C,EAAsDH,KAAtD,EAA6DwO,YAA7D,EAA2ES,cAA3E,EAA2FC,QAA3F,EAAqGxI,KAArG,EAA4GrG,IAA5G,EAAkHC,KAAlH,EAAyH6O,OAAzH,EAAkIV,QAAlI,EAA4InE,IAA5I,EAAkJ9F,QAAlJ,EAA4JK,UAA5J,EAAwKlE,SAAxK,EAAmL;AAEtL,MAAI0J,OAAO,GAAG3K,GAAG,CAAC4K,IAAlB;AAEA5K,KAAG,CAACwG,SAAJ,GAAgB1B,QAAQ,CAACK,UAAD,EAAalE,SAAb,CAAxB;AACAjB,KAAG,CAAC4K,IAAJ,GAAW,UAAUmE,QAAV,GAAqB,KAArB,GAA6BnE,IAAxC;AAEA,MAAM8E,aAAa,GAAGF,QAAQ,GAAGxI,KAAK,GAAGrG,IAAzC;AACA,MAAMgP,cAAc,GAAGH,QAAQ,GAAGxI,KAAK,GAAGpG,KAA1C;AAEA,MAAIkH,IAAJ;;AAEA,MAAI2H,OAAJ,EAAa;AACT3H,QAAI,GAAGC,UAAU,CAAC2H,aAAD,EAAgB,MAAhB,CAAV,GAAoC,KAApC,GAA4C3H,UAAU,CAAC4H,cAAD,EAAiB,MAAjB,CAA7D;AACH,GAFD,MAEO;AACH7H,QAAI,GAAGC,UAAU,CAAC,CAAC2H,aAAa,GAAGC,cAAjB,IAAmC,CAApC,EAAuC,UAAvC,CAAjB;AACH;;AAED3P,KAAG,CAAC6G,QAAJ,CAAaiB,IAAb,EAAmBtH,OAAO,GAAGF,KAAV,GAAkBN,GAAG,CAAC4G,WAAJ,CAAgBkB,IAAhB,EAAsBxH,KAA3D,EAAkEG,OAAO,GAAG,CAACqO,YAAY,GAAGC,QAAhB,IAA4B,CAAtC,GAA0C,CAACQ,cAAc,GAAGR,QAAlB,IAA8B,CAA1I;AAEA/O,KAAG,CAAC4K,IAAJ,GAAWD,OAAX;AACH;AAEM,SAASiF,eAAT,CAAyB5P,GAAzB,EAA8BC,CAA9B,EAAiC4P,IAAjC,EAAuCC,UAAvC,EAAmD1P,UAAnD,EAA+DC,UAA/D,EACCC,KADD,EACQC,MADR,EACgBC,OADhB,EACyBC,OADzB,EACkCsP,WADlC,EAECpP,IAFD,EAEOC,KAFP,EAEcE,SAFd,EAEyBG,SAFzB,EAEoCkE,UAFpC,EAEgD6K,MAFhD,EAEwD;AAE3D,MAAMrO,MAAM,GAAGrB,KAAK,IAAIM,KAAK,GAAGD,IAAZ,CAAL,IAA0BV,CAAC,CAACmC,MAAF,GAAW,CAArC,CAAf;AACA,MAAMR,MAAM,GAAGrB,MAAM,GAAGO,SAAxB;AACA,MAAMmP,UAAU,GAAG,CAACtP,IAAD,GAAQL,KAAR,IAAiBM,KAAK,GAAGD,IAAzB,IAAiCH,OAAjC,GAA2CmB,MAA9D;AACA,MAAMuO,SAAS,GAAGzP,OAAO,GAAGF,MAA5B;AAEA,MAAMuB,SAAS,GAAGC,aAAa,CAAC9B,CAAD,EAAIU,IAAI,GAAGH,OAAO,GAAGF,KAArB,CAA/B;AACA,MAAM0B,OAAO,GAAGC,aAAa,CAAChC,CAAD,EAAIW,KAAK,GAAGJ,OAAO,GAAGF,KAAtB,CAA7B;AAEA,MAAI6P,MAAM,GAAG,IAAIC,KAAJ,CAAUpO,OAAO,GAAGF,SAAV,GAAsB,CAAhC,CAAb;AAEA,MAAIuO,WAAW,GAAGN,WAAW,GAAG,CAAd,GAAkB,CAAlB,GAAsB,CAAxC;AAEA,MAAIO,SAAS,GAAGR,UAAU,CAACC,WAAW,GAAGjO,SAAd,GAA0B,CAA3B,CAA1B;;AAEA,OAAK,IAAIyO,CAAC,GAAGV,IAAI,CAACzN,MAAL,GAAc,CAA3B,EAA8BmO,CAAC,IAAI,CAAnC,EAAsCA,CAAC,EAAvC,EAA2C;AAEvC,QAAMC,GAAG,GAAGX,IAAI,CAACU,CAAD,CAAhB;AAEA,QAAMnP,KAAK,GAAGoP,GAAG,CAAC,CAAD,CAAjB;AAEAxQ,OAAG,CAACsC,SAAJ;AACAtC,OAAG,CAACwG,SAAJ,GAAgBnG,UAAU,CAACe,KAAD,CAAV,CAAkBH,SAAlB,EAA6BoP,WAA7B,EAA0ClL,UAA1C,CAAhB;AAEA,QAAMsL,EAAE,GAAGD,GAAG,CAAC1O,SAAD,CAAH,GAAiB1B,UAAU,CAACgB,KAAD,CAAtC;AAEA,QAAIc,KAAK,GAAG+N,UAAU,GAAGtO,MAAM,GAAGG,SAAlC;AACA,QAAI4O,KAAK,GAAGR,SAAS,GAAGJ,UAAU,CAAC,CAAD,CAAV,GAAgBlO,MAAxC;AAEAkO,cAAU,CAAC,CAAD,CAAV,IAAiBW,EAAjB;AAEAzQ,OAAG,CAACuC,MAAJ,CAAWL,KAAX,EAAkBwO,KAAlB;AACAxO,SAAK,IAAIP,MAAT;AACA3B,OAAG,CAAC4C,MAAJ,CAAWV,KAAX,EAAkBwO,KAAlB;;AAEA,SAAK,IAAIlO,CAAC,GAAGV,SAAS,GAAG,CAAzB,EAA4BU,CAAC,IAAIR,OAAjC,EAA0CQ,CAAC,EAA3C,EAA+C;AAE3C,UAAMiO,GAAE,GAAGD,GAAG,CAAChO,CAAD,CAAH,GAASpC,UAAU,CAACgB,KAAD,CAA9B;;AACA,UAAIsP,MAAK,GAAGR,SAAS,GAAGJ,UAAU,CAACtN,CAAC,GAAGV,SAAJ,GAAgB,CAAjB,CAAV,GAAgCF,MAAxD;;AACAkO,gBAAU,CAACtN,CAAC,GAAGV,SAAJ,GAAgB,CAAjB,CAAV,IAAiC2O,GAAjC;AAEAzQ,SAAG,CAAC4C,MAAJ,CAAWV,KAAX,EAAkBwO,MAAlB;AACAxO,WAAK,GAAGA,KAAK,GAAGP,MAAhB;AACA3B,SAAG,CAAC4C,MAAJ,CAAWV,KAAX,EAAkBwO,MAAlB;AACH;;AAED1Q,OAAG,CAAC4C,MAAJ,CAAWV,KAAX,EAAkBgO,SAAlB;AACAlQ,OAAG,CAAC4C,MAAJ,CAAWqN,UAAU,GAAGtO,MAAxB,EAAgCuO,SAAhC;AACAlQ,OAAG,CAACyJ,SAAJ;AACAzJ,OAAG,CAAC0J,IAAJ;AACH;;AAED,MAAIqG,WAAW,IAAIjO,SAAf,IAA4BiO,WAAW,IAAI/N,OAA/C,EAAwD;AAEpD,SAAK,IAAIuO,EAAC,GAAGV,IAAI,CAACzN,MAAL,GAAc,CAA3B,EAA8BmO,EAAC,IAAI,CAAnC,EAAsCA,EAAC,EAAvC,EAA2C;AAEvC,UAAMC,IAAG,GAAGX,IAAI,CAACU,EAAD,CAAhB;AAEA,UAAMnP,OAAK,GAAGoP,IAAG,CAAC,CAAD,CAAjB;AAEAxQ,SAAG,CAACsC,SAAJ;AACAtC,SAAG,CAACwG,SAAJ,GAAgBnG,UAAU,CAACe,OAAD,CAAV,CAAkBH,SAAlB,EAA6B,CAA7B,EAAgCkE,UAAhC,CAAhB;;AAEA,UAAMsL,IAAE,GAAGD,IAAG,CAACT,WAAD,CAAH,GAAmB3P,UAAU,CAACgB,OAAD,CAAxC;;AAEA,UAAIc,MAAK,GAAG+N,UAAU,GAAGtO,MAAM,GAAGoO,WAAlC;;AACA,UAAIW,OAAK,GAAGR,SAAS,GAAGI,SAAS,GAAG1O,MAApC;;AAEA0O,eAAS,IAAIG,IAAb;AAEAzQ,SAAG,CAACuC,MAAJ,CAAWL,MAAX,EAAkBwO,OAAlB;AACAxO,YAAK,IAAIP,MAAT;AACA3B,SAAG,CAAC4C,MAAJ,CAAWV,MAAX,EAAkBwO,OAAlB;AAEA1Q,SAAG,CAAC4C,MAAJ,CAAWV,MAAX,EAAkBgO,SAAlB;AACAlQ,SAAG,CAAC4C,MAAJ,CAAWV,MAAK,GAAGP,MAAnB,EAA2BuO,SAA3B;AACAlQ,SAAG,CAACyJ,SAAJ;AACAzJ,SAAG,CAAC0J,IAAJ;AACH;AACJ;AACJ;AAEM,SAASiH,QAAT,CAAmB3Q,GAAnB,EAAwBC,CAAxB,EAA2B2Q,KAA3B,EAAkCC,WAAlC,EAA+CC,oBAA/C,EAAqE1Q,UAArE,EAAiFC,UAAjF,EACHC,KADG,EACIC,MADJ,EACYC,OADZ,EACqBC,OADrB,EAC8BqB,SAD9B,EACyCE,OADzC,EAEHrB,IAFG,EAEGC,KAFH,EAEUK,SAFV,EAEqBkE,UAFrB,EAEiC6K,MAFjC,EAEyC;AAE5C,MAAMe,SAAS,GAAGzQ,KAAK,IAAIM,KAAK,GAAGD,IAAZ,CAAvB;AAEA,MAAMkK,UAAU,GAAG,CAACkG,SAAD,GAAapQ,IAAb,GAAoBH,OAAvC;AACA,MAAM0C,SAAS,GAAGzC,OAAO,GAAGF,MAA5B;AAEA,MAAMoB,MAAM,GAAGoP,SAAS,IAAI9Q,CAAC,CAACmC,MAAF,GAAW,CAAf,CAAxB;;AAEA,OAAK,IAAImO,CAAC,GAAGK,KAAK,CAACxO,MAAN,GAAe,CAA5B,EAA+BmO,CAAC,IAAI,CAApC,EAAuCA,CAAC,EAAxC,EAA4C;AAExC,QAAMS,IAAI,GAAGJ,KAAK,CAACL,CAAD,CAAlB;AAEAvQ,OAAG,CAACwG,SAAJ,GAAgBnG,UAAU,CAAC2Q,IAAI,CAAC,CAAD,CAAL,CAAV,CAAoB/P,SAApB,CAAhB;AACAjB,OAAG,CAACsC,SAAJ;AAEA,QAAM2O,OAAO,GAAGH,oBAAoB,CAAC,CAAD,CAApC;AACA,QAAMI,UAAU,GAAGL,WAAW,CAAC,CAAD,CAA9B;AAEA,QAAI3O,KAAK,GAAG2I,UAAU,GAAG,CAAC/I,SAAS,GAAG,CAAb,IAAkBH,MAA3C;AAEA3B,OAAG,CAACuC,MAAJ,CAAWL,KAAX,EAAkBgB,SAAS,GAAG3C,MAAM,GAAG2Q,UAAT,GAAsBD,OAApD;AAEAJ,eAAW,CAAC,CAAD,CAAX,IAAkBG,IAAI,CAAClP,SAAD,CAAJ,GAAkB1B,UAAU,CAAC4Q,IAAI,CAAC,CAAD,CAAL,CAA9C;;AAEA,SAAK,IAAIxO,CAAC,GAAGV,SAAb,EAAwBU,CAAC,GAAGR,OAA5B,EAAqCQ,CAAC,EAAtC,EAA0C;AACtC,UAAM2O,GAAG,GAAG3O,CAAC,GAAGV,SAAJ,GAAgB,CAA5B;AACA,UAAMmP,QAAO,GAAGH,oBAAoB,CAACK,GAAD,CAApC;AACA,UAAMD,WAAU,GAAGL,WAAW,CAACM,GAAD,CAA9B;AACAjP,WAAK,GAAG2I,UAAU,GAAGrI,CAAC,GAAGb,MAAzB;AACA3B,SAAG,CAAC4C,MAAJ,CAAWV,KAAX,EAAkBgB,SAAS,GAAG3C,MAAM,GAAG2Q,WAAT,GAAsBD,QAApD;AACAJ,iBAAW,CAACM,GAAD,CAAX,IAAoBH,IAAI,CAACxO,CAAC,GAAG,CAAL,CAAJ,GAAcpC,UAAU,CAAC4Q,IAAI,CAAC,CAAD,CAAL,CAA5C;AACH;;AAEDhR,OAAG,CAAC4C,MAAJ,CAAWV,KAAX,EAAkBgB,SAAlB;AACAlD,OAAG,CAAC4C,MAAJ,CAAWiI,UAAU,GAAG,CAAC/I,SAAS,GAAG,CAAb,IAAkBH,MAA1C,EAAkDuB,SAAlD;AACAlD,OAAG,CAACyJ,SAAJ;AAEAzJ,OAAG,CAAC0J,IAAJ;AACH;AACJ;AAEM,SAAS0H,OAAT,CAAkBpR,GAAlB,EAAuBiM,UAAvB,EAAmC7L,UAAnC,EAA+CC,UAA/C,EAA2DG,OAA3D,EAAoEC,OAApE,EAA6EH,KAA7E,EAAoF4K,MAApF,EAA4FmG,MAA5F,EAAoGpQ,SAApG,EAA+GiO,MAA/G,EACF7C,cADE,EACcC,oBADd,EACoCC,kBADpC,EACwDpH,UADxD,EACoED,QADpE,EAC8EkH,QAD9E,EACwF;AAE3F,MAAMkF,OAAO,GAAG9Q,OAAO,GAAGF,KAAK,GAAG,CAAlC;AACA,MAAMiR,OAAO,GAAG9Q,OAAO,GAAGyK,MAA1B;AAEAgE,QAAM,CAACoC,OAAP,GAAiBA,OAAjB;AACApC,QAAM,CAACqC,OAAP,GAAiBA,OAAjB;AAEA,MAAMC,UAAU,GAAGtL,IAAI,CAACyI,EAAL,GAAU,CAAV,GAAc,CAAjC;AAEA,MAAI8C,SAAS,GAAGD,UAAhB;;AAEA,OAAK,IAAIpQ,KAAT,IAAkBiQ,MAAlB,EAA0B;AACtB,QAAMK,KAAK,GAAGL,MAAM,CAACjQ,KAAD,CAApB;AACA,QAAMuQ,KAAK,GAAGD,KAAK,CAACE,OAAN,GAAgB,CAAhB,GAAoB1L,IAAI,CAACyI,EAAvC;AAEA,QAAMzF,IAAI,GAAGuI,SAAb;AACA,QAAMtI,EAAE,GAAGsI,SAAS,GAAGE,KAAvB;AAEA,QAAIE,OAAO,GAAG,CAAd;AAAA,QAAiBC,OAAO,GAAG,CAA3B;;AAEA,QAAIJ,KAAK,CAACpQ,KAAN,GAAc,CAAlB,EAAqB;AACjB,UAAMyQ,MAAM,GAAG,CAAC5I,EAAE,GAAGD,IAAN,IAAc,CAA7B;AACA2I,aAAO,GAAG3L,IAAI,CAAC8L,GAAL,CAASD,MAAT,IAAmB,EAAnB,GAAwBL,KAAK,CAACpQ,KAAxC;AACAwQ,aAAO,GAAG5L,IAAI,CAAC+L,GAAL,CAASF,MAAT,IAAmB,EAAnB,GAAwBL,KAAK,CAACpQ,KAAxC;AAGH;;AAEDtB,OAAG,CAACwG,SAAJ,GAAgBnG,UAAU,CAACe,KAAD,CAAV,CAAkBH,SAAlB,CAAhB;AACAjB,OAAG,CAACsC,SAAJ;AACAtC,OAAG,CAAC0O,GAAJ,CAAQ4C,OAAO,GAAGO,OAAlB,EAA2BN,OAAO,GAAGO,OAArC,EAA8C5G,MAA9C,EAAsDhC,IAAtD,EAA4DC,EAA5D;AACAnJ,OAAG,CAAC4C,MAAJ,CAAW0O,OAAO,GAAGO,OAArB,EAA8BN,OAAO,GAAGO,OAAxC;AACA9R,OAAG,CAACyJ,SAAJ;AACAzJ,OAAG,CAAC0J,IAAJ;;AAEA,QAAIgI,KAAK,CAACpQ,KAAN,GAAc,CAAlB,EAAqB;AAEjB,UAAMyQ,OAAM,GAAG,CAAC5I,EAAE,GAAGD,IAAN,IAAc,CAA7B;;AACA,UAAM+G,UAAU,GAAG/J,IAAI,CAAC8L,GAAL,CAASD,OAAT,IAAmB7G,MAAnB,GAA4B,CAA/C;AACA,UAAMgF,SAAS,GAAGhK,IAAI,CAAC+L,GAAL,CAASF,OAAT,IAAmB7G,MAAnB,GAA4B,CAA9C;AACAgH,mBAAa,CAAClS,GAAD,EAAMiM,UAAU,CAAC7K,KAAD,CAAhB,EAAyBsQ,KAAK,CAACS,GAA/B,EAAoCb,OAAO,GAAGrB,UAA9C,EAA0DsB,OAAO,GAAGrB,SAApE,EAA+E7D,cAA/E,EAA+FC,oBAA/F,EAAqHC,kBAArH,EAAyIpH,UAAzI,EAAqJlE,SAArJ,EAAgKiE,QAAhK,EAA0KkH,QAA1K,EAAoL/L,UAAU,CAACe,KAAD,CAA9L,CAAb;AACH;;AAED8N,UAAM,CAACkD,MAAP,CAAchR,KAAd,IAAuB;AAAE8H,UAAI,EAAEA,IAAR;AAAcC,QAAE,EAAEA;AAAlB,KAAvB;AAEAsI,aAAS,GAAGtI,EAAZ;AACH;AACJ;AAEM,SAAS+I,aAAT,CAAwBlS,GAAxB,EAA6B8H,IAA7B,EAAmCjI,KAAnC,EAA0CoQ,UAA1C,EAAsDC,SAAtD,EAAiE7D,cAAjE,EAAiFC,oBAAjF,EAAuGC,kBAAvG,EAA2HpH,UAA3H,EAAuIlE,SAAvI,EAAkJiE,QAAlJ,EAA4JkH,QAA5J,EAAsKtH,QAAtK,EAAgL;AACnLuN,SAAO,CAACC,GAAR,CAAYxK,IAAZ,EAAkBjI,KAAlB,EAAyBoQ,UAAzB,EAAqCC,SAArC,EAAgD7D,cAAhD,EAAgEC,oBAAhE,EAAsFnH,UAAtF,EAAkGlE,SAAlG,EAA6GiE,QAA7G,EAAuHkH,QAAvH;AAEA,MAAMzB,OAAO,GAAG3K,GAAG,CAAC4K,IAApB;AACA,MAAMiC,UAAU,GAAG3H,QAAQ,GAAG,KAAX,GAAmBkH,QAAtC;AAEApM,KAAG,CAACwG,SAAJ,GAAgB6F,cAAc,CAAClH,UAAD,EAAalE,SAAb,CAA9B;AACAjB,KAAG,CAAC6B,WAAJ,GAAkByK,oBAAoB,CAACrL,SAAD,CAAtC;AACAjB,KAAG,CAACgB,SAAJ,GAAgB,CAAhB;AACAhB,KAAG,CAACsC,SAAJ;AACA,MAAMhC,KAAK,GAAGN,GAAG,CAAC4G,WAAJ,CAAgBkB,IAAI,GAAGjI,KAAvB,EAA8BS,KAA9B,GAAsC,IAAIgL,aAAxD;AACA9B,iBAAe,CAACxJ,GAAD,EAAMiQ,UAAN,EAAkBA,UAAU,GAAG3P,KAA/B,EAAsC4P,SAAtC,EAAiDA,SAAS,GAAG,IAAI5E,aAAhB,GAAgCpG,QAAjF,EAA2F4D,aAA3F,EAA0GA,aAA1G,CAAf;AACA9I,KAAG,CAACyJ,SAAJ;AACAzJ,KAAG,CAAC0J,IAAJ;AACA1J,KAAG,CAAC6C,MAAJ;AAEA7C,KAAG,CAAC4K,IAAJ,GAAWiC,UAAX;AACA7M,KAAG,CAACwG,SAAJ,GAAgB+F,kBAAkB,CAACpH,UAAD,EAAalE,SAAb,CAAlC;AACAjB,KAAG,CAAC6G,QAAJ,CAAaiB,IAAb,EAAmBmI,UAAU,GAAG3E,aAAhC,EAAgD4E,SAAS,GAAG5E,aAAZ,GAA4BpG,QAA5E;AAGAlF,KAAG,CAAC4K,IAAJ,GAAW,UAAUiC,UAArB;AACA7M,KAAG,CAACwG,SAAJ,GAAgB1B,QAAQ,CAAC7D,SAAD,CAAxB;AACAjB,KAAG,CAAC6G,QAAJ,CAAahH,KAAb,EAAoBoQ,UAAU,GAAG3P,KAAb,GAAqBgL,aAArB,GAAqCtL,GAAG,CAAC4G,WAAJ,CAAgB/G,KAAhB,EAAuBS,KAAhF,EAAuF4P,SAAS,GAAG5E,aAAZ,GAA4BpG,QAAnH;AAEAlF,KAAG,CAAC4K,IAAJ,GAAWD,OAAX;AACH;AAEM,SAAS5I,aAAT,CAAwB9B,CAAxB,EAA2B2R,OAA3B,EAAoC;AACvC,MAAM1N,GAAG,GAAGjE,CAAC,CAAC,CAAD,CAAD,GAAO,CAACA,CAAC,CAACA,CAAC,CAACmC,MAAF,GAAW,CAAZ,CAAD,GAAkBnC,CAAC,CAAC,CAAD,CAApB,IAA2B2R,OAA9C;AACA,MAAMT,GAAG,GAAGoB,YAAY,CAACtS,CAAD,EAAIiE,GAAJ,EAAS,CAAT,CAAxB;AACA,SAAOjE,CAAC,CAACkR,GAAD,CAAD,GAASjN,GAAT,GAAegC,IAAI,CAAC1C,GAAL,CAAS2N,GAAG,GAAG,CAAf,EAAkB,CAAlB,CAAf,GAAsCA,GAA7C;AACH;AAEM,SAASlP,aAAT,CAAwBhC,CAAxB,EAA2B2R,OAA3B,EAAoC;AACvC,MAAM1N,GAAG,GAAGjE,CAAC,CAAC,CAAD,CAAD,GAAO,CAACA,CAAC,CAACA,CAAC,CAACmC,MAAF,GAAW,CAAZ,CAAD,GAAkBnC,CAAC,CAAC,CAAD,CAApB,IAA2B2R,OAA9C;AACA,MAAMT,GAAG,GAAGoB,YAAY,CAACtS,CAAD,EAAIiE,GAAJ,EAAS,CAAT,CAAxB;AACA,SAAOjE,CAAC,CAACkR,GAAD,CAAD,GAASjN,GAAT,GAAegC,IAAI,CAACzC,GAAL,CAAS0N,GAAG,GAAG,CAAf,EAAkBlR,CAAC,CAACmC,MAAF,GAAW,CAA7B,CAAf,GAAiD+O,GAAxD;AACH;AAGM,SAASqB,eAAT,CAA0BvS,CAA1B,EAA6B2R,OAA7B,EAAsC;AACzC,MAAM1N,GAAG,GAAGjE,CAAC,CAAC,CAAD,CAAD,GAAO,CAACA,CAAC,CAACA,CAAC,CAACmC,MAAF,GAAW,CAAZ,CAAD,GAAkBnC,CAAC,CAAC,CAAD,CAApB,IAA2B2R,OAA9C;AACA,SAAOW,YAAY,CAACtS,CAAD,EAAIiE,GAAJ,EAAS,CAAT,CAAnB;AACH;;AAED,SAASqO,YAAT,CAAuBE,GAAvB,EAA4BvO,GAA5B,EAAwC;AAAA,MAAP1B,CAAO,uEAAH,CAAG;AAEpC,MAAMkQ,GAAG,GAAGD,GAAG,CAACrQ,MAAhB;AAEA,MAAImO,CAAC,GAAGmC,GAAG,GAAG,CAAd;;AAEA,SAAOlQ,CAAC,GAAG+N,CAAX,EAAc;AACV,QAAMoC,CAAC,GAAIpC,CAAC,GAAG/N,CAAL,KAAY,CAAtB;AACA,QAAMmE,CAAC,GAAG8L,GAAG,CAACE,CAAD,CAAb;;AACA,QAAIhM,CAAC,GAAGzC,GAAR,EAAa;AACTqM,OAAC,GAAGoC,CAAC,GAAG,CAAR;AACH,KAFD,MAEO,IAAIhM,CAAC,GAAGzC,GAAR,EAAa;AAChB1B,OAAC,GAAGmQ,CAAC,GAAG,CAAR;AACH,KAFM,MAEA;AACH,aAAOA,CAAP;AACH;AACJ;;AAED,MAAMC,IAAI,GAAG1O,GAAG,GAAGuO,GAAG,CAACjQ,CAAD,CAAtB;;AAEA,MAAIoQ,IAAI,GAAG,CAAX,EAAc;AACV,WAAOpQ,CAAC,GAAGkQ,GAAG,GAAG,CAAV,IAAeE,IAAI,GAAGH,GAAG,CAACjQ,CAAC,GAAC,CAAH,CAAH,GAAW0B,GAAjC,GAAuC1B,CAAC,GAAG,CAA3C,GAA+CA,CAAtD;AACH,GAFD,MAEO;AACH,WAAOA,CAAC,GAAG,CAAJ,IAASoQ,IAAI,GAAGH,GAAG,CAACjQ,CAAC,GAAC,CAAH,CAAH,GAAW0B,GAA3B,GAAiC1B,CAAC,GAAG,CAArC,GAAyCA,CAAhD;AACH;AACJ;;AAEM,SAASqQ,OAAT,CAAkB5S,CAAlB,EAAqBC,KAArB,EAA4BC,UAA5B,EAAwCQ,IAAxC,EAA8CC,KAA9C,EAAqD;AAExD,MAAI4C,GAAG,GAAG,CAAV;AAEA,MAAM0F,IAAI,GAAGnH,aAAa,CAAC9B,CAAD,EAAIU,IAAJ,CAA1B;AACA,MAAMwI,EAAE,GAAGlH,aAAa,CAAChC,CAAD,EAAIW,KAAJ,CAAxB;AALwD;AAAA;AAAA;;AAAA;AAOxD,0BAAmBV,KAAnB,mIAA0B;AAAA,UAAfiB,IAAe;;AAEtB,UAAI,CAAChB,UAAU,CAACgB,IAAI,CAAC,CAAD,CAAL,CAAf,EAA0B;AACtB;AACH;;AAED,WAAK,IAAIqB,CAAC,GAAG0G,IAAb,EAAmB1G,CAAC,GAAG2G,EAAvB,EAA2B3G,CAAC,EAA5B,EAAgC;AAC5B,YAAIrB,IAAI,CAACqB,CAAD,CAAJ,GAAUgB,GAAd,EAAmB;AACfA,aAAG,GAAGrC,IAAI,CAACqB,CAAD,CAAV;AACH;AACJ;AACJ;AAlBuD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAoBxD,SAAOgB,GAAP;AACH;AAEM,SAASsP,OAAT,CAAkB7S,CAAlB,EAAqBC,KAArB,EAA4BC,UAA5B,EAAwCQ,IAAxC,EAA8CC,KAA9C,EAAqD;AAExD,MAAI6C,GAAG,GAAGsP,QAAV;AAEA,MAAM7J,IAAI,GAAGnH,aAAa,CAAC9B,CAAD,EAAIU,IAAJ,CAA1B;AACA,MAAMwI,EAAE,GAAGlH,aAAa,CAAChC,CAAD,EAAIW,KAAJ,CAAxB;AALwD;AAAA;AAAA;;AAAA;AAOxD,0BAAmBV,KAAnB,mIAA0B;AAAA,UAAfiB,IAAe;;AAEtB,UAAI,CAAChB,UAAU,CAACgB,IAAI,CAAC,CAAD,CAAL,CAAf,EAA0B;AACtB;AACH;;AAED,WAAK,IAAIqB,CAAC,GAAG0G,IAAb,EAAmB1G,CAAC,GAAG2G,EAAvB,EAA2B3G,CAAC,EAA5B,EAAgC;AAC5B,YAAIrB,IAAI,CAACqB,CAAD,CAAJ,GAAUiB,GAAd,EAAmB;AACfA,aAAG,GAAGtC,IAAI,CAACqB,CAAD,CAAV;AACH;AACJ;AACJ;AAlBuD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAoBxD,SAAOiB,GAAP;AACH;AAEM,SAASuP,OAAT,CAAkB/S,CAAlB,EAAqB4P,IAArB,EAA2BoD,SAA3B,EAAsCtS,IAAtC,EAA4CC,KAA5C,EAAmD;AAEtD,MAAMsI,IAAI,GAAGnH,aAAa,CAAC9B,CAAD,EAAIU,IAAJ,CAA1B;AACA,MAAMwI,EAAE,GAAGlH,aAAa,CAAChC,CAAD,EAAIW,KAAJ,CAAxB;AAEA,MAAMsS,MAAM,GAAG,IAAI9C,KAAJ,CAAUjH,EAAE,GAAGD,IAAL,GAAY,CAAtB,CAAf;AAEAgK,QAAM,CAAC,CAAD,CAAN,GAAY,CAAZ;;AAEA,OAAK,IAAI1Q,CAAC,GAAG0G,IAAb,EAAmB1G,CAAC,IAAI2G,EAAxB,EAA4B3G,CAAC,EAA7B,EAAiC;AAC7B,QAAI2P,GAAG,GAAG,CAAV;;AACA,SAAK,IAAI5B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,IAAI,CAACzN,MAAzB,EAAiCmO,CAAC,EAAlC,EAAsC;AAClC4B,SAAG,IAAItC,IAAI,CAACU,CAAD,CAAJ,CAAQ/N,CAAR,IAAayQ,SAAS,CAACpD,IAAI,CAACU,CAAD,CAAJ,CAAQ,CAAR,CAAD,CAA7B;AACH;;AACD2C,UAAM,CAAC1Q,CAAC,GAAG0G,IAAJ,GAAW,CAAZ,CAAN,GAAuBiJ,GAAvB;;AACA,QAAIA,GAAG,GAAGe,MAAM,CAAC,CAAD,CAAhB,EAAqB;AACjBA,YAAM,CAAC,CAAD,CAAN,GAAYf,GAAZ;AACH;AACJ;;AAED,SAAOe,MAAP;AACH;;AAED,SAASC,WAAT,CAAsBC,IAAtB,EAA4BC,IAA5B,EAAkC;AAC9B,MAAMH,MAAM,GAAG,EAAf;AAD8B;AAAA;AAAA;;AAAA;AAE9B,0BAAmBE,IAAI,CAACE,OAAxB,mIAAiC;AAAA,UAAxBC,MAAwB;;AAC7B,UAAIH,IAAI,CAACI,KAAL,CAAWD,MAAM,CAAC,CAAD,CAAjB,MAA0BF,IAA9B,EAAoC;AAChCH,cAAM,CAACO,IAAP,CAAYF,MAAZ;AACH;AACJ;AAN6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAO9B,SAAOL,MAAP;AACH;;AAEM,SAASQ,QAAT,CAAmBN,IAAnB,EAAyB;AAC5B,SAAOD,WAAW,CAACC,IAAD,EAAO,MAAP,CAAlB;AACH;AAEM,SAASO,OAAT,CAAkBP,IAAlB,EAAwB;AAC3B,SAAOD,WAAW,CAACC,IAAD,EAAO,KAAP,CAAlB;AACH;AAEM,SAASQ,QAAT,CAAmBR,IAAnB,EAAyB;AAC5B,SAAOD,WAAW,CAACC,IAAD,EAAO,MAAP,CAAlB;AACH;AAEM,SAASS,IAAT,CAAeT,IAAf,EAAqB;AAAA;AAAA;AAAA;;AAAA;AACxB,0BAAmBA,IAAI,CAACE,OAAxB,mIAAiC;AAAA,UAAxBC,MAAwB;;AAC7B,UAAIH,IAAI,CAACI,KAAL,CAAWD,MAAM,CAAC,CAAD,CAAjB,MAA0B,GAA9B,EAAmC;AAC/B,eAAOA,MAAP;AACH;AACJ;AALuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAM3B;;AAED,SAASO,aAAT,CAAwBC,CAAxB,EAA2BC,CAA3B,EAA8BC,CAA9B,EAAiCC,CAAjC,EAAoC;AAChC,SAAO,WAAWH,CAAC,GAAG,CAAf,IAAoB,GAApB,IAA2BC,CAAC,GAAG,CAA/B,IAAoC,GAApC,IAA2CC,CAAC,GAAG,CAA/C,IAAoD,GAApD,GAA0DC,CAA1D,GAA8D,GAArE;AACH;;AAEM,SAASlL,uBAAT,CAAkCmL,GAAlC,EAAuCC,KAAvC,EAA8C;AAEjD,MAAMC,CAAC,GAAGC,IAAI,CAACH,GAAD,CAAd;AACA,MAAMI,CAAC,GAAGC,IAAI,CAACL,GAAD,CAAd;AACA,MAAMM,CAAC,GAAGC,IAAI,CAACP,GAAD,CAAd;AAEA,SAAO,UAAU7S,KAAV,EAAiB;AACpB,WAAOwS,aAAa,CAACO,CAAD,EAAIE,CAAJ,EAAOE,CAAP,EAAUL,KAAK,GAAG9S,KAAlB,CAApB;AACH,GAFD;AAGH;AAEM,SAASqT,kBAAT,CAA6BC,OAA7B,EAAsCC,SAAtC,EAAiDC,KAAjD,EAAwDC,OAAxD,EAAiE;AAEpE,MAAMC,KAAK,GAAGV,IAAI,CAACM,OAAD,CAAlB;AACA,MAAMK,KAAK,GAAGT,IAAI,CAACI,OAAD,CAAlB;AACA,MAAMM,KAAK,GAAGR,IAAI,CAACE,OAAD,CAAlB;AACA,MAAMO,EAAE,GAAGb,IAAI,CAACQ,KAAD,CAAJ,GAAcE,KAAzB;AACA,MAAMI,EAAE,GAAGZ,IAAI,CAACM,KAAD,CAAJ,GAAcG,KAAzB;AACA,MAAMI,EAAE,GAAGX,IAAI,CAACI,KAAD,CAAJ,GAAcI,KAAzB;AACA,MAAMI,MAAM,GAAGP,OAAO,GAAGF,SAAzB;AAEA,SAAO,UAAUvT,KAAV,EAAiC;AAAA,QAAhBwK,UAAgB,uEAAH,CAAG;AACpC,WAAOgI,aAAa,CAChBkB,KAAK,GAAGG,EAAE,GAAG7T,KADG,EAEhB2T,KAAK,GAAGG,EAAE,GAAG9T,KAFG,EAGhB4T,KAAK,GAAGG,EAAE,GAAG/T,KAHG,EAIhB,CAACuT,SAAS,GAAGS,MAAM,GAAGhU,KAAtB,IAA+BwK,UAJf,CAApB;AAMH,GAPD;AAQH;AAEM,SAASyJ,eAAT,CAA0BX,OAA1B,EAAmCC,SAAnC,EAA8CC,KAA9C,EAAqDC,OAArD,EAA8DS,QAA9D,EAAwEC,UAAxE,EAAoF;AAEvF,MAAMT,KAAK,GAAGV,IAAI,CAACM,OAAD,CAAlB;AACA,MAAMK,KAAK,GAAGT,IAAI,CAACI,OAAD,CAAlB;AACA,MAAMM,KAAK,GAAGR,IAAI,CAACE,OAAD,CAAlB;AACA,MAAMc,IAAI,GAAGpB,IAAI,CAACQ,KAAD,CAAJ,GAAcE,KAA3B;AACA,MAAMW,IAAI,GAAGnB,IAAI,CAACM,KAAD,CAAJ,GAAcG,KAA3B;AACA,MAAMW,IAAI,GAAGlB,IAAI,CAACI,KAAD,CAAJ,GAAcI,KAA3B;AACA,MAAMW,OAAO,GAAGvB,IAAI,CAACkB,QAAD,CAAJ,GAAiBR,KAAjC;AACA,MAAMc,OAAO,GAAGtB,IAAI,CAACgB,QAAD,CAAJ,GAAiBP,KAAjC;AACA,MAAMc,OAAO,GAAGrB,IAAI,CAACc,QAAD,CAAJ,GAAiBN,KAAjC;AACA,MAAMc,QAAQ,GAAGjB,OAAO,GAAGF,SAA3B;AACA,MAAMoB,WAAW,GAAGR,UAAU,GAAGZ,SAAjC;AAEA,SAAO,UAAUT,KAAV,EAA2C;AAAA,QAA1B9S,KAA0B,uEAAlB,CAAkB;AAAA,QAAf4U,SAAe,uEAAH,CAAG;AAC9C,QAAMC,YAAY,GAAG,IAAID,SAAzB;AACA,WAAOpC,aAAa,CAChB,CAACkB,KAAK,GAAGU,IAAI,GAAGpU,KAAhB,IAAyB6U,YAAzB,GACA,CAACnB,KAAK,GAAGa,OAAO,GAAGvU,KAAnB,IAA4B4U,SAFZ,EAGhB,CAACjB,KAAK,GAAGU,IAAI,GAAGrU,KAAhB,IAAyB6U,YAAzB,GACA,CAAClB,KAAK,GAAGa,OAAO,GAAGxU,KAAnB,IAA4B4U,SAJZ,EAKhB,CAAChB,KAAK,GAAGU,IAAI,GAAGtU,KAAhB,IAAyB6U,YAAzB,GACA,CAACjB,KAAK,GAAGa,OAAO,GAAGzU,KAAnB,IAA4B4U,SANZ,EAOhB,CAAC,CAACrB,SAAS,GAAGmB,QAAQ,GAAG1U,KAAxB,IAAiC6U,YAAjC,GACD,CAACtB,SAAS,GAAGoB,WAAW,GAAG3U,KAA3B,IAAoC4U,SADpC,IACiD9B,KARjC,CAApB;AAUH,GAZD;AAaH;;AAED,SAASE,IAAT,CAAeH,GAAf,EAAoB;AAChB,SAAOiC,QAAQ,CAACjC,GAAG,CAACkC,KAAJ,CAAU,CAAV,EAAa,CAAb,CAAD,EAAkB,EAAlB,CAAf;AACH;;AAED,SAAS7B,IAAT,CAAeL,GAAf,EAAoB;AAChB,SAAOiC,QAAQ,CAACjC,GAAG,CAACkC,KAAJ,CAAU,CAAV,EAAa,CAAb,CAAD,EAAkB,EAAlB,CAAf;AACH;;AAED,SAAS3B,IAAT,CAAeP,GAAf,EAAoB;AAChB,SAAOiC,QAAQ,CAACjC,GAAG,CAACkC,KAAJ,CAAU,CAAV,CAAD,EAAe,EAAf,CAAf;AACH;;AAEM,SAASC,2BAAT,CAAsC1B,OAAtC,EAA+CC,SAA/C,EAA0D0B,KAA1D,EAAiEC,MAAjE,EAAyEC,KAAzE,EAAgFC,MAAhF,EAAwF;AAAA,qBAEhEC,WAAW,CAAC/B,OAAD,EAAUC,SAAV,EAAqB0B,KAArB,EAA4BC,MAA5B,CAFqD;AAAA;AAAA,MAEnF1B,KAFmF;AAAA,MAE5EC,OAF4E;;AAAA,sBAG1D4B,WAAW,CAAC/B,OAAD,EAAUC,SAAV,EAAqB4B,KAArB,EAA4BC,MAA5B,CAH+C;AAAA;AAAA,MAGnFlB,QAHmF;AAAA,MAGzEC,UAHyE;;AAK3F,SAAOF,eAAe,CAACX,OAAD,EAAUC,SAAV,EAAqBC,KAArB,EAA4BC,OAA5B,EAAqCS,QAArC,EAA+CC,UAA/C,CAAtB;AACH;;AAGD,SAASkB,WAAT,CAAsBxC,GAAtB,EAA2ByC,EAA3B,EAA+BC,IAA/B,EAAqCC,EAArC,EAAyC;AAErC,MAAMC,EAAE,GAAGzC,IAAI,CAACH,GAAD,CAAf;AACA,MAAM6C,EAAE,GAAGxC,IAAI,CAACL,GAAD,CAAf;AACA,MAAM8C,EAAE,GAAGvC,IAAI,CAACP,GAAD,CAAf;AACA,MAAM+C,EAAE,GAAG5C,IAAI,CAACuC,IAAD,CAAf;AACA,MAAMM,EAAE,GAAG3C,IAAI,CAACqC,IAAD,CAAf;AACA,MAAMO,EAAE,GAAG1C,IAAI,CAACmC,IAAD,CAAf;AAEA,MAAM3C,CAAC,GAAG,IAAI,CAAC,IAAI0C,EAAL,KAAY,IAAIE,EAAhB,CAAd;AACA,MAAMO,GAAG,GAAGP,EAAE,GAAG5C,CAAjB;AACA,MAAMoD,GAAG,GAAGV,EAAE,IAAI,IAAIE,EAAR,CAAF,GAAgB5C,CAA5B;AAEA,MAAMH,CAAC,GAAImD,EAAE,GAAGG,GAAL,GAAWN,EAAE,GAAGO,GAAjB,GAAwB,CAAlC;AACA,MAAMtD,CAAC,GAAImD,EAAE,GAAGE,GAAL,GAAWL,EAAE,GAAGM,GAAjB,GAAwB,CAAlC;AACA,MAAMrD,CAAC,GAAImD,EAAE,GAAGC,GAAL,GAAWJ,EAAE,GAAGK,GAAjB,GAAwB,CAAlC;AAEA,SAAO,CAACxC,KAAK,CAACf,CAAD,EAAIC,CAAJ,EAAOC,CAAP,CAAN,EAAiBC,CAAjB,CAAP;AACH;;AAED,SAASY,KAAT,CAAgBf,CAAhB,EAAmBC,CAAnB,EAAsBC,CAAtB,EAAyB;AACrB,SAAO,CACH,GADG,EAEHsD,eAAe,CAACxD,CAAC,CAACyD,QAAF,CAAW,EAAX,CAAD,CAFZ,EAGHD,eAAe,CAACvD,CAAC,CAACwD,QAAF,CAAW,EAAX,CAAD,CAHZ,EAIHD,eAAe,CAACtD,CAAC,CAACuD,QAAF,CAAW,EAAX,CAAD,CAJZ,EAKLC,IALK,CAKA,EALA,CAAP;AAMH;;AAED,SAASF,eAAT,CAA0BG,CAA1B,EAA6B;AACzB,SAAOA,CAAC,CAACtV,MAAF,GAAW,CAAX,GAAesV,CAAf,GAAmB,MAAMA,CAAhC;AACH,C;;;;;;;;ACrsCD;;IAiCqBC,+B;;;AAEjB,0BAAavE,IAAb,EAAmBwE,OAAnB,EAA4B;AAAA;;AAAA;;AAExB,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKC,OAAL,GAAe,KAAf;AACA,SAAKC,MAAL,GAAcC,SAAd;AAEA,SAAKC,EAAL,GAAUC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAV;AACA,SAAKF,EAAL,CAAQG,SAAR,GAAoB,OAApB;AAEA,SAAKC,QAAL,GAAgBH,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAhB;AACA,SAAKnY,GAAL,GAAW,KAAKqY,QAAL,CAAcC,UAAd,CAAyB,IAAzB,CAAX;AAEA,SAAKL,EAAL,CAAQM,WAAR,CAAoB,KAAKF,QAAzB;AAEA,SAAKG,OAAL,CAAaZ,OAAb;AACA,SAAKa,OAAL,CAAab,OAAb;AAEA,SAAKc,UAAL,GAAkBd,OAAO,CAACe,MAA1B;AAEA,SAAKC,OAAL,GAAexF,IAAI,CAACwF,OAApB;AAEAxF,QAAI,GAAGA,IAAI,CAACyF,QAAZ;AAEA,SAAK5Y,CAAL,GAAS4T,IAAI,CAACT,IAAD,CAAb;AAEA,SAAKpM,KAAL,GAAa,KAAK/G,CAAL,CAAO,KAAKA,CAAL,CAAOmC,MAAP,GAAgB,CAAvB,IAA4B,KAAKnC,CAAL,CAAO,CAAP,CAAzC;AAEA,SAAKE,UAAL,GAAkB,EAAlB;AACA,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAK4L,UAAL,GAAkBmH,IAAI,CAAC0F,KAAvB;AACA,SAAKxO,UAAL,GAAkB,EAAlB;AACA,SAAKyO,oBAAL,GAA4B,EAA5B;AACA,QAAIvW,CAAC,GAAG,CAAR;;AACA,SAAK,IAAIpB,KAAT,IAAkBgS,IAAI,CAAC0F,KAAvB,EAA8B;AAC1B,WAAK3Y,UAAL,CAAgBiB,KAAhB,IAAyB,IAAzB;AACA,WAAKhB,UAAL,CAAgBgB,KAAhB,IAAyB,CAAzB;AACA,WAAKf,UAAL,CAAgBe,KAAhB,IAAyB4H,uBAAuB,CAACoK,IAAI,CAAC4F,MAAL,CAAY5X,KAAZ,CAAD,EAAqB,CAArB,CAAhD;AACA,WAAK2X,oBAAL,CAA0B3X,KAA1B,IAAmCoB,CAAC,EAApC;AACA,WAAK8H,UAAL,CAAgBmJ,IAAhB,CAAqB;AACjBwF,UAAE,EAAE7X,KADa;AAEjBA,aAAK,EAAEgS,IAAI,CAAC0F,KAAL,CAAW1X,KAAX,CAFU;AAGjB0D,gBAAQ,EAAEyQ,eAAe,CAACnC,IAAI,CAAC4F,MAAL,CAAY5X,KAAZ,CAAD,EAAqB,CAArB,EAAwB,SAAxB,EAAmC,CAAnC,EAAsC,SAAtC,EAAiD,CAAjD,CAHR;AAIjBE,aAAK,EAAE,CAJU;AAKjBrB,SAAC,EAAE,CALc;AAMjByC,SAAC,EAAE,CANc;AAOjBoH,WAAG,EAAE,CAPY;AAQjBE,WAAG,EAAE;AARY,OAArB;AAUH;;AAED,SAAKkP,WAAL,GAAmB,KAAKC,UAAL,GAAkBvB,OAAO,CAAC1O,IAA7C;AACA,SAAKkQ,YAAL,GAAoB,KAAKC,WAAL,GAAmBzB,OAAO,CAACzO,EAA/C;AACA,SAAKmQ,YAAL,GAAoB1B,OAAO,CAACzO,EAAR,GAAayO,OAAO,CAAC1O,IAAzC;AAEA,SAAKsF,gBAAL,GAAwB,KAAK+K,aAAL,GAAqB,KAAKC,WAAL,GAAmB,CAAhE;AACA,SAAK1Y,SAAL,GAAiB,CAAjB;AAEA,SAAK2N,gBAAL,GAAwB,KAAKgL,aAAL,GAAqB,KAAKC,WAAL,GAAmB,CAAhE;AACA,SAAK3Y,SAAL,GAAiB,CAAjB;AAEA,SAAKmG,UAAL,GAAkB,KAAKC,QAAL,GAAgB,CAAlC;AACA,SAAKwS,UAAL,GAAkB,CAAlB;AAEA,SAAKC,OAAL,GAAe,IAAf;AAEA,SAAKC,WAAL,GAAmB,KAAnB;AACA,SAAKC,YAAL,GAAoB,KAApB;AACA,SAAKC,cAAL,GAAsB,CAAtB;AACA,SAAKhK,WAAL,GAAmB,CAAnB;AACA,SAAKiK,iBAAL,GAAyB,EAAzB;AAEA,SAAK7U,UAAL,GAAkB,CAAlB;AAEA,SAAK8U,aAAL,GAAqB,CAArB;AACA,SAAKC,WAAL,GAAmB,CAAnB;AACA,SAAKC,WAAL,GAAmB,CAAC,CAApB;AACA,SAAKC,UAAL,GAAkB,IAAlB;AACA,SAAKC,GAAL,GAAW,IAAX;AACA,SAAKC,SAAL,GAAiB,UAAjB;AACA,SAAKC,aAAL,GAAqB,EAArB;AAEA,SAAKC,MAAL,GAAc;AAAE9W,SAAG,EAAE,CAAP;AAAUC,YAAM,EAAE;AAAlB,KAAd;AAEA,SAAK8W,WAAL,GAAmB,CAAnB;AACA,SAAKC,WAAL,GAAmB,IAAnB;AAEA,SAAKzC,EAAL,CAAQ0C,gBAAR,CAAyB,WAAzB,EAAsC,UAAAC,CAAC;AAAA,aAAI,KAAI,CAACC,WAAL,CAAiBD,CAAjB,CAAJ;AAAA,KAAvC;AACA,SAAK3C,EAAL,CAAQ0C,gBAAR,CAAyB,WAAzB,EAAsC,UAAAC,CAAC;AAAA,aAAI,KAAI,CAACE,WAAL,CAAiBF,CAAjB,CAAJ;AAAA,KAAvC;AACA,SAAK3C,EAAL,CAAQ0C,gBAAR,CAAyB,SAAzB,EAAoC,UAAAC,CAAC;AAAA,aAAI,KAAI,CAACG,SAAL,CAAeH,CAAf,CAAJ;AAAA,KAArC;AACA,SAAK3C,EAAL,CAAQ0C,gBAAR,CAAyB,YAAzB,EAAuC,UAAAC,CAAC;AAAA,aAAI,KAAI,CAACI,YAAL,CAAkBJ,CAAlB,CAAJ;AAAA,KAAxC;AAEA,SAAK3C,EAAL,CAAQ0C,gBAAR,CAAyB,YAAzB,EAAuC,UAAAC,CAAC;AAAA,aAAI,KAAI,CAACK,YAAL,CAAkBL,CAAlB,CAAJ;AAAA,KAAxC;AACA,SAAK3C,EAAL,CAAQ0C,gBAAR,CAAyB,WAAzB,EAAsC,UAAAC,CAAC;AAAA,aAAI,KAAI,CAACM,WAAL,CAAiBN,CAAjB,CAAJ;AAAA,KAAvC;AACA,SAAK3C,EAAL,CAAQ0C,gBAAR,CAAyB,UAAzB,EAAqC,UAAAC,CAAC;AAAA,aAAI,KAAI,CAACO,UAAL,CAAgBP,CAAhB,CAAJ;AAAA,KAAtC;AAEA,SAAKQ,mBAAL,GAA2B,GAA3B;AAEA,SAAKC,YAAL,GAAoB1G,kBAAkB,CAAC,SAAD,EAAY,GAAZ,EAAiB,SAAjB,EAA4B,GAA5B,CAAtC;AACA,SAAK2G,YAAL,GAAoB3G,kBAAkB,CAAC,SAAD,EAAY,CAAZ,EAAe,SAAf,EAA0B,GAA1B,CAAtC;AACA,SAAK9I,cAAL,GAAsB8I,kBAAkB,CAAC,SAAD,EAAY,GAAZ,EAAiB,SAAjB,EAA4B,GAA5B,CAAxC;AACA,SAAKrI,oBAAL,GAA4BtD,uBAAuB,CAAC,SAAD,EAAY,GAAZ,CAAnD;AACA,SAAKuD,kBAAL,GAA0BoI,kBAAkB,CAAC,SAAD,EAAY,CAAZ,EAAe,SAAf,EAA0B,CAA1B,CAA5C;AACA,SAAKtI,cAAL,GAAsBsI,kBAAkB,CAAC,SAAD,EAAY,CAAZ,EAAe,SAAf,EAA0B,CAA1B,CAAxC;AACA,SAAKnI,kBAAL,GAA0BmI,kBAAkB,CAAC,SAAD,EAAY,CAAZ,EAAe,SAAf,EAA0B,CAA1B,CAA5C;AACA,SAAKvL,mBAAL,GAA2BuL,kBAAkB,CAAC,SAAD,EAAY,GAAZ,EAAiB,SAAjB,EAA4B,GAA5B,CAA7C;AACA,SAAKtL,sBAAL,GAA8BsL,kBAAkB,CAAC,SAAD,EAAY,CAAZ,EAAe,SAAf,EAA0B,CAA1B,CAAhD;AACA,SAAK4G,eAAL,GAAuB5G,kBAAkB,CAAC,SAAD,EAAY,CAAZ,EAAe,SAAf,EAA0B,CAA1B,CAAzC;AACH;;;;8BAEU;AAAA;;AAEP,UAAI,KAAKmD,OAAT,EAAkB;AACd;AACH;;AAED,WAAKA,OAAL,GAAe,IAAf;;AAEA,UAAM0D,IAAI,GAAG,SAAPA,IAAO,CAACC,EAAD,EAAQ;AAEjB,YAAI,CAAC,MAAI,CAAC1D,MAAV,EAAkB;AACd,gBAAI,CAACA,MAAL,GAAc0D,EAAd;AACAC,+BAAqB,CAACF,IAAD,CAArB;AACA;AACH;;AAED,YAAMG,MAAM,GAAGF,EAAE,GAAG,MAAI,CAAC1D,MAAzB;AACA,cAAI,CAACA,MAAL,GAAc0D,EAAd;;AAEA,YAAIE,MAAM,KAAK,CAAf,EAAkB;AACdD,+BAAqB,CAACF,IAAD,CAArB;AACA;AACH;;AAED,YAAII,aAAa,GAAG,KAApB;;AAEA,aAAK,IAAMC,QAAX,IAAuB,MAAI,CAAChE,UAA5B,EAAwC;AACpC,cAAMiE,IAAI,GAAG,MAAI,CAACjE,UAAL,CAAgBgE,QAAhB,CAAb;;AACA,cAAI,CAACC,IAAD,IAASA,IAAI,CAAC5S,IAAL,KAAc4S,IAAI,CAAC3S,EAA5B,IAAkC2S,IAAI,CAAC5S,IAAL,KAAc6J,QAAhD,IAA4D+I,IAAI,CAAC3S,EAAL,KAAY4J,QAA5E,EAAsF;AAClF,kBAAI,CAAC8E,UAAL,CAAgBgE,QAAhB,IAA4B,IAA5B;AACA;AACH;;AACDD,uBAAa,GAAG,IAAhB;AACAE,cAAI,CAACC,SAAL,CAAeD,IAAI,CAACE,IAApB,KAA6B,CAACF,IAAI,CAAC3S,EAAL,GAAU2S,IAAI,CAAC5S,IAAhB,IAAwByS,MAAxB,GAAiCG,IAAI,CAACG,QAAnE;;AACA,cAAI,CAACH,IAAI,CAACC,SAAL,CAAeD,IAAI,CAACE,IAApB,IAA4BF,IAAI,CAAC5S,IAAlC,KAA2C4S,IAAI,CAAC3S,EAAL,GAAU2S,IAAI,CAAC5S,IAA1D,KAAmE,CAAvE,EAA0E;AACtE4S,gBAAI,CAACC,SAAL,CAAeD,IAAI,CAACE,IAApB,IAA4BF,IAAI,CAAC3S,EAAjC;AACA2S,gBAAI,CAAC5S,IAAL,GAAY4S,IAAI,CAAC3S,EAAjB;AACH;AACJ;;AAED,YAAIyS,aAAJ,EAAmB;AACfF,+BAAqB,CAACF,IAAD,CAArB;AACH,SAFD,MAEO;AACH,gBAAI,CAACzD,MAAL,GAAcC,SAAd;AACA,gBAAI,CAACF,OAAL,GAAe,KAAf;AACH;;AAED,cAAI,CAACoE,MAAL;AACH,OAxCD;;AA0CAR,2BAAqB,CAACF,IAAD,CAArB;AACH;;;iCAEaO,S,EAAWC,I,EAAM7S,E,EAAI8S,Q,EAAUJ,Q,EAAU;AACnD,WAAKhE,UAAL,CAAgBgE,QAAQ,IAAIG,IAA5B,IAAoC;AAChCD,iBAAS,EAATA,SADgC;AAEhCC,YAAI,EAAJA,IAFgC;AAGhC9S,YAAI,EAAE6S,SAAS,CAACC,IAAD,CAHiB;AAIhC7S,UAAE,EAAFA,EAJgC;AAKhC8S,gBAAQ,EAARA;AALgC,OAApC;AAOH;;;oCAEgBJ,Q,EAAU;AACvB,aAAO,KAAKhE,UAAL,CAAgBgE,QAAhB,CAAP;AACH;;;4BAEQjE,O,EAAS;AAEd,WAAKuE,aAAL,CAAmBvE,OAAnB;AACA,WAAKwE,QAAL,CAAcxE,OAAO,CAACtX,KAAtB;AAEA,WAAKC,MAAL,GAAcT,WAAW,CAAC8X,OAAO,CAACrX,MAAT,CAAzB;AACA,WAAK8X,QAAL,CAAc9X,MAAd,GAAuB,KAAKA,MAA5B;AACA,WAAK8X,QAAL,CAAcgE,KAAd,CAAoB9b,MAApB,GAA6BqX,OAAO,CAACrX,MAAR,GAAiB,IAA9C;AAEA,UAAM+b,cAAc,GAAG1E,OAAO,CAAC9I,YAAR,GAAuB8I,OAAO,CAACrX,MAA/B,GAAwCqX,OAAO,CAAC7I,QAAR,GAAmB,CAAlF;AACA,UAAMwN,iBAAiB,GAAGD,cAAc,GAAG1E,OAAO,CAAC4E,aAAzB,GAAyC5E,OAAO,CAAC6E,IAA3E;AACA,UAAMlc,MAAM,GAAGgc,iBAAiB,GAAG3E,OAAO,CAAC8E,oBAA3C;AAEA,WAAKnc,MAAL,GAAcT,WAAW,CAACS,MAAD,CAAzB;AACA,WAAK8X,QAAL,CAAc9X,MAAd,GAAuBT,WAAW,CAACS,MAAD,CAAlC;AACA,WAAK8X,QAAL,CAAcgE,KAAd,CAAoB9b,MAApB,GAA6BA,MAAM,GAAG,IAAtC;AAEA,WAAKoc,WAAL,GAAmB7c,WAAW,CAAC8X,OAAO,CAACrX,MAAR,GAAiB,IAAIqX,OAAO,CAAC6E,IAA9B,CAA9B;AACA,WAAKG,gBAAL,GAAwB,KAAK9N,YAAL,GAAoB,KAAK2N,IAAjD;AACA,WAAKI,YAAL,GAAoB,KAAK/N,YAAL,GAAoB,KAAK6N,WAAzB,GAAuC,KAAKF,IAA5C,GAAmD,MAAM,KAAKvX,QAAlF;AACA,WAAKoX,cAAL,GAAsBxc,WAAW,CAACwc,cAAD,CAAjC;AACA,WAAKC,iBAAL,GAAyBzc,WAAW,CAACyc,iBAAD,CAApC;AAEA,WAAKO,MAAL,GAAc,IAAd;AACH;;;4BAEQlF,O,EAAS;AACd,WAAK1S,QAAL,GAAgBpF,WAAW,CAAC8X,OAAO,CAAC7I,QAAT,CAA3B;AACA,WAAK3C,QAAL,GAAgBwL,OAAO,CAACmF,UAAxB;AACA,WAAKpS,OAAL,GAAe,KAAKzF,QAAL,GAAgB,KAAhB,GAAwB0S,OAAO,CAACmF,UAA/C;AACA,WAAK/c,GAAL,CAAS4K,IAAT,GAAgB,KAAKD,OAArB;AACH;;;6BAESrK,K,EAAO0c,M,EAAQ;AAErB,WAAK1c,KAAL,GAAaR,WAAW,CAACQ,KAAD,CAAxB;AACA,WAAK+X,QAAL,CAAc/X,KAAd,GAAsB,KAAKA,KAA3B;AACA,WAAK+X,QAAL,CAAcgE,KAAd,CAAoB/b,KAApB,GAA4BA,KAAK,GAAG,IAApC;AAEA,WAAK2c,UAAL,GAAkB,KAAK3c,KAAL,GAAa,IAAI,KAAK4c,IAAxC;AAEA,WAAKld,GAAL,CAAS4K,IAAT,GAAgB,KAAKD,OAArB;AACA,WAAK3K,GAAL,CAASmd,QAAT,GAAoB,OAApB;;AAEA,UAAIH,MAAJ,EAAY;AACR,aAAKF,MAAL,GAAc,IAAd;AACA,aAAKZ,MAAL;AACH;AACJ;;;kCAEctE,O,EAAS;AACpB,WAAKsF,IAAL,GAAYpd,WAAW,CAAC8X,OAAO,CAACsF,IAAT,CAAvB;AACA,WAAKT,IAAL,GAAY3c,WAAW,CAAC8X,OAAO,CAAC6E,IAAT,CAAvB;AACA,WAAKW,SAAL,GAAiBtd,WAAW,CAAC8X,OAAO,CAACwF,SAAT,CAA5B;AACA,WAAKC,WAAL,GAAmBvd,WAAW,CAAC8X,OAAO,CAACyF,WAAT,CAA9B;AACA,WAAKC,WAAL,GAAmBxd,WAAW,CAAC8X,OAAO,CAAC0F,WAAT,CAA9B;AACA,WAAKd,aAAL,GAAqB1c,WAAW,CAAC8X,OAAO,CAAC4E,aAAT,CAAhC;AACA,WAAKjS,cAAL,GAAsBzK,WAAW,CAAC8X,OAAO,CAACrN,cAAT,CAAjC;AACA,WAAKC,cAAL,GAAsB1K,WAAW,CAAC8X,OAAO,CAACpN,cAAT,CAAjC;AACA,WAAKC,cAAL,GAAsB3K,WAAW,CAAC8X,OAAO,CAACnN,cAAT,CAAjC;AACA,WAAKzJ,SAAL,GAAiBlB,WAAW,CAAC8X,OAAO,CAAC5W,SAAT,CAA5B;AACA,WAAK0K,WAAL,GAAmB5L,WAAW,CAAC8X,OAAO,CAAClM,WAAT,CAA9B;AACA,WAAK6R,gBAAL,GAAwBzd,WAAW,CAAC8X,OAAO,CAAC2F,gBAAT,CAAnC;AACA,WAAKC,aAAL,GAAqB1d,WAAW,CAAC8X,OAAO,CAAC4F,aAAT,CAAhC;AACA,WAAKC,cAAL,GAAsB3d,WAAW,CAAC8X,OAAO,CAAC8F,cAAT,CAAjC;AACA,WAAKnO,cAAL,GAAsBzP,WAAW,CAAC8X,OAAO,CAACrI,cAAT,CAAjC;AACA,WAAKoO,iBAAL,GAAyB7d,WAAW,CAAC8X,OAAO,CAAC+F,iBAAT,CAApC;AACA,WAAK7O,YAAL,GAAoBhP,WAAW,CAAC8X,OAAO,CAAC9I,YAAT,CAA/B;AACH;;;yBAEKuL,G,EAAK1Z,I,EAAMC,K,EAAO;AACpByZ,SAAG,CAACnB,WAAJ,GAAkBvY,IAAlB;AACA0Z,SAAG,CAACjB,YAAJ,GAAmBxY,KAAnB;AACAyZ,SAAG,CAACf,YAAJ,GAAmB1Y,KAAK,GAAGD,IAA3B;AACA,WAAKid,OAAL;AACH;;;2BAEOvD,G,EAAKjZ,K,EAAO;AAChB,UAAIyc,MAAM,GAAG,IAAb;AADgB;AAAA;AAAA;;AAAA;AAEhB,6BAAqB,KAAKvT,UAA1B,8HAAsC;AAAA,cAA7BQ,QAA6B;;AAClC,cAAIA,QAAQ,CAACmO,EAAT,KAAgB7X,KAAhB,IAAyB,KAAKjB,UAAL,CAAgB2K,QAAQ,CAACmO,EAAzB,CAA7B,EAA2D;AACvD4E,kBAAM,GAAG,KAAT;AACH;AACJ;AANe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOhB,UAAIA,MAAJ,EAAY;AACR;AACH;;AACDxD,SAAG,CAACla,UAAJ,CAAeiB,KAAf,IAAwB,CAACiZ,GAAG,CAACla,UAAJ,CAAeiB,KAAf,CAAzB;AACA,UAAM+H,EAAE,GAAG,CAACkR,GAAG,CAACla,UAAJ,CAAeiB,KAAf,CAAZ;AACA,WAAK0c,YAAL,CAAkBzD,GAAG,CAACja,UAAtB,EAAkCgB,KAAlC,EAAyC+H,EAAzC,EAA6C,KAAKiS,mBAAlD;AACA,WAAK0C,YAAL,CAAkBzD,GAAG,CAAC/P,UAAJ,CAAe+P,GAAG,CAACtB,oBAAJ,CAAyB3X,KAAzB,CAAf,CAAlB,EAAmE,OAAnE,EAA4E+H,EAA5E,EAAgF,KAAKiS,mBAArF,EAA0G,cAAcha,KAAxH;AACA,WAAKwc,OAAL;AACH;;;yBAEKG,K,EAAOC,S,EAAW;AAEpB,UAAIA,SAAJ,EAAe;AACX,aAAKF,YAAL,CAAkB,IAAlB,EAAwB,eAAxB,EAAyC,CAAzC,EAA4C,KAAK1C,mBAAjD;;AACA,YAAI2C,KAAK,KAAK,KAAK5D,WAAnB,EAAgC;AAC5B,eAAKC,UAAL,GAAkB,KAAK6D,UAAL,CAAgBF,KAAhB,CAAlB;AACA,eAAK5D,WAAL,GAAmB4D,KAAnB;AACH;;AACD,aAAK1D,GAAL,GAAW,KAAKD,UAAhB;AACA,aAAK0D,YAAL,CAAkB,IAAlB,EAAwB,aAAxB,EAAuC,CAAvC,EAA0C,KAAK1C,mBAA/C;AACA,aAAKd,SAAL,GAAiB,SAAjB;AACH,OATD,MASO;AACH,aAAKD,GAAL,GAAW,IAAX;AACA,aAAKyD,YAAL,CAAkB,IAAlB,EAAwB,eAAxB,EAAyC,CAAzC,EAA4C,KAAK1C,mBAAjD;AACA,aAAK0C,YAAL,CAAkB,IAAlB,EAAwB,aAAxB,EAAuC,CAAvC,EAA0C,KAAK1C,mBAA/C;AACA,aAAKd,SAAL,GAAiB,UAAjB;AACH;;AAED,WAAKsD,OAAL;AACH;;;6BAES;AAEN,WAAK5d,GAAL,CAASke,SAAT,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,KAAK5d,KAA9B,EAAqC,KAAKC,MAA1C;;AAEA,UAAI,KAAK0Z,aAAL,GAAqB,CAAzB,EAA4B;AACxB,aAAKkE,IAAL,CAAU,IAAV;AAEAtP,kBAAU,CAAC,KAAK7O,GAAN,EAAW,KAAKkd,IAAhB,EAAsB,CAAtB,EAAyB,KAAKpO,YAA9B,EAA4C,KAAKS,cAAjD,EAAiE,KAAKnD,QAAtE,EAAgF,KAAKsM,UAArF,EAAiG,KAAKnM,kBAAtG,EAA0H,KAAKpH,UAA/H,EAA2I,KAAK8U,aAAhJ,CAAV;AACA3K,4BAAoB,CAAC,KAAKtP,GAAN,EAAW,KAAKkd,IAAhB,EAAsB,CAAtB,EAAyB,KAAKD,UAA9B,EAA0C,KAAKnO,YAA/C,EAA6D,KAAKS,cAAlE,EAAkF,KAAKtP,CAAL,CAAO,CAAP,CAAlF,EAA6F,KAAK+G,KAAlG,EAAyG,KAAKkS,WAA9G,EAA2H,KAAKE,YAAhI,EAA8I,IAA9I,EAAoJ,KAAKuE,iBAAzJ,EAA4K,KAAKvR,QAAjL,EAA2L,KAAKG,kBAAhM,EAAoN,KAAKpH,UAAzN,EAAqO,KAAK8U,aAA1O,CAApB;AAEA,aAAKmE,QAAL,CAAc,IAAd,EAAoB,KAApB,EAA2B,WAA3B,EAAwC,eAAxC,EAAyD,KAAKnE,aAA9D;AACH;;AAED,UAAI,KAAKC,WAAL,GAAmB,CAAvB,EAA0B;AACtB,YAAMtB,OAAO,GAAG,KAAKwB,UAArB;AACA,aAAK+D,IAAL,CAAUvF,OAAV;AAEA3J,0BAAkB,CAAC,KAAKjP,GAAN,EAAW,KAAKkd,IAAhB,EAAsB,CAAtB,EAAyB,KAAKpO,YAA9B,EAA4C,KAAKS,cAAjD,EAAiE,KAAKnD,QAAtE,EAAgF,KAAKmP,eAArF,EAAsG,KAAKpW,UAA3G,EAAuH,KAAK+U,WAA5H,EAAyI,KAAKK,aAA9I,CAAlB;AACAjL,4BAAoB,CAAC,KAAKtP,GAAN,EAAW,KAAKkd,IAAhB,EAAsB,CAAtB,EAAyB,KAAKD,UAA9B,EAA0C,KAAKnO,YAA/C,EAA6D,KAAKS,cAAlE,EAAkFqJ,OAAO,CAAC3Y,CAAR,CAAU,CAAV,CAAlF,EAAgG2Y,OAAO,CAAC5R,KAAxG,EAA+G4R,OAAO,CAACM,WAAvH,EAAoIN,OAAO,CAACQ,YAA5I,EAA0J,KAA1J,EAAiK,KAAKuE,iBAAtK,EAAyL,KAAKvR,QAA9L,EAAwM,KAAKG,kBAA7M,EAAiO,KAAKpH,UAAtO,EAAkP,KAAK+U,WAAvP,CAApB;AAEA,aAAKkE,QAAL,CAAcxF,OAAd,EAAuB,IAAvB,EAA6B,OAA7B,EAAsC,OAAtC,EAA+C,KAAKsB,WAApD;AACH;;AAED,WAAK9P,cAAL,CAAoB,KAAKiQ,GAAzB,EAA8B,IAA9B,EAAoC,OAApC,EAA6C,OAA7C,EAAsD,KAAKH,WAA3D;AACH;;;6BAESG,G,EAAKrK,M,EAAQqO,e,EAAiBC,gB,EAAkBrd,S,EAAW;AAEjE,WAAKmD,QAAL,CAAciW,GAAd,EAAmBrK,MAAnB,EAA2BqO,eAA3B,EAA4CC,gBAA5C,EAA8Drd,SAA9D;AAEA,WAAKsd,SAAL,CAAelE,GAAf,EAAoBrK,MAApB,EAA4BqO,eAA5B,EAA6CC,gBAA7C,EAA+Drd,SAA/D;AAEA,WAAK6F,SAAL,CAAeuT,GAAf,EAAoBrK,MAApB,EAA4BqO,eAA5B,EAA6CC,gBAA7C,EAA+Drd,SAA/D;AAEA,WAAKud,WAAL,CAAiBnE,GAAjB,EAAsBrK,MAAtB,EAA8BqO,eAA9B,EAA+CC,gBAA/C,EAAiErd,SAAjE;AAEA,WAAKwd,UAAL,CAAgBpE,GAAhB,EAAqBrK,MAArB,EAA6BqO,eAA7B,EAA8CC,gBAA9C,EAAgErd,SAAhE;;AAEA,UAAIoZ,GAAG,CAACR,WAAJ,KAAoB5Y,SAAS,GAAG,CAAZ,IAAkBoZ,GAAG,CAACN,cAAJ,IAAsBM,GAAG,CAACnB,WAA1B,IAAyCmB,GAAG,CAACN,cAAJ,IAAsBM,GAAG,CAACjB,YAAzG,CAAJ,EAA6H;AACzH,aAAKsF,UAAL,CAAgBrE,GAAhB,EAAqBrK,MAArB,EAA6BqO,eAA7B,EAA8CC,gBAA9C,EAAgErd,SAAhE;AACH;AACJ;;;6BAESoZ,G,EAAKrK,M,EAAQqO,e,EAAiBC,gB,EAAkBrd,S,EAAW;AAEjEmD,oBAAQ,CAAC,KAAKpE,GAAN,EAAW,KAAKkd,IAAhB,EAAsB,KAAKpO,YAA3B,EAAyC,KAAKmO,UAA9C,EAA0D,KAAKN,WAAL,GAAmB,KAAKF,IAAlF,EAAwF,CAAxF,EACJpC,GAAG,CAACd,aADA,EACec,GAAG,CAACb,WADnB,EACgCa,GAAG,CAAC7L,gBADpC,EAEJ6L,GAAG,CAACZ,aAFA,EAEeY,GAAG,CAACX,WAFnB,EAEgCW,GAAG,CAAC5L,gBAFpC,EAGJ4L,GAAG,CAACG,MAAJ,CAAWhX,GAHP,EAGY6W,GAAG,CAACG,MAAJ,CAAW/W,GAHvB,EAG4B4W,GAAG,CAACG,MAAJ,CAAW9W,GAHvC,EAG4C2W,GAAG,CAACG,MAAJ,CAAW7W,MAHvD,EAIJ,KAAK0X,YAJD,EAIe,KAAKC,YAJpB,EAIkC,KAJlC,EAIyC,CAJzC,EAI4C,KAAKkC,aAJjD,EAIgE,KAAKtY,QAJrE,EAI+E,KAAKC,UAJpF,EAIgGlE,SAJhG,CAAR;AAKH;;;8BAEUoZ,G,EAAKrK,M,EAAQqO,e,EAAiBC,gB,EAAkBrd,S,EAAW,CAAE;;;8BAE7DoZ,G,EAAKrK,M,EAAQqO,e,EAAiBC,gB,EAAkBrd,S,EAAW;AAElE;AACA6F,qBAAS,CAAC,KAAK9G,GAAN,EAAW,KAAKkd,IAAhB,EAAsB,KAAKL,YAA3B,EACL,KAAKI,UAAL,GAAkB5C,GAAG,CAACf,YADjB,EAC+Be,GAAG,CAACpa,CAAJ,CAAM,CAAN,CAD/B,EACyCoa,GAAG,CAACrT,KAD7C,EACoDqX,eADpD,EACqEhE,GAAG,CAACnB,WADzE,EACsFmB,GAAG,CAACjB,YAD1F,EAELiB,GAAG,CAACnT,UAFC,EAEWmT,GAAG,CAAClT,QAFf,EAEyBkT,GAAG,CAACV,UAF7B,EAEyC,KAAK2B,YAF9C,EAE4D,KAAKnW,UAFjE,EAE6ElE,SAF7E,CAAT;AAGH;;;gCAEYoZ,G,EAAKrK,M,EAAQqO,e,EAAiBC,gB,EAAkBrd,S,EAAW,CAAE;;;+BAE9DoZ,G,EAAKrK,M,EAAQqO,e,EAAiBC,gB,EAAkBrd,S,EAAW;AAEnE;AACAgI,yBAAmB,CAAC,KAAKjJ,GAAN,EAAW,KAAKkd,IAAhB,EAAsB,KAAKZ,cAA3B,EAA2C,KAAKW,UAAhD,EAA4D,KAAKT,aAAjE,EACfnC,GAAG,CAACnB,WADW,EACEmB,GAAG,CAACjB,YADN,EACoB,KAAKhQ,mBADzB,EAC8C,KAAKC,sBADnD,EAC2E,KAAKlE,UADhF,EAC4FlE,SAD5F,CAAnB;AAEH;;;+BAEWoZ,G,EAAKrK,M,EAAQqO,e,EAAiBC,gB,EAAkBrd,S,EAAW,CAAE;;;mCAEzDoZ,G,EAAK;AAEjB;AACAjQ,0BAAc,CAAC,KAAKpK,GAAN,EAAW,KAAKkd,IAAhB,EAAsB7C,GAAG,CAACkC,iBAA1B,EAA6C,KAAKU,UAAlD,EACV5C,GAAG,CAAC/P,UADM,EACM,KAAKC,cADX,EAC2B,KAAKC,cADhC,EACgD,KAAKC,cADrD,EACqE,KAAK2B,QAD1E,EACoF,KAAKjH,UADzF,EACqG,CADrG,CAAd;AAEH;;;yBAEKkV,G,EAAK;AACP,WAAKsE,SAAL,CAAetE,GAAf;AACH;;;8BAEUA,G,EAAK;AAEZ,UAAIA,GAAG,CAACf,YAAJ,GAAoB,IAAIe,GAAG,CAACpa,CAAJ,CAAMmC,MAAlC,EAA2C;AACvCiY,WAAG,CAACnT,UAAJ,GAAiB,CAAjB;AACA;AACH;;AAED,UAAImT,GAAG,CAACnT,UAAJ,KAAmB,CAAvB,EAA0B;AACtBmT,WAAG,CAACnT,UAAJ,GAAiBmT,GAAG,CAAClT,QAAJ,GACb,KAAKiW,SAAL,GAAkB/C,GAAG,CAACf,YAAtB,GAAsC,KAAK2D,UAD/C;AAEH;;AAED,UAAM2B,WAAW,GAAGvE,GAAG,CAAClT,QAAJ,GAAe,KAAK8V,UAApB,GAAiC5C,GAAG,CAACf,YAAzD;;AAEA,UAAIsF,WAAW,IAAI,IAAI,KAAKxB,SAA5B,EAAuC;AACnC/C,WAAG,CAACnT,UAAJ,GAAiBmT,GAAG,CAAClT,QAArB;AACAkT,WAAG,CAAClT,QAAJ,GAAekT,GAAG,CAAClT,QAAJ,GAAe,CAA9B;AACAkT,WAAG,CAACV,UAAJ,GAAiB,CAAjB;AACA,YAAMkC,QAAQ,GAAG,KAAKvB,SAAL,GAAiB,YAAlC;AACA,aAAKwD,YAAL,CAAkBzD,GAAlB,EAAuB,YAAvB,EAAqC,CAArC,EAAwC,KAAKe,mBAA7C,EAAkES,QAAlE;AACA,aAAK+B,OAAL;AACH,OAPD,MAOO,IAAIgB,WAAW,GAAG,KAAKxB,SAAvB,EAAkC;AACrC/C,WAAG,CAACnT,UAAJ,GAAiBmT,GAAG,CAAClT,QAArB;AACAkT,WAAG,CAAClT,QAAJ,GAAekT,GAAG,CAAClT,QAAJ,GAAe,CAA9B;AACAkT,WAAG,CAACV,UAAJ,GAAiB,CAAjB;;AACA,YAAMkC,SAAQ,GAAG,KAAKvB,SAAL,GAAiB,YAAlC;;AACA,aAAKwD,YAAL,CAAkBzD,GAAlB,EAAuB,YAAvB,EAAqC,CAArC,EAAwC,KAAKe,mBAA7C,EAAkES,SAAlE;AACA,aAAK+B,OAAL;AACH;AACJ;;;uCAEmB1U,I,EAAMC,E,EAAI;AAE1B,UAAMmK,OAAO,GAAG,EAAhB;AAAA,UAAoBuL,gBAAgB,GAAG,EAAvC;;AAEA,WAAK,IAAIrc,EAAC,GAAG0G,IAAb,EAAmB1G,EAAC,IAAI2G,EAAxB,EAA4B3G,EAAC,EAA7B,EAAiC;AAC7B,YAAMiF,SAAS,GAAG,KAAKxH,CAAL,CAAOuC,EAAP,CAAlB;AACA,YAAMoW,OAAO,GAAG,KAAKA,OAAL,CAAanR,SAAb,CAAhB;AAF6B;AAAA;AAAA;;AAAA;AAG7B,gCAAqBmR,OAAO,CAACtF,OAA7B,mIAAsC;AAAA,gBAA3BC,MAA2B;;AAClC,gBAAIsL,gBAAgB,CAACtL,MAAM,CAAC,CAAD,CAAP,CAAhB,KAAgCyE,SAApC,EAA+C;AAC3C6G,8BAAgB,CAACtL,MAAM,CAAC,CAAD,CAAP,CAAhB,GAA8BD,OAAO,CAAClR,MAAtC;AACAkR,qBAAO,CAACG,IAAR,CAAaF,MAAM,CAAC8C,KAAP,EAAb;AACH,aAHD,MAGO;AACH,kBAAIyI,CAAC,GAAGvL,MAAM,CAACnR,MAAf;AACA,kBAAM+G,GAAE,GAAGmK,OAAO,CAACuL,gBAAgB,CAACtL,MAAM,CAAC,CAAD,CAAP,CAAjB,CAAlB;AACA,kBAAMwL,MAAM,GAAG5V,GAAE,CAAC/G,MAAH,GAAY,CAA3B;;AACA,qBAAO0c,CAAC,KAAK,CAAb,EAAgB;AACZ3V,mBAAE,CAAC4V,MAAM,GAAGD,CAAV,CAAF,GAAiBvL,MAAM,CAACuL,CAAD,CAAvB;AACH;AACJ;AACJ;AAf4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBhC;;AAED,aAAOxL,OAAP;AACH;;;+BAEWyK,K,EAAO;AAEf,UAAIiB,QAAQ,GAAGjB,KAAK,GAAG,CAAvB;AACA,UAAIkB,OAAO,GAAGlB,KAAK,GAAG,CAAtB;;AAEA,UAAIiB,QAAQ,GAAG,CAAf,EAAkB;AACdC,eAAO,IAAI,IAAID,QAAf;AACAA,gBAAQ,GAAG,CAAX;AACH,OAHD,MAGO,IAAIC,OAAO,IAAI,KAAKhf,CAAL,CAAOmC,MAAtB,EAA8B;AACjC4c,gBAAQ,IAAIC,OAAO,GAAG,KAAKhf,CAAL,CAAOmC,MAAjB,GAA0B,CAAtC;AACA6c,eAAO,GAAG,KAAKhf,CAAL,CAAOmC,MAAP,GAAgB,CAA1B;AACH;;AAED,UAAI+W,UAAJ,EAAgBE,WAAhB;AACA,UAAMH,WAAW,GAAGC,UAAU,GAAG,CAAC4E,KAAK,GAAGiB,QAAT,IAAqB,CAAtD;AACA,UAAM5F,YAAY,GAAGC,WAAW,GAAGH,WAAW,GAAG,IAAI,CAArD;AACA,UAAMI,YAAY,GAAGF,YAAY,GAAGF,WAApC;AAEA,aAAO;AAEHjZ,SAAC,EAAE,KAAKA,CAFL;AAGH+G,aAAK,EAAE,KAAK/G,CAAL,CAAO,KAAKA,CAAL,CAAOmC,MAAP,GAAgB,CAAvB,IAA4B,KAAKnC,CAAL,CAAO,CAAP,CAHhC;AAKH+e,gBAAQ,EAARA,QALG;AAKOC,eAAO,EAAPA,OALP;AAMH/F,mBAAW,EAAXA,WANG;AAMUE,oBAAY,EAAZA,YANV;AAMwBE,oBAAY,EAAZA,YANxB;AAQHnZ,kBAAU,EAAE,KAAKA,UARd;AASHC,kBAAU,EAAE,KAAKA,UATd;AAUHC,kBAAU,EAAE,KAAKA,UAVd;AAWH4L,kBAAU,EAAE,KAAKA,UAXd;AAaHsQ,yBAAiB,EAAE,KAAKA,iBAbrB;AAcHjS,kBAAU,EAAE,KAAKA,UAdd;AAeHyO,4BAAoB,EAAE,KAAKA,oBAfxB;AAiBH7R,kBAAU,EAAE,CAjBT;AAkBHC,gBAAQ,EAAE,CAlBP;AAmBHwS,kBAAU,EAAE,CAnBT;AAqBHC,eAAO,EAAE,IArBN;AAsBHsF,mBAAW,EAAE,CAtBV;AAuBH/F,kBAAU,EAAVA,UAvBG;AAuBSE,mBAAW,EAAXA,WAvBT;AAyBHQ,mBAAW,EAAE,KAzBV;AA0BHC,oBAAY,EAAE,KA1BX;AA2BHE,yBAAiB,EAAE,EA3BhB;AA4BHjK,mBAAW,EAAE,CAAC,CA5BX;AA6BHgK,sBAAc,EAAE,CA7Bb;AA8BHS,cAAM,EAAE;AA9BL,OAAP;AAgCH;;;8BAEUH,G,EAAK;AACZA,SAAG,CAACT,OAAJ,GAAc,IAAd;AACAS,SAAG,CAAClB,UAAJ,GAAiBkB,GAAG,CAACnB,WAArB;AACAmB,SAAG,CAAChB,WAAJ,GAAkBgB,GAAG,CAACjB,YAAtB;AACH;;;+BAEWiB,G,EAAK8E,G,EAAKtX,Q,EAAU;AAC5BwS,SAAG,CAACT,OAAJ,GAAcuF,GAAd;AACA9E,SAAG,CAAC6E,WAAJ,GAAkBrX,QAAlB;AACAwS,SAAG,CAAClB,UAAJ,GAAiBkB,GAAG,CAACnB,WAArB;AACAmB,SAAG,CAAChB,WAAJ,GAAkBgB,GAAG,CAACjB,YAAtB;AACH;;;4BAEQiB,G,EAAK+E,Y,EAAc;AAExB,UAAI/E,GAAG,CAACT,OAAJ,KAAgB,IAApB,EAA0B;AACtB;AACH;;AAED,UAAI1Q,IAAI,GAAGmR,GAAG,CAAClB,UAAf;AAAA,UAA2BhQ,EAAE,GAAGkR,GAAG,CAAChB,WAApC;AAEA,UAAMgG,UAAU,GAAGvf,WAAW,CAACsf,YAAY,GAAG/E,GAAG,CAAC6E,WAApB,CAA9B;AACA,UAAMI,OAAO,GAAGD,UAAU,GAAG,KAAKpC,UAAlC;AACA,UAAMsC,KAAK,GAAG,IAAI3W,YAAJ,GAAmB,KAAKqU,UAAtC;;AAEA,UAAI5C,GAAG,CAACT,OAAJ,KAAgB,MAApB,EAA4B;AACxB1Q,YAAI,IAAIoW,OAAR;;AACA,YAAIpW,IAAI,GAAGqW,KAAP,GAAepW,EAAnB,EAAuB;AACnBD,cAAI,GAAGC,EAAE,GAAGoW,KAAZ;AACH;;AACD,YAAIrW,IAAI,GAAG,CAAX,EAAc;AACVA,cAAI,GAAG,CAAP;AACH;AACJ,OARD,MAQO,IAAImR,GAAG,CAACT,OAAJ,KAAgB,OAApB,EAA6B;AAChCzQ,UAAE,IAAImW,OAAN;;AACA,YAAIpW,IAAI,GAAGqW,KAAP,GAAepW,EAAnB,EAAuB;AACnBA,YAAE,GAAGD,IAAI,GAAGqW,KAAZ;AACH;;AACD,YAAIpW,EAAE,GAAG,CAAT,EAAY;AACRA,YAAE,GAAG,CAAL;AACH;AACJ,OARM,MAQA;AACHD,YAAI,IAAIoW,OAAR;AACAnW,UAAE,IAAImW,OAAN;;AACA,YAAIpW,IAAI,GAAG,CAAX,EAAc;AACVC,YAAE,GAAGA,EAAE,GAAGD,IAAV;AACAA,cAAI,GAAG,CAAP;AACH;;AACD,YAAIC,EAAE,GAAG,CAAT,EAAY;AACRD,cAAI,GAAGA,IAAI,IAAIC,EAAE,GAAG,CAAT,CAAX;AACAA,YAAE,GAAG,CAAL;AACH;AACJ;;AAED,WAAKqW,IAAL,CAAUnF,GAAV,EAAenR,IAAf,EAAqBC,EAArB;AACH;;;2BAEOkR,G,EAAKpa,C,EAAGyC,C,EAAG;AAEf,UAAMoa,MAAM,GAAG,KAAK2C,qBAAL,EAAf;AAEA,UAAMC,OAAO,GAAG5f,WAAW,CAACG,CAAC,GAAG6c,MAAM,CAACnc,IAAZ,CAA3B;AACA,UAAMgf,OAAO,GAAG7f,WAAW,CAAC4C,CAAC,GAAGoa,MAAM,CAACpZ,GAAZ,CAA3B;AAEA,UAAMkc,KAAK,GAAG,KAAK1C,IAAL,GAAY7C,GAAG,CAACnB,WAAJ,GAAkB,KAAK+D,UAAnC,GAAgDrU,YAA9D;AACA,UAAMiX,GAAG,GAAG,KAAK3C,IAAL,GAAY7C,GAAG,CAACjB,YAAJ,GAAmB,KAAK6D,UAApC,GAAiDrU,YAA7D;AACA,UAAMU,KAAK,GAAG,KAAKgT,cAAL,GAAsBzT,cAApC;AACA,UAAMU,GAAG,GAAG,KAAK+S,cAAL,GAAsB,KAAKE,aAA3B,GAA2C3T,cAAvD;;AAEA,UAAI6W,OAAO,GAAGE,KAAV,IAAmBF,OAAO,GAAGG,GAA7B,IAAoCF,OAAO,GAAGrW,KAA9C,IAAuDqW,OAAO,GAAGpW,GAArE,EAA0E;AACtE,eAAO,IAAP;AACH;;AAED,UAAImW,OAAO,GAAGE,KAAK,GAAG,IAAIhX,YAA1B,EAAwC;AACpC,eAAO,MAAP;AACH,OAFD,MAEO,IAAI8W,OAAO,GAAGG,GAAG,GAAG,IAAIjX,YAAxB,EAAsC;AACzC,eAAO,OAAP;AACH,OAFM,MAEA;AACH,eAAO,MAAP;AACH;AACJ;;;6BAESyR,G,EAAKpa,C,EAAGyC,C,EAAG;AAEjB,UAAMoa,MAAM,GAAG,KAAK2C,qBAAL,EAAf;AAEA,UAAMC,OAAO,GAAG5f,WAAW,CAACG,CAAC,GAAG6c,MAAM,CAACnc,IAAZ,CAA3B;AACA,UAAMgf,OAAO,GAAG7f,WAAW,CAAC4C,CAAC,GAAGoa,MAAM,CAACpZ,GAAZ,CAA3B;;AAEA,UAAIic,OAAO,GAAGtF,GAAG,CAACkC,iBAAlB,EAAqC;AACjC;AACH;;AATgB;AAAA;AAAA;;AAAA;AAUjB,8BAAgBlC,GAAG,CAAC/P,UAApB,mIAAgC;AAAA,cAArBoN,CAAqB;;AAC5B,cAAIA,CAAC,CAACzX,CAAF,IAAOyf,OAAP,IAAkBhI,CAAC,CAAC5N,GAAF,IAAS4V,OAA3B,IAAsChI,CAAC,CAAChV,CAAF,IAAOid,OAA7C,IAAwDjI,CAAC,CAAC1N,GAAF,IAAS2V,OAArE,EAA+E;AAC3E,mBAAOjI,CAAC,CAACuB,EAAT;AACH;AACJ;AAdgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBjB;AACH;;;8BAEUoB,G,EAAKO,C,EAAG;AACf,UAAMuE,GAAG,GAAG,KAAKW,MAAL,CAAYzF,GAAZ,EAAiBO,CAAC,CAACmF,OAAnB,EAA4BnF,CAAC,CAACoF,OAA9B,CAAZ;;AACA,UAAIb,GAAG,KAAK,IAAZ,EAAkB;AACd;AACH;;AACD,WAAKc,UAAL,CAAgB5F,GAAhB,EAAqB8E,GAArB,EAA0BvE,CAAC,CAACmF,OAA5B;AACH;;;kCAEcnF,C,EAAG;AACd,UAAMxZ,KAAK,GAAG,KAAK8e,QAAL,CAAc,KAAK7F,GAAnB,EAAwBO,CAAC,CAACmF,OAA1B,EAAmCnF,CAAC,CAACoF,OAArC,CAAd;;AACA,UAAI5e,KAAJ,EAAW;AACP,aAAK+e,MAAL,CAAY,KAAK9F,GAAjB,EAAsBjZ,KAAtB;AACH;AACJ;;;oCAEgBwZ,C,EAAG;AAChB,UAAMxZ,KAAK,GAAG,KAAK8e,QAAL,CAAc,KAAK7F,GAAnB,EAAwBO,CAAC,CAACmF,OAA1B,EAAmCnF,CAAC,CAACoF,OAArC,CAAd;;AACA,UAAI5e,KAAJ,EAAW;AACP,YAAI,CAAC,KAAKjB,UAAL,CAAgBiB,KAAhB,CAAL,EAA6B;AACzB,eAAK+e,MAAL,CAAY,KAAK9F,GAAjB,EAAsBjZ,KAAtB;AACH;;AAHM;AAAA;AAAA;;AAAA;AAIP,gCAAuB,KAAKkJ,UAA5B,mIAAwC;AAAA,gBAA7BQ,QAA6B;;AACpC,gBAAIA,QAAQ,CAACmO,EAAT,KAAgB7X,KAAhB,IAAyB,KAAKjB,UAAL,CAAgB2K,QAAQ,CAACmO,EAAzB,CAA7B,EAA2D;AACvD,mBAAKkH,MAAL,CAAY,KAAK9F,GAAjB,EAAsBvP,QAAQ,CAACmO,EAA/B;AACH;AACJ;AARM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASV;AACJ;;;iCAEa2B,C,EAAG;AAEb,UAAMkC,MAAM,GAAG,KAAK2C,qBAAL,EAAf;AAEA,UAAMC,OAAO,GAAG5f,WAAW,CAAC8a,CAAC,CAACmF,OAAF,GAAYjD,MAAM,CAACnc,IAApB,CAA3B;AACA,UAAMgf,OAAO,GAAG7f,WAAW,CAAC8a,CAAC,CAACoF,OAAF,GAAYlD,MAAM,CAACpZ,GAApB,CAA3B;AAEA,UAAMgU,CAAC,GAAG,KAAK6C,aAAf;;AAEA,UAAI7C,CAAC,CAACzX,CAAF,IAAOyf,OAAP,IAAkBhI,CAAC,CAAC5N,GAAF,IAAS4V,OAA3B,IAAsChI,CAAC,CAAChV,CAAF,IAAOid,OAA7C,IAAwDjI,CAAC,CAAC1N,GAAF,IAAS2V,OAArE,EAA+E;AAC3E,aAAKS,IAAL,CAAU,KAAKrQ,WAAf,EAA4B,KAA5B;AACH;AACJ;;;gCAEYsK,G,EAAKO,C,EAAG;AAEjB,UAAI,CAACP,GAAG,CAACR,WAAT,EAAsB;AAClB,eAAO,KAAP;AACH;;AAED,UAAMiD,MAAM,GAAG,KAAK2C,qBAAL,EAAf;AAEA,UAAMC,OAAO,GAAG5f,WAAW,CAAC8a,CAAC,CAACmF,OAAF,GAAYjD,MAAM,CAACnc,IAApB,CAA3B;AACA,UAAMgf,OAAO,GAAG7f,WAAW,CAAC8a,CAAC,CAACoF,OAAF,GAAYlD,MAAM,CAACpZ,GAApB,CAA3B;AAEA,UAAMgU,CAAC,GAAG2C,GAAG,CAACL,iBAAd;;AAEA,UAAI0F,OAAO,IAAIhI,CAAC,CAACzX,CAAb,IAAkByf,OAAO,IAAIhI,CAAC,CAAC5N,GAA/B,IAAsC6V,OAAO,IAAIjI,CAAC,CAAChV,CAAnD,IAAwDid,OAAO,IAAIjI,CAAC,CAAC1N,GAAzE,EAA8E;AAC1E,YAAIqQ,GAAG,KAAK,IAAZ,EAAkB;AACd,eAAK+F,IAAL,CAAU,KAAKrQ,WAAf,EAA4B,IAA5B;AACH;;AACD,eAAO,IAAP;AACH;;AAED,aAAO,KAAP;AACH;;;+BAEWsK,G,EAAKO,C,EAAG;AAEhB,UAAIP,GAAG,CAACT,OAAJ,KAAgB,IAApB,EAA0B;AACtB;AACH;;AAED,UAAM2F,KAAK,GAAG,KAAKtH,EAAL,CAAQwH,qBAAR,EAAd;AAEA,UAAME,OAAO,GAAG7f,WAAW,CAAC8a,CAAC,CAACoF,OAAF,GAAYT,KAAK,CAAC7b,GAAnB,CAA3B;;AAEA,UAAIic,OAAO,GAAG,KAAKlD,IAAL,GAAY,KAAKE,WAA3B,IAA0CgD,OAAO,GAAG,KAAK3F,iBAAL,CAAuBtX,CAA/E,EAAkF;AAC9E;AACH;;AAED,UAAMuN,UAAU,GAAGnQ,WAAW,CAAC8a,CAAC,CAACmF,OAAF,GAAYR,KAAK,CAAC5e,IAAnB,CAA9B;AAEA,WAAK0f,cAAL,CAAoBhG,GAApB,EAAyBpK,UAAzB;AAEA,WAAKqQ,eAAL,CAAqB,gBAArB;AAEAjG,SAAG,CAACP,YAAJ,GAAmB,IAAnB;AACAO,SAAG,CAACR,WAAJ,GAAkB,IAAlB;AAEA,WAAKqC,MAAL;AACH;;;+BAEW7B,G,EAAKO,C,EAAG;AAEhB,UAAI,CAACP,GAAG,CAACP,YAAT,EAAuB;AACnB;AACH;;AAED,UAAMyF,KAAK,GAAG,KAAKtH,EAAL,CAAQwH,qBAAR,EAAd;AAEA,UAAME,OAAO,GAAG7f,WAAW,CAAC8a,CAAC,CAACoF,OAAF,GAAYT,KAAK,CAAC7b,GAAnB,CAA3B;;AAEA,UAAIic,OAAO,GAAG,KAAKlD,IAAL,GAAY,KAAKE,WAA3B,IAA0CgD,OAAO,IAAI,KAAK7Q,YAA9D,EAA4E;AACxE;AACH;;AAED,UAAMmB,UAAU,GAAGnQ,WAAW,CAAC8a,CAAC,CAACmF,OAAF,GAAYR,KAAK,CAAC5e,IAAnB,CAA9B;AAEA,WAAK0f,cAAL,CAAoBhG,GAApB,EAAyBpK,UAAzB;AAEA,WAAKiM,MAAL;AACH;;;mCAEe7B,G,EAAKpK,U,EAAY;AAE7B,UAAIpI,QAAQ,GAAGwS,GAAG,CAACnB,WAAJ,GAAkB,CAACjJ,UAAU,GAAG,KAAKiN,IAAnB,IAA2B,KAAKD,UAAhC,GAA6C5C,GAAG,CAACf,YAAlF;;AAEA,UAAIzR,QAAQ,GAAGwS,GAAG,CAACnB,WAAnB,EAAgC;AAC5BrR,gBAAQ,GAAGwS,GAAG,CAACnB,WAAf;AACH,OAFD,MAEO,IAAIrR,QAAQ,GAAGwS,GAAG,CAACjB,YAAnB,EAAiC;AACpCvR,gBAAQ,GAAGwS,GAAG,CAACjB,YAAf;AACH;;AAEDiB,SAAG,CAACN,cAAJ,GAAqBlS,QAArB;AACAwS,SAAG,CAACtK,WAAJ,GAAkByC,eAAe,CAAC6H,GAAG,CAACpa,CAAL,EAAQ4H,QAAR,CAAjC;AACH;;;qCAEiBwS,G,EAAK;AACnB,UAAI,CAACA,GAAG,CAACP,YAAT,EAAuB;AAAE;AAAQ;;AACjCO,SAAG,CAACP,YAAJ,GAAmB,KAAnB;AACA,UAAMyG,mBAAmB,GAAG,CAAClG,GAAG,CAACpa,CAAJ,CAAMoa,GAAG,CAACtK,WAAV,IAAyBsK,GAAG,CAACpa,CAAJ,CAAM,CAAN,CAA1B,IAAsCoa,GAAG,CAACrT,KAAtE;AACA,UAAM6U,QAAQ,GAAG,KAAKvB,SAAL,GAAiB,gBAAlC;AACA,WAAKwD,YAAL,CAAkBzD,GAAlB,EAAuB,gBAAvB,EAAyCkG,mBAAzC,EAA8D,KAAKnF,mBAAnE,EAAwFS,QAAxF;AACA,WAAK+B,OAAL;AACH;;;gCAEYhD,C,EAAG;AAAA;;AACZA,OAAC,CAAC4F,eAAF;AACA,WAAKC,SAAL,CAAe,KAAKpG,GAApB,EAAyBO,CAAzB;;AACA,UAAI,CAAC,KAAK8F,WAAL,CAAiB,KAAKrG,GAAtB,EAA2BO,CAA3B,CAAL,EAAoC;AAChC,aAAK+F,UAAL,CAAgB,KAAKtG,GAArB,EAA0BO,CAA1B;AACH;;AACD,WAAKF,WAAL,GAAmBkG,UAAU,CAAC,YAAM;AAChC,cAAI,CAACC,eAAL,CAAqBjG,CAArB;AACH,OAF4B,EAE1B,GAF0B,CAA7B;AAGH;;;gCAEYA,C,EAAG;AACZA,OAAC,CAAC4F,eAAF;AACA,WAAKM,OAAL,CAAa,KAAKzG,GAAlB,EAAuBO,CAAC,CAACmF,OAAzB;AACA,WAAKgB,UAAL,CAAgB,KAAK1G,GAArB,EAA0BO,CAA1B;AACAoG,kBAAY,CAAC,KAAKtG,WAAN,CAAZ;AACH;;;8BAEUE,C,EAAG;AACVA,OAAC,CAAC4F,eAAF;AACA,WAAKS,SAAL,CAAe,KAAK5G,GAApB;AACA,WAAK6G,gBAAL,CAAsB,KAAK7G,GAA3B;AACA,WAAK8G,aAAL,CAAmBvG,CAAnB;AACA,WAAKwG,YAAL,CAAkBxG,CAAlB;AACAoG,kBAAY,CAAC,KAAKtG,WAAN,CAAZ;AACH;;;iCAEaE,C,EAAG;AACbA,OAAC,CAAC4F,eAAF;AACA,WAAKS,SAAL,CAAe,KAAK5G,GAApB;AACA2G,kBAAY,CAAC,KAAKtG,WAAN,CAAZ;AACH;;;iCAEaE,C,EAAG;AAAA;;AACbA,OAAC,CAAC4F,eAAF;AACA,UAAMa,EAAE,GAAGzG,CAAC,CAAC0G,aAAF,CAAgB,CAAhB,CAAX;AACA,WAAKb,SAAL,CAAe,KAAKpG,GAApB,EAAyBgH,EAAzB;;AACA,UAAI,CAAC,KAAKX,WAAL,CAAiB,KAAKrG,GAAtB,EAA2BgH,EAA3B,CAAL,EAAqC;AACjC,aAAKV,UAAL,CAAgB,KAAKtG,GAArB,EAA0BgH,EAA1B;AACH;;AACD,WAAK3G,WAAL,GAAmBkG,UAAU,CAAC,YAAM;AAChC,cAAI,CAACC,eAAL,CAAqBQ,EAArB;AACH,OAF4B,EAE1B,GAF0B,CAA7B;AAGH;;;gCAEYzG,C,EAAG;AACZA,OAAC,CAAC4F,eAAF;AACA,UAAMa,EAAE,GAAGzG,CAAC,CAAC0G,aAAF,CAAgB,CAAhB,CAAX;AACA,WAAKR,OAAL,CAAa,KAAKzG,GAAlB,EAAuBgH,EAAE,CAACtB,OAA1B;AACA,WAAKgB,UAAL,CAAgB,KAAK1G,GAArB,EAA0BgH,EAA1B;AACAL,kBAAY,CAAC,KAAKtG,WAAN,CAAZ;AACH;;;+BAEWE,C,EAAG;AACXA,OAAC,CAAC4F,eAAF;AACA5F,OAAC,CAAC2G,cAAF;AACA,UAAMF,EAAE,GAAGzG,CAAC,CAAC4G,cAAF,CAAiB,CAAjB,CAAX;AACA,WAAKP,SAAL,CAAe,KAAK5G,GAApB;AACA,WAAK6G,gBAAL,CAAsB,KAAK7G,GAA3B;AACA,WAAK8G,aAAL,CAAmBE,EAAnB;AACA,WAAKD,YAAL,CAAkBC,EAAlB;AACAL,kBAAY,CAAC,KAAKtG,WAAN,CAAZ;AACH;;;8BAEU+G,M,EAAQ;AACf,UAAIA,MAAJ,EAAY;AACR,aAAK3D,YAAL,CAAkB,IAAlB,EAAwB,YAAxB,EAAsC,CAAtC,EAAyC,KAAK1C,mBAA9C;AACH,OAFD,MAEO;AACH,aAAK0C,YAAL,CAAkB,IAAlB,EAAwB,YAAxB,EAAsC,CAAtC,EAAyC,KAAK1C,mBAA9C;AACH;;AACD,WAAKwC,OAAL;AACH;;;4CAEwB;AACrB,aAAO,KAAKvF,QAAL,CAAcoH,qBAAd,EAAP;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/zBL;AACA;;IAkCqBiC,c;;;;;AAEjB,qBAAatO,IAAb,EAAmBwE,OAAnB,EAA4B;AAAA;;AAAA;;AACxB,mFAAMxE,IAAN,EAAYwE,OAAZ;AAEA,UAAK1X,KAAL,GAAawT,QAAQ,CAACN,IAAI,CAACyF,QAAN,CAArB;AAEA,UAAKrK,gBAAL,GAAwB,MAAK+K,aAAL,GAAqB,MAAKC,WAAL,GACzC3G,OAAO,CAAC,MAAK5S,CAAN,EAAS,MAAKC,KAAd,EAAqB,MAAKC,UAA1B,EAAsC,MAAK+Y,WAA3C,EAAwD,MAAKE,YAA7D,CADX;AAEA,UAAKtY,SAAL,GAAiB+R,OAAO,CAAC,MAAK5S,CAAN,EAAS,MAAKC,KAAd,EAAqB,MAAKC,UAA1B,EAAsC,CAAtC,EAAyC,CAAzC,CAAxB;AAEA,UAAKsO,gBAAL,GAAwB,MAAKgL,aAAL,GAAqB,MAAKC,WAAL,GACzC5G,OAAO,CAAC,MAAK7S,CAAN,EAAS,MAAKC,KAAd,EAAqB,MAAKC,UAA1B,EAAsC,MAAK+Y,WAA3C,EAAwD,MAAKE,YAA7D,CADX;AAEA,UAAKrY,SAAL,GAAiB+R,OAAO,CAAC,MAAK7S,CAAN,EAAS,MAAKC,KAAd,EAAqB,MAAKC,UAA1B,EAAsC,CAAtC,EAAyC,CAAzC,CAAxB;AAXwB;AAY3B;;;;8BAEUka,G,EAAKrK,M,EAAQqO,e,EAAiBC,gB,EAAkBrd,S,EAAW;AAElElB,eAAS,CAAC,KAAKC,GAAN,EAAWqa,GAAG,CAACpa,CAAf,EAAkBoa,GAAG,CAACna,KAAtB,EAA6B,KAAKC,UAAlC,EAA8C,KAAKC,UAAnD,EAA+D,KAAKC,UAApE,EACL,KAAK4c,UADA,EACY,KAAKN,WAAL,GAAmB,KAAKF,IAAxB,GAA+BpC,GAAG,CAACG,MAAJ,CAAW9W,GADtD,EAC2D,KAAKwZ,IADhE,EACsE,KAAKpO,YAAL,GAAoBuL,GAAG,CAACG,MAAJ,CAAW9W,GADrG,EAC0G2W,GAAG,CAACG,MAAJ,CAAW7W,MADrH,EAEL0W,GAAG,CAACnB,WAFC,EAEYmB,GAAG,CAACjB,YAFhB,EAE8BiB,GAAG,CAACrT,KAAJ,GAAYqT,GAAG,CAACf,YAF9C,EAE4De,GAAG,CAAC7L,gBAFhE,EAEkF6L,GAAG,CAAC5L,gBAFtF,EAEwG,KAAKzN,SAF7G,EAEwHC,SAFxH,EAEmI+O,MAFnI,CAAT;AAGH;;;gCAEYqK,G,EAAKrK,M,EAAQqO,e,EAAiBC,gB,EAAkBrd,S,EAAW;AAEpElB,eAAS,CAAC,KAAKC,GAAN,EAAWqa,GAAG,CAACpa,CAAf,EAAkBoa,GAAG,CAACna,KAAtB,EAA6B,KAAKC,UAAlC,EAA8C,KAAKC,UAAnD,EAA+D,KAAKC,UAApE,EACL,KAAK4c,UADA,EACY,KAAKT,aADjB,EACgC,KAAKU,IADrC,EAC2C,KAAKZ,cADhD,EACgE,CADhE,EAEL,CAFK,EAEF,CAFE,EAECjC,GAAG,CAACrT,KAFL,EAEYqT,GAAG,CAACvZ,SAFhB,EAE2BuZ,GAAG,CAACtZ,SAF/B,EAE0C,KAAKwc,gBAF/C,EAEiEtc,SAFjE,EAE4E+O,MAF5E,CAAT;AAGH;;;+BAEWqK,G,EAAKrK,M,EAAQqO,e,EAAiBC,gB,EAAkBrd,S,EAAW;AAEnEwK,gBAAU,CAAC,KAAKzL,GAAN,EAAW,KAAKkd,IAAhB,EAAsB,KAAKpO,YAAL,GAAoB,KAAK2N,IAA/C,EAAqD,KAAK/Q,WAA1D,EAAuE,KAAKiR,WAA5E,EAAyF,KAAKM,UAA9F,EACN5C,GAAG,CAACnB,WADE,EACWmB,GAAG,CAACjB,YADf,EAC6BiB,GAAG,CAACf,YADjC,EAC+Ce,GAAG,CAACN,cADnD,EACmE,KAAKlO,cADxE,EACwF5K,SADxF,EACmG,KAAKkE,UADxG,CAAV;AAFmE;AAAA;AAAA;;AAAA;AAKnE,6BAAiBkV,GAAG,CAACna,KAArB,8HAA4B;AAAA,cAAnBiB,IAAmB;AACxBmN,wBAAc,CAAC,KAAKtO,GAAN,EAAWqa,GAAG,CAACpa,CAAf,EAAkBkB,IAAlB,EAAwB,KAAK8K,UAA7B,EAAyC,KAAK9L,UAA9C,EAA0D,KAAKC,UAA/D,EAA2E,KAAKC,UAAhF,EAA4F,KAAKW,SAAjG,EACVqZ,GAAG,CAACN,cADM,EACUM,GAAG,CAACtK,WADd,EAC2B,KAAKmN,IADhC,EACsC,KAAKpO,YAD3C,EACyDuL,GAAG,CAACnB,WAD7D,EAC0EmB,GAAG,CAACjB,YAD9E,EAC4FiB,GAAG,CAACf,YADhG,EAEV,KAAK2D,UAFK,EAEO,KAAKN,WAAL,GAAmB,KAAKF,IAF/B,EAEqCpC,GAAG,CAACrT,KAFzC,EAGVqT,GAAG,CAACG,MAAJ,CAAW9W,GAHD,EAGM2W,GAAG,CAACG,MAAJ,CAAW7W,MAHjB,EAGyB0W,GAAG,CAAC7L,gBAH7B,EAG+C6L,GAAG,CAAC5L,gBAHnD,EAIV,KAAKjC,kBAJK,EAIe,KAAKrH,UAJpB,EAIgClE,SAJhC,CAAd;AAKH;AAXkE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAanE8K,qBAAe,CAAC,KAAK/L,GAAN,EAAWqa,GAAG,CAACpa,CAAf,EAAkB,CAACoa,GAAG,CAACna,KAAL,CAAlB,EAA+B,KAAK+L,UAApC,EAAgD,KAAK9L,UAArD,EAAiE,KAAKC,UAAtE,EAAkF,KAAKC,UAAvF,EAAmG,KAAKW,SAAxG,EACXqZ,GAAG,CAACN,cADO,EACSM,GAAG,CAACtK,WADb,EAC0B,KAAKmN,IAD/B,EACqC,KAAKpO,YAAL,GAAoB,KAAK2N,IAD9D,EACoEpC,GAAG,CAACnB,WADxE,EACqFmB,GAAG,CAACjB,YADzF,EACuGiB,GAAG,CAACf,YAD3G,EAEX,KAAK2D,UAFM,EAEM,KAAKN,WAAL,GAAmB,KAAKF,IAF9B,EAEoCpC,GAAG,CAACrT,KAFxC,EAGX,CAAC,CAACqT,GAAG,CAACG,MAAJ,CAAW9W,GAAZ,EAAiB2W,GAAG,CAACG,MAAJ,CAAW7W,MAA5B,EAAoC0W,GAAG,CAAC7L,gBAAxC,EAA0D6L,GAAG,CAAC5L,gBAA9D,CAAD,CAHW,EAIX,KAAKgP,cAJM,EAIU,KAAKrR,QAJf,EAIyB,KAAKC,cAJ9B,EAI8C,KAAKC,oBAJnD,EAIyE,KAAKC,kBAJ9E,EAIkG,KAAKC,kBAJvG,EAKXvL,SALW,EAKA,KAAKkE,UALL,EAKiBkV,GAAG,CAACL,iBALrB,EAKwC/Y,SALxC,EAKmDqd,gBALnD,EAKqEjE,GAAG,KAAK,IAL7E,CAAf;AAMH;;;yBAEKA,G,EAAK;AACP,0EAAWA,GAAX;;AACA,WAAKsH,UAAL,CAAgBtH,GAAhB;AACA,WAAKtX,cAAL,CAAoBsX,GAApB;AACH;;;mCAEcA,G,EAAK;AAEhB,UAAMsC,WAAW,GAAG,KAAKA,WAAL,GAAmB,KAAKF,IAA5C;AACA,UAAMhW,SAAS,GAAGkW,WAAW,GAAG,CAAhC;;AAEA5Z,0BAAc,CAACsX,GAAG,CAACb,WAAL,EAAkBa,GAAG,CAACX,WAAtB,EACViD,WAAW,GAAG,KAAKF,IADT,EACe,KAAKA,IADpB,EAC0BE,WAAW,GAAGlW,SADxC,EACmDA,SADnD,EAC8DkW,WAD9D,EAC2EtC,GAAG,CAACG,MAD/E,CAAd;AAEH;;;+BAEWH,G,EAAK;AAEb,UAAMuH,gBAAgB,GAAG/O,OAAO,CAACwH,GAAG,CAACpa,CAAL,EAAQoa,GAAG,CAACna,KAAZ,EAAmBma,GAAG,CAACla,UAAvB,EAAmCka,GAAG,CAACnB,WAAvC,EAAoDmB,GAAG,CAACjB,YAAxD,CAAhC;;AAEA,UAAIwI,gBAAgB,KAAKvH,GAAG,CAACb,WAA7B,EAA0C;AACtC,YAAMqC,QAAQ,GAAG,KAAKvB,SAAL,GAAiB,kBAAlC;AACA,aAAKwD,YAAL,CAAkBzD,GAAlB,EAAuB,kBAAvB,EAA2CuH,gBAA3C,EAA6D,KAAKxG,mBAAlE,EAAuFS,QAAvF;AACA,aAAK+B,OAAL;AACH;;AAED,UAAMiE,gBAAgB,GAAG/O,OAAO,CAACuH,GAAG,CAACpa,CAAL,EAAQoa,GAAG,CAACna,KAAZ,EAAmBma,GAAG,CAACla,UAAvB,EAAmCka,GAAG,CAACnB,WAAvC,EAAoDmB,GAAG,CAACjB,YAAxD,CAAhC;;AAEA,UAAIyI,gBAAgB,KAAKxH,GAAG,CAACX,WAA7B,EAA0C;AACtC,YAAMmC,SAAQ,GAAG,KAAKvB,SAAL,GAAiB,kBAAlC;;AACA,aAAKwD,YAAL,CAAkBzD,GAAlB,EAAuB,kBAAvB,EAA2CwH,gBAA3C,EAA6D,KAAKzG,mBAAlE,EAAuFS,SAAvF;AACA,aAAK+B,OAAL;AACH;;AAED,UAAMkE,OAAO,GAAG,KAAKjK,UAAL,CAAgB,KAAKyC,SAAL,GAAiB,kBAAjC,CAAhB;;AAEA,UAAIwH,OAAJ,EAAa;AACTzH,WAAG,CAACd,aAAJ,GAAoBuI,OAAO,CAAC5Y,IAA5B;AACAmR,WAAG,CAACb,WAAJ,GAAkBsI,OAAO,CAAC3Y,EAA1B;AACH;;AAED,UAAM4Y,OAAO,GAAG,KAAKlK,UAAL,CAAgB,KAAKyC,SAAL,GAAiB,kBAAjC,CAAhB;;AAEA,UAAIyH,OAAJ,EAAa;AACT1H,WAAG,CAACZ,aAAJ,GAAoBsI,OAAO,CAAC7Y,IAA5B;AACAmR,WAAG,CAACX,WAAJ,GAAkBqI,OAAO,CAAC5Y,EAA1B;AACH;AACJ;;;+BAEW4U,K,EAAO;AAEf,UAAMnF,OAAO,6EAAoBmF,KAApB,CAAb;;AAEA,UAAMzK,OAAO,GAAG,KAAK0O,kBAAL,CAAwBpJ,OAAO,CAACoG,QAAhC,EAA0CpG,OAAO,CAACqG,OAAlD,CAAhB;AAEA,UAAM7L,IAAI,GAAG;AAAEE,eAAO,EAAPA,OAAF;AAAWE,aAAK,EAAE,KAAKoF,OAAL,CAAa,KAAK3Y,CAAL,CAAO,CAAP,CAAb,EAAwBuT;AAA1C,OAAb;AACA,UAAMvT,CAAC,GAAG4T,IAAI,CAACT,IAAD,CAAd;AACA,UAAMlT,KAAK,GAAGwT,QAAQ,CAACN,IAAD,CAAtB;AACA,UAAM6O,cAAc,GAAGpP,OAAO,CAAC5S,CAAD,EAAIC,KAAJ,EAAW,KAAKC,UAAhB,EAA4ByY,OAAO,CAACM,WAApC,EAAiDN,OAAO,CAACQ,YAAzD,CAA9B;AACA,UAAM8I,cAAc,GAAGpP,OAAO,CAAC7S,CAAD,EAAIC,KAAJ,EAAW,KAAKC,UAAhB,EAA4ByY,OAAO,CAACM,WAApC,EAAiDN,OAAO,CAACQ,YAAzD,CAA9B;AAEA,UAAMtY,SAAS,GAAG+R,OAAO,CAAC5S,CAAD,EAAIC,KAAJ,EAAW,KAAKC,UAAhB,EAA4B,CAA5B,EAA+B,CAA/B,CAAzB;AACA,UAAMY,SAAS,GAAG+R,OAAO,CAAC7S,CAAD,EAAIC,KAAJ,EAAW,KAAKC,UAAhB,EAA4B,CAA5B,EAA+B,CAA/B,CAAzB;AAEA,UAAIoZ,aAAJ,EAAmBC,WAAnB,EAAgChL,gBAAhC,EACIiL,aADJ,EACmBC,WADnB,EACgCjL,gBADhC;AAGA8K,mBAAa,GAAGC,WAAW,GAAGhL,gBAAgB,GAAGyT,cAAjD;AACAxI,mBAAa,GAAGC,WAAW,GAAGjL,gBAAgB,GAAGyT,cAAjD;AAEA,UAAMlb,KAAK,GAAG/G,CAAC,CAACA,CAAC,CAACmC,MAAF,GAAW,CAAZ,CAAD,GAAkBnC,CAAC,CAAC,CAAD,CAAjC;AAEA2Y,aAAO,CAAC3Y,CAAR,GAAYA,CAAZ;AACA2Y,aAAO,CAAC5R,KAAR,GAAgBA,KAAhB;AACA4R,aAAO,CAAC1Y,KAAR,GAAgBA,KAAhB;AACA0Y,aAAO,CAAC9X,SAAR,GAAoBA,SAApB;AACA8X,aAAO,CAAC7X,SAAR,GAAoBA,SAApB;AACA6X,aAAO,CAACW,aAAR,GAAwBA,aAAxB;AACAX,aAAO,CAACY,WAAR,GAAsBA,WAAtB;AACAZ,aAAO,CAACpK,gBAAR,GAA2BA,gBAA3B;AACAoK,aAAO,CAACa,aAAR,GAAwBA,aAAxB;AACAb,aAAO,CAACc,WAAR,GAAsBA,WAAtB;AACAd,aAAO,CAACnK,gBAAR,GAA2BA,gBAA3B;AAEA,aAAOmK,OAAP;AACH;;;;EAvIkCuJ,+B;;;;;;;;;;;;;;;;;;;;;;;;;;ACnCvC;AACA;AA0BA,IAAM/G,mBAAmB,GAAG,GAA5B;;IAEqBgH,yB;;;;;AAEjB,uBAAahP,IAAb,EAAmBwE,OAAnB,EAA4B;AAAA;;AAAA;;AAExB,QAAMyK,MAAM,GAAGjP,IAAI,CAACyF,QAAL,CAAcvF,OAAd,CAAsBgP,MAAtB,CAA6B,CAA7B,EAAgC,CAAhC,CAAf;AAEA,QAAMC,QAAQ,GAAG,EAAjB;;AAEA,SAAK,IAAI9a,SAAT,IAAsB2L,IAAI,CAACwF,OAA3B,EAAoC;AAChC2J,cAAQ,CAAC9a,SAAD,CAAR,GAAsB2L,IAAI,CAACwF,OAAL,CAAanR,SAAb,EAAwB6L,OAAxB,CAAgCgP,MAAhC,CAAuC,CAAvC,EAA0C,CAA1C,EAA6C,CAA7C,CAAtB;AACH;;AAED,+GAAMlP,IAAN,EAAYwE,OAAZ;AAEA,UAAKyK,MAAL,GAAcA,MAAd;AACA,UAAKE,QAAL,GAAgBA,QAAhB;AAEA,UAAKC,iBAAL,GAAyB,MAAKC,cAAL,GAAsB,MAAKC,YAAL,GAC3C7P,OAAO,CAAC,MAAK5S,CAAN,EAASoiB,MAAT,EAAiB,MAAKliB,UAAtB,EAAkC,MAAK+Y,WAAvC,EAAoD,MAAKE,YAAzD,CADX;AAEA,UAAKuJ,UAAL,GAAkB9P,OAAO,CAAC,MAAK5S,CAAN,EAASoiB,MAAT,EAAiB,MAAKliB,UAAtB,EAAkC,CAAlC,EAAqC,CAArC,CAAzB;AAEA,UAAKyiB,iBAAL,GAAyB,MAAKC,cAAL,GAAsB,MAAKC,YAAL,GAC3ChQ,OAAO,CAAC,MAAK7S,CAAN,EAASoiB,MAAT,EAAiB,MAAKliB,UAAtB,EAAkC,MAAK+Y,WAAvC,EAAoD,MAAKE,YAAzD,CADX;AAEA,UAAK2J,UAAL,GAAkBjQ,OAAO,CAAC,MAAK7S,CAAN,EAASoiB,MAAT,EAAiB,MAAKliB,UAAtB,EAAkC,CAAlC,EAAqC,CAArC,CAAzB;AAEA,UAAK6iB,OAAL,GAAe,EAAf;AAEA,UAAKC,aAAL,GAAqBtO,kBAAkB,CAACvB,IAAI,CAACyF,QAAL,CAAcG,MAAd,CAAqB,IAArB,CAAD,EAA6B,CAA7B,EAAgC5F,IAAI,CAACyF,QAAL,CAAcG,MAAd,CAAqB,IAArB,CAAhC,EAA4D,CAA5D,CAAvC;AACA,UAAKkK,aAAL,GAAqBvO,kBAAkB,CAACvB,IAAI,CAACyF,QAAL,CAAcG,MAAd,CAAqB,IAArB,CAAD,EAA6B,CAA7B,EAAgC5F,IAAI,CAACyF,QAAL,CAAcG,MAAd,CAAqB,IAArB,CAAhC,EAA4D,CAA5D,CAAvC;AA1BwB;AA2B3B;;;;6BAESqB,G,EAAKrK,M,EAAQqO,e,EAAiBC,gB,EAAkBrd,S,EAAW;AAEjEmD,oBAAQ,CAAC,KAAKpE,GAAN,EAAW,KAAKkd,IAAhB,EAAsB,KAAKpO,YAA3B,EAAyC,KAAKmO,UAA9C,EAA0D,KAAKN,WAAL,GAAmB,KAAKF,IAAlF,EAAwF,CAAxF,EACJpC,GAAG,CAACd,aADA,EACec,GAAG,CAACb,WADnB,EACgCa,GAAG,CAAC7L,gBADpC,EAEJ6L,GAAG,CAACZ,aAFA,EAEeY,GAAG,CAACX,WAFnB,EAEgCW,GAAG,CAAC5L,gBAFpC,EAGJ4L,GAAG,CAACG,MAAJ,CAAWhX,GAHP,EAGY6W,GAAG,CAACG,MAAJ,CAAW/W,GAHvB,EAG4B4W,GAAG,CAACG,MAAJ,CAAW9W,GAHvC,EAG4C2W,GAAG,CAACG,MAAJ,CAAW7W,MAHvD,EAIJ,KAAK0X,YAJD,EAIe,KAAK4H,aAJpB,EAImC,KAJnC,EAI0C,KAAK7iB,UAAL,CAAgB,IAAhB,CAJ1C,EAIiE,KAAKod,aAJtE,EAIqF,KAAKtY,QAJ1F,EAIoG,KAAKC,UAJzG,EAIqHlE,SAJrH,CAAR;;AAMAmD,oBAAQ,CAAC,KAAKpE,GAAN,EAAW,KAAKkd,IAAhB,EAAsB,KAAKpO,YAA3B,EAAyC,KAAKmO,UAA9C,EAA0D,KAAKN,WAAL,GAAmB,KAAKF,IAAlF,EAAwF,CAAxF,EACJpC,GAAG,CAACoI,cADA,EACgBpI,GAAG,CAACqI,YADpB,EACkCrI,GAAG,CAACmI,iBADtC,EAEJnI,GAAG,CAACwI,cAFA,EAEgBxI,GAAG,CAACyI,YAFpB,EAEkCzI,GAAG,CAACuI,iBAFtC,EAGJvI,GAAG,CAAC2I,OAAJ,CAAYxf,GAHR,EAGa6W,GAAG,CAAC2I,OAAJ,CAAYvf,GAHzB,EAG8B4W,GAAG,CAAC2I,OAAJ,CAAYtf,GAH1C,EAG+C2W,GAAG,CAAC2I,OAAJ,CAAYrf,MAH3D,EAIJ,KAAK0X,YAJD,EAIe,KAAK6H,aAJpB,EAImC,IAJnC,EAIyC,KAAK9iB,UAAL,CAAgB,IAAhB,CAJzC,EAIgE,KAAKod,aAJrE,EAIoF,KAAKtY,QAJzF,EAImG,KAAKC,UAJxG,EAIoHlE,SAJpH,CAAR;AAKH;;;8BAEUoZ,G,EAAKrK,M,EAAQqO,e,EAAiBC,gB,EAAkBrd,S,EAAW;AAElElB,eAAS,CAAC,KAAKC,GAAN,EAAWqa,GAAG,CAACpa,CAAf,EAAkBoa,GAAG,CAACgI,MAAtB,EAA8B,KAAKliB,UAAnC,EAA+C,KAAKC,UAApD,EAAgE,KAAKC,UAArE,EACL,KAAK4c,UADA,EACY,KAAKN,WAAL,GAAmB,KAAKF,IAAxB,GAA+BpC,GAAG,CAAC2I,OAAJ,CAAYtf,GADvD,EAC4D,KAAKwZ,IADjE,EACuE,KAAKpO,YAAL,GAAoBuL,GAAG,CAAC2I,OAAJ,CAAYtf,GADvG,EAC4G2W,GAAG,CAAC2I,OAAJ,CAAYrf,MADxH,EAEL0W,GAAG,CAACnB,WAFC,EAEYmB,GAAG,CAACjB,YAFhB,EAE8BiB,GAAG,CAACrT,KAAJ,GAAYqT,GAAG,CAACf,YAF9C,EAGLe,GAAG,CAACmI,iBAHC,EAGkBnI,GAAG,CAACuI,iBAHtB,EAGyC,KAAK5hB,SAH9C,EAGyDC,SAHzD,EAGoE+O,MAHpE,CAAT;AAKAjQ,eAAS,CAAC,KAAKC,GAAN,EAAWqa,GAAG,CAACpa,CAAf,EAAkBoa,GAAG,CAACna,KAAtB,EAA6B,KAAKC,UAAlC,EAA8C,KAAKC,UAAnD,EAA+D,KAAKC,UAApE,EACL,KAAK4c,UADA,EACY,KAAKN,WAAL,GAAmB,KAAKF,IAAxB,GAA+BpC,GAAG,CAACG,MAAJ,CAAW9W,GADtD,EAC2D,KAAKwZ,IADhE,EACsE,KAAKpO,YAAL,GAAoBuL,GAAG,CAACG,MAAJ,CAAW9W,GADrG,EAC0G2W,GAAG,CAACG,MAAJ,CAAW7W,MADrH,EAEL0W,GAAG,CAACnB,WAFC,EAEYmB,GAAG,CAACjB,YAFhB,EAE8BiB,GAAG,CAACrT,KAAJ,GAAYqT,GAAG,CAACf,YAF9C,EAE4De,GAAG,CAAC7L,gBAFhE,EAEkF6L,GAAG,CAAC5L,gBAFtF,EAEwG,KAAKzN,SAF7G,EAEwHC,SAFxH,EAEmI+O,MAFnI,CAAT;AAGH;;;gCAEYqK,G,EAAKrK,M,EAAQqO,e,EAAiBC,gB,EAAkBrd,S,EAAW;AAEpElB,eAAS,CAAC,KAAKC,GAAN,EAAWqa,GAAG,CAACpa,CAAf,EAAkBoa,GAAG,CAACgI,MAAtB,EAA8B,KAAKliB,UAAnC,EAA+C,KAAKC,UAApD,EAAgE,KAAKC,UAArE,EACL,KAAK4c,UADA,EACY,KAAKT,aADjB,EACgC,KAAKU,IADrC,EAC2C,KAAKZ,cADhD,EACgE,CADhE,EAEL,CAFK,EAEF,CAFE,EAECjC,GAAG,CAACrT,KAFL,EAEYqT,GAAG,CAACsI,UAFhB,EAE4BtI,GAAG,CAAC0I,UAFhC,EAE4C,KAAKxF,gBAFjD,EAEmEtc,SAFnE,EAE8E+O,MAF9E,CAAT;AAIAjQ,eAAS,CAAC,KAAKC,GAAN,EAAWqa,GAAG,CAACpa,CAAf,EAAkBoa,GAAG,CAACna,KAAtB,EAA6B,KAAKC,UAAlC,EAA8C,KAAKC,UAAnD,EAA+D,KAAKC,UAApE,EACL,KAAK4c,UADA,EACY,KAAKT,aADjB,EACgC,KAAKU,IADrC,EAC2C,KAAKZ,cADhD,EACgE,CADhE,EAEL,CAFK,EAEF,CAFE,EAECjC,GAAG,CAACrT,KAFL,EAEYqT,GAAG,CAACvZ,SAFhB,EAE2BuZ,GAAG,CAACtZ,SAF/B,EAE0C,KAAKwc,gBAF/C,EAEiEtc,SAFjE,EAE4E+O,MAF5E,CAAT;AAGH;;;+BAEWqK,G,EAAKrK,M,EAAQqO,e,EAAiBC,gB,EAAkBrd,S,EAAW;AAEnEwK,gBAAU,CAAC,KAAKzL,GAAN,EAAW,KAAKkd,IAAhB,EAAsB,KAAKpO,YAAL,GAAoB,KAAK2N,IAA/C,EAAqD,KAAK/Q,WAA1D,EAAuE,KAAKiR,WAA5E,EAAyF,KAAKM,UAA9F,EACN5C,GAAG,CAACnB,WADE,EACWmB,GAAG,CAACjB,YADf,EAC6BiB,GAAG,CAACf,YADjC,EAC+Ce,GAAG,CAACN,cADnD,EACmE,KAAKlO,cADxE,EACwF5K,SADxF,EACmG,KAAKkE,UADxG,CAAV;AAFmE;AAAA;AAAA;;AAAA;AAKnE,6BAAiBkV,GAAG,CAACna,KAArB,8HAA4B;AAAA,cAAnBiB,IAAmB;AACxBmN,wBAAc,CAAC,KAAKtO,GAAN,EAAWqa,GAAG,CAACpa,CAAf,EAAkBkB,IAAlB,EAAwB,KAAK8K,UAA7B,EAAyC,KAAK9L,UAA9C,EAA0D,KAAKC,UAA/D,EAA2E,KAAKC,UAAhF,EAA4F,KAAKW,SAAjG,EACVqZ,GAAG,CAACN,cADM,EACUM,GAAG,CAACtK,WADd,EAC2B,KAAKmN,IADhC,EACsC,KAAKpO,YAD3C,EACyDuL,GAAG,CAACnB,WAD7D,EAC0EmB,GAAG,CAACjB,YAD9E,EAC4FiB,GAAG,CAACf,YADhG,EAEV,KAAK2D,UAFK,EAEO,KAAKN,WAAL,GAAmB,KAAKF,IAF/B,EAEqCpC,GAAG,CAACrT,KAFzC,EAGVqT,GAAG,CAACG,MAAJ,CAAW9W,GAHD,EAGM2W,GAAG,CAACG,MAAJ,CAAW7W,MAHjB,EAGyB0W,GAAG,CAAC7L,gBAH7B,EAG+C6L,GAAG,CAAC5L,gBAHnD,EAIV,KAAKjC,kBAJK,EAIe,KAAKrH,UAJpB,EAIgClE,SAJhC,CAAd;AAKH;AAXkE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAanE,8BAAiBoZ,GAAG,CAACgI,MAArB,mIAA6B;AAAA,cAApBlhB,KAAoB;AACzBmN,wBAAc,CAAC,KAAKtO,GAAN,EAAWqa,GAAG,CAACpa,CAAf,EAAkBkB,KAAlB,EAAwB,KAAK8K,UAA7B,EAAyC,KAAK9L,UAA9C,EAA0D,KAAKC,UAA/D,EAA2E,KAAKC,UAAhF,EAA4F,KAAKW,SAAjG,EACVqZ,GAAG,CAACN,cADM,EACUM,GAAG,CAACtK,WADd,EAC2B,KAAKmN,IADhC,EACsC,KAAKpO,YAD3C,EACyDuL,GAAG,CAACnB,WAD7D,EAC0EmB,GAAG,CAACjB,YAD9E,EAC4FiB,GAAG,CAACf,YADhG,EAEV,KAAK2D,UAFK,EAEO,KAAKN,WAAL,GAAmB,KAAKF,IAF/B,EAEqCpC,GAAG,CAACrT,KAFzC,EAGVqT,GAAG,CAAC2I,OAAJ,CAAYtf,GAHF,EAGO2W,GAAG,CAAC2I,OAAJ,CAAYrf,MAHnB,EAG2B0W,GAAG,CAACmI,iBAH/B,EAGkDnI,GAAG,CAACuI,iBAHtD,EAIV,KAAKpW,kBAJK,EAIe,KAAKrH,UAJpB,EAIgClE,SAJhC,CAAd;AAKH;AAnBkE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAqBnE8K,qBAAe,CAAC,KAAK/L,GAAN,EAAWqa,GAAG,CAACpa,CAAf,EAAkB,CAACoa,GAAG,CAACna,KAAL,EAAYma,GAAG,CAACgI,MAAhB,CAAlB,EAA2C,KAAKpW,UAAhD,EAA4D,KAAK9L,UAAjE,EAA6E,KAAKC,UAAlF,EAA8F,KAAKC,UAAnG,EAA+G,KAAKW,SAApH,EACXqZ,GAAG,CAACN,cADO,EACSM,GAAG,CAACtK,WADb,EAC0B,KAAKmN,IAD/B,EACqC,KAAKpO,YAAL,GAAoB,KAAK2N,IAD9D,EACoEpC,GAAG,CAACnB,WADxE,EACqFmB,GAAG,CAACjB,YADzF,EACuGiB,GAAG,CAACf,YAD3G,EAEX,KAAK2D,UAFM,EAEM,KAAKN,WAAL,GAAmB,KAAKF,IAF9B,EAEoCpC,GAAG,CAACrT,KAFxC,EAGX,CACI,CAACqT,GAAG,CAACG,MAAJ,CAAW9W,GAAZ,EAAiB2W,GAAG,CAACG,MAAJ,CAAW7W,MAA5B,EAAoC0W,GAAG,CAAC7L,gBAAxC,EAA0D6L,GAAG,CAAC5L,gBAA9D,CADJ,EAEI,CAAC4L,GAAG,CAAC2I,OAAJ,CAAYtf,GAAb,EAAkB2W,GAAG,CAAC2I,OAAJ,CAAYrf,MAA9B,EAAsC0W,GAAG,CAACmI,iBAA1C,EAA6DnI,GAAG,CAACuI,iBAAjE,CAFJ,CAHW,EAOX,KAAKnF,cAPM,EAOU,KAAKrR,QAPf,EAOyB,KAAKC,cAP9B,EAO8C,KAAKC,oBAPnD,EAOyE,KAAKC,kBAP9E,EAOkG,KAAKC,kBAPvG,EAQXvL,SARW,EAQA,KAAKkE,UARL,EAQiBkV,GAAG,CAACL,iBARrB,EAQwC/Y,SARxC,EAQmDqd,gBARnD,EAQqEjE,GAAG,KAAK,IAR7E,CAAf;AASH;;;mCAEeA,G,EAAK;AAEjB,gHAAqBA,GAArB;;AAEA,UAAMsC,WAAW,GAAG,KAAKA,WAAL,GAAmB,KAAKF,IAA5C;AACA,UAAMhW,SAAS,GAAGkW,WAAW,GAAG,CAAhC;;AAEA5Z,0BAAc,CAACsX,GAAG,CAACqI,YAAL,EAAmBrI,GAAG,CAACyI,YAAvB,EACVnG,WAAW,GAAG,KAAKF,IADT,EACe,KAAKA,IADpB,EAC0BE,WAAW,GAAGlW,SADxC,EACmDA,SADnD,EAC8DkW,WAD9D,EAC2EtC,GAAG,CAAC2I,OAD/E,CAAd;AAEH;;;+BAEW3I,G,EAAK;AAEb,4GAAiBA,GAAjB;;AAEA,UAAMuH,gBAAgB,GAAG/O,OAAO,CAACwH,GAAG,CAACpa,CAAL,EAAQoa,GAAG,CAACgI,MAAZ,EAAoBhI,GAAG,CAACla,UAAxB,EAAoCka,GAAG,CAACnB,WAAxC,EAAqDmB,GAAG,CAACjB,YAAzD,CAAhC;;AAEA,UAAIwI,gBAAgB,KAAKvH,GAAG,CAACqI,YAA7B,EAA2C;AACvC,YAAM7G,QAAQ,GAAG,KAAKvB,SAAL,GAAiB,mBAAlC;AACA,aAAKwD,YAAL,CAAkBzD,GAAlB,EAAuB,mBAAvB,EAA4CuH,gBAA5C,EAA8DxG,mBAA9D,EAAmFS,QAAnF;AACA,aAAK+B,OAAL;AACH;;AAED,UAAMiE,gBAAgB,GAAG/O,OAAO,CAACuH,GAAG,CAACpa,CAAL,EAAQoa,GAAG,CAACgI,MAAZ,EAAoBhI,GAAG,CAACla,UAAxB,EAAoCka,GAAG,CAACnB,WAAxC,EAAqDmB,GAAG,CAACjB,YAAzD,CAAhC;;AAEA,UAAIyI,gBAAgB,KAAKxH,GAAG,CAACyI,YAA7B,EAA2C;AACvC,YAAMjH,SAAQ,GAAG,KAAKvB,SAAL,GAAiB,mBAAlC;;AACA,aAAKwD,YAAL,CAAkBzD,GAAlB,EAAuB,mBAAvB,EAA4CwH,gBAA5C,EAA8DzG,mBAA9D,EAAmFS,SAAnF;AACA,aAAK+B,OAAL;AACH;;AAED,UAAMkE,OAAO,GAAG,KAAKjK,UAAL,CAAgB,KAAKyC,SAAL,GAAiB,mBAAjC,CAAhB;;AAEA,UAAIwH,OAAJ,EAAa;AACTzH,WAAG,CAACoI,cAAJ,GAAqBX,OAAO,CAAC5Y,IAA7B;AACAmR,WAAG,CAACqI,YAAJ,GAAmBZ,OAAO,CAAC3Y,EAA3B;AACH;;AAED,UAAM4Y,OAAO,GAAG,KAAKlK,UAAL,CAAgB,KAAKyC,SAAL,GAAiB,mBAAjC,CAAhB;;AAEA,UAAIyH,OAAJ,EAAa;AACT1H,WAAG,CAACwI,cAAJ,GAAqBd,OAAO,CAAC7Y,IAA7B;AACAmR,WAAG,CAACyI,YAAJ,GAAmBf,OAAO,CAAC5Y,EAA3B;AACH;AACJ;;;+BAEW4U,K,EAAO;AAEf,UAAMnF,OAAO,GAAG,sGAAiBmF,KAApB,CAAb;;AAEA,UAAIiB,QAAQ,GAAGjB,KAAK,GAAG,CAAvB;AACA,UAAIkB,OAAO,GAAGlB,KAAK,GAAG,CAAtB;;AAEA,UAAIiB,QAAQ,GAAG,CAAf,EAAkB;AACdC,eAAO,IAAI,IAAID,QAAf;AACAA,gBAAQ,GAAG,CAAX;AACH,OAHD,MAGO,IAAIC,OAAO,IAAI,KAAKhf,CAAL,CAAOmC,MAAtB,EAA8B;AACjC4c,gBAAQ,IAAIC,OAAO,GAAG,KAAKhf,CAAL,CAAOmC,MAAjB,GAA0B,CAAtC;AACA6c,eAAO,GAAG,KAAKhf,CAAL,CAAOmC,MAAP,GAAgB,CAA1B;AACH;;AAED,UAAIigB,MAAM,GAAG,EAAb;;AAEA,WAAK,IAAI7f,CAAC,GAAGwc,QAAb,EAAuBxc,CAAC,IAAIyc,OAA5B,EAAqCzc,CAAC,EAAtC,EAA0C;AACtC,YAAMiF,SAAS,GAAG,KAAKxH,CAAL,CAAOuC,CAAP,CAAlB;AACA,YAAM+f,QAAQ,GAAG,KAAKA,QAAL,CAAc9a,SAAd,CAAjB;;AACA,YAAI,CAAC4a,MAAM,CAACjgB,MAAZ,EAAoB;AAChBigB,gBAAM,CAAC,CAAD,CAAN,GAAYE,QAAQ,CAAC,CAAD,CAApB;AACH;;AACD,YAAIzD,CAAC,GAAGyD,QAAQ,CAACngB,MAAjB;AACA,YAAM2c,MAAM,GAAGsD,MAAM,CAACjgB,MAAP,GAAgB,CAA/B;;AACA,eAAO0c,CAAC,KAAK,CAAb,EAAgB;AACZuD,gBAAM,CAACtD,MAAM,GAAGD,CAAV,CAAN,GAAqByD,QAAQ,CAACzD,CAAD,CAA7B;AACH;AACJ;;AAEDuD,YAAM,GAAG,CAACA,MAAD,CAAT;AAEA,UAAMc,eAAe,GAAGtQ,OAAO,CAAC+F,OAAO,CAAC3Y,CAAT,EAAYoiB,MAAZ,EAAoB,KAAKliB,UAAzB,EAAqCyY,OAAO,CAACM,WAA7C,EAA0DN,OAAO,CAACQ,YAAlE,CAA/B;AACA,UAAMgK,eAAe,GAAGtQ,OAAO,CAAC8F,OAAO,CAAC3Y,CAAT,EAAYoiB,MAAZ,EAAoB,KAAKliB,UAAzB,EAAqCyY,OAAO,CAACM,WAA7C,EAA0DN,OAAO,CAACQ,YAAlE,CAA/B;AAEA,UAAMuJ,UAAU,GAAG9P,OAAO,CAAC+F,OAAO,CAAC3Y,CAAT,EAAYoiB,MAAZ,EAAoB,KAAKliB,UAAzB,EAAqC,CAArC,EAAwC,CAAxC,CAA1B;AACA,UAAM4iB,UAAU,GAAGjQ,OAAO,CAAC8F,OAAO,CAAC3Y,CAAT,EAAYoiB,MAAZ,EAAoB,KAAKliB,UAAzB,EAAqC,CAArC,EAAwC,CAAxC,CAA1B;AAEA,UAAIsiB,cAAJ,EAAoBC,YAApB,EAAkCF,iBAAlC,EACIK,cADJ,EACoBC,YADpB,EACkCF,iBADlC;AAGAH,oBAAc,GAAGC,YAAY,GAAGF,iBAAiB,GAAGW,eAApD;AACAN,oBAAc,GAAGC,YAAY,GAAGF,iBAAiB,GAAGQ,eAApD;AAEAxK,aAAO,CAACyJ,MAAR,GAAiBA,MAAjB;AACAzJ,aAAO,CAAC+J,UAAR,GAAqBA,UAArB;AACA/J,aAAO,CAACmK,UAAR,GAAqBA,UAArB;AACAnK,aAAO,CAAC6J,cAAR,GAAyBA,cAAzB;AACA7J,aAAO,CAAC8J,YAAR,GAAuBA,YAAvB;AACA9J,aAAO,CAAC4J,iBAAR,GAA4BA,iBAA5B;AACA5J,aAAO,CAACiK,cAAR,GAAyBA,cAAzB;AACAjK,aAAO,CAACkK,YAAR,GAAuBA,YAAvB;AACAlK,aAAO,CAACgK,iBAAR,GAA4BA,iBAA5B;AACAhK,aAAO,CAACoK,OAAR,GAAkB,EAAlB;AAEA,aAAOpK,OAAP;AACH;;;;EA3MoC8I,c;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BzC;AACA;;IAUqB2B,2B;;;;;AAEjB,2BAAajQ,IAAb,EAAmBwE,OAAnB,EAA4B;AAAA;;AAAA;;AACxB,+GAAMxE,IAAN,EAAYwE,OAAZ;AAEA,UAAK/H,IAAL,GAAY8D,OAAO,CAACP,IAAI,CAACyF,QAAN,CAAnB;AAEA,UAAKxY,UAAL,GAAkB,EAAlB;;AACA,SAAK,IAAIe,KAAT,IAAkB,MAAK6K,UAAvB,EAAmC;AAC/B,YAAK5L,UAAL,CAAgBe,KAAhB,IACIkV,2BAA2B,CAAClD,IAAI,CAACyF,QAAL,CAAcG,MAAd,CAAqB5X,KAArB,CAAD,EAA8B,CAA9B,EAAiC,SAAjC,EAA4C,GAA5C,EAAiD,SAAjD,EAA4D,GAA5D,CAD/B;AAEH;;AAED,UAAK0O,UAAL,GAAkBkD,OAAO,CAAC,MAAK/S,CAAN,EAAS,MAAK4P,IAAd,EAAoB,MAAKzP,UAAzB,EACrB,MAAK8Y,WAAL,GAAmB,MAAKgE,IAAL,GAAY,MAAKD,UADf,EAC2B,MAAK7D,YAAL,GAAoB,MAAK8D,IAAL,GAAY,MAAKD,UADhE,CAAzB;AAEA,UAAKqG,cAAL,GAAsBtQ,OAAO,CAAC,MAAK/S,CAAN,EAAS,MAAK4P,IAAd,EAAoB,MAAKzP,UAAzB,EAAqC,CAArC,EAAwC,CAAxC,CAA7B;AAEA,UAAKoO,gBAAL,GAAwB,MAAK+K,aAAL,GAAqB,MAAKC,WAAL,GACzC,MAAK1J,UAAL,CAAgB,CAAhB,CADJ;AAEA,UAAKhP,SAAL,GAAiB,MAAKwiB,cAAL,CAAoB,CAApB,CAAjB;AAEA,UAAK7U,gBAAL,GAAwB,MAAKgL,aAAL,GAAqB,MAAKC,WAAL,GAAmB,CAAhE;AACA,UAAK3Y,SAAL,GAAiB,CAAjB;AApBwB;AAqB3B;;;;6BAESsZ,G,EAAKrK,M,EAAQqO,e,EAAiBC,gB,EAAkBrd,S,EAAW;AAEjE,WAAKsd,SAAL,CAAelE,GAAf,EAAoBrK,MAApB,EAA4BqO,eAA5B,EAA6CC,gBAA7C,EAA+Drd,SAA/D;AAEA,WAAKmD,QAAL,CAAciW,GAAd,EAAmBrK,MAAnB,EAA2BqO,eAA3B,EAA4CC,gBAA5C,EAA8Drd,SAA9D;AAEA,WAAK6F,SAAL,CAAeuT,GAAf,EAAoBrK,MAApB,EAA4BqO,eAA5B,EAA6CC,gBAA7C,EAA+Drd,SAA/D;AAEA,WAAKud,WAAL,CAAiBnE,GAAjB,EAAsBrK,MAAtB,EAA8BqO,eAA9B,EAA+CC,gBAA/C,EAAiErd,SAAjE;AAEA,WAAKwd,UAAL,CAAgBpE,GAAhB,EAAqBrK,MAArB,EAA6BqO,eAA7B,EAA8CC,gBAA9C,EAAgErd,SAAhE;;AAEA,UAAIoZ,GAAG,CAACR,WAAJ,KAAoB5Y,SAAS,GAAG,CAAZ,IAAkBoZ,GAAG,CAACN,cAAJ,IAAsBM,GAAG,CAACnB,WAA1B,IAAyCmB,GAAG,CAACN,cAAJ,IAAsBM,GAAG,CAACjB,YAAzG,CAAJ,EAA6H;AACzH,aAAKsF,UAAL,CAAgBrE,GAAhB,EAAqBrK,MAArB,EAA6BqO,eAA7B,EAA8CC,gBAA9C,EAAgErd,SAAhE;AACH;AACJ;;;8BAEUoZ,G,EAAKrK,M,EAAQqO,e,EAAiBC,gB,EAAkBrd,S,EAAW;AAElE2O,qBAAe,CAAC,KAAK5P,GAAN,EAAWqa,GAAG,CAACpa,CAAf,EAAkBoa,GAAG,CAACxK,IAAtB,EAA4BwK,GAAG,CAACvK,UAAhC,EAA4C,KAAK1P,UAAjD,EAA6D,KAAKC,UAAlE,EACX,KAAK4c,UADM,EACM,KAAKN,WAAL,GAAmB,KAAKF,IAD9B,EACoC,KAAKS,IADzC,EAC+C,KAAKpO,YADpD,EACkEuL,GAAG,CAACtK,WADtE,EAEXsK,GAAG,CAACnB,WAFO,EAEMmB,GAAG,CAACjB,YAFV,EAEwBiB,GAAG,CAAC7L,gBAF5B,EAE8CvN,SAF9C,EAEyD,KAAKkE,UAF9D,EAE0E6K,MAF1E,CAAf;AAGH;;;gCAEYqK,G,EAAKrK,M,EAAQqO,e,EAAiBC,gB,EAAkBrd,S,EAAW;AAEpE2O,qBAAe,CAAC,KAAK5P,GAAN,EAAWqa,GAAG,CAACpa,CAAf,EAAkBoa,GAAG,CAACxK,IAAtB,EAA4BwK,GAAG,CAACiJ,cAAhC,EAAgD,KAAKljB,UAArD,EAAiE,KAAKC,UAAtE,EACX,KAAK4c,UADM,EACM,KAAKT,aADX,EAC0B,KAAKU,IAD/B,EACqC,KAAKZ,cAD1C,EAC0D,CAD1D,EAEX,CAFW,EAER,CAFQ,EAELjC,GAAG,CAACvZ,SAFC,EAEUG,SAFV,EAEqB+O,MAFrB,CAAf;AAGH;;;+BAEWqK,G,EAAKrK,M,EAAQqO,e,EAAiBC,gB,EAAkBrd,S,EAA2B;AAAA,UAAhBsiB,OAAgB,uEAAN,IAAM;AAEnFxX,qBAAe,CAAC,KAAK/L,GAAN,EAAWqa,GAAG,CAACpa,CAAf,EAAkB,CAACoa,GAAG,CAACxK,IAAL,CAAlB,EAA8B,KAAK5D,UAAnC,EAA+C,KAAK9L,UAApD,EAAgE,KAAKC,UAArE,EAAiF,KAAKC,UAAtF,EAAkG,KAAKW,SAAvG,EACXqZ,GAAG,CAACN,cADO,EACSM,GAAG,CAACtK,WADb,EAC0B,KAAKmN,IAD/B,EACqC,KAAKpO,YAAL,GAAoB,KAAK2N,IAD9D,EACoEpC,GAAG,CAACnB,WADxE,EACqFmB,GAAG,CAACjB,YADzF,EACuGiB,GAAG,CAACf,YAD3G,EAEX,KAAK2D,UAFM,EAEM,KAAKN,WAAL,GAAmB,KAAKF,IAF9B,EAEoCpC,GAAG,CAACrT,KAFxC,EAGX,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAD,CAHW,EAIX,KAAKyW,cAJM,EAIU,KAAKrR,QAJf,EAIyB,KAAKC,cAJ9B,EAI8C,KAAKC,oBAJnD,EAIyE,KAAKC,kBAJ9E,EAIkG,KAAKC,kBAJvG,EAKXvL,SALW,EAKA,KAAKkE,UALL,EAKiBkV,GAAG,CAACL,iBALrB,EAKwC/Y,SALxC,EAKmDqd,gBALnD,EAKqEjE,GAAG,KAAK,IAL7E,EAKmFkJ,OALnF,CAAf;AAMH;;;yBAEKlJ,G,EAAK;AACP,sGAAWA,GAAX;;AACA,WAAKsH,UAAL,CAAgBtH,GAAhB;AACA,WAAKtX,cAAL,CAAoBsX,GAApB;AACH;;;mCAEcA,G,EAAK;AAEhB,UAAMsC,WAAW,GAAG,KAAKA,WAAL,GAAmB,KAAKF,IAA5C;AACA,UAAMhW,SAAS,GAAGkW,WAAW,GAAG,CAAhC;AAEA1Y,uBAAiB,CAACoW,GAAG,CAACb,WAAL,EAAkBmD,WAAW,GAAG,KAAKF,IAArC,EACbE,WAAW,GAAGlW,SADD,EACYA,SADZ,EACuBkW,WADvB,EACoCtC,GAAG,CAACG,MADxC,CAAjB;AAEH;;;+BAEWH,G,EAAK;AAEbA,SAAG,CAACvK,UAAJ,GAAiBkD,OAAO,CAACqH,GAAG,CAACpa,CAAL,EAAQoa,GAAG,CAACxK,IAAZ,EAAkB,KAAKzP,UAAvB,EACpBia,GAAG,CAACnB,WAAJ,GAAkB,KAAKgE,IAAL,GAAY,KAAKD,UADf,EAC2B5C,GAAG,CAACjB,YAAJ,GAAmB,KAAK8D,IAAL,GAAY,KAAKD,UAD/D,CAAxB;AAEA5C,SAAG,CAACiJ,cAAJ,GAAqBtQ,OAAO,CAACqH,GAAG,CAACpa,CAAL,EAAQoa,GAAG,CAACxK,IAAZ,EAAkB,KAAKzP,UAAvB,EAAmC,CAAnC,EAAsC,CAAtC,CAA5B;AACAia,SAAG,CAACvZ,SAAJ,GAAgBuZ,GAAG,CAACiJ,cAAJ,CAAmB,CAAnB,CAAhB;AAEA,UAAME,YAAY,GAAGnJ,GAAG,CAACvK,UAAJ,CAAe,CAAf,CAArB;;AAEA,UAAI0T,YAAY,KAAK,KAAKhK,WAA1B,EAAuC;AACnC,YAAMqC,QAAQ,GAAG,KAAKvB,SAAL,GAAiB,kBAAlC;AACA,aAAKwD,YAAL,CAAkBzD,GAAlB,EAAuB,kBAAvB,EAA2CmJ,YAA3C,EAAyD,KAAKpI,mBAA9D,EAAmFS,QAAnF;AACA,aAAK+B,OAAL;AACH;;AAED,UAAMkE,OAAO,GAAG,KAAKjK,UAAL,CAAgB,KAAKyC,SAAL,GAAiB,kBAAjC,CAAhB;;AAEA,UAAIwH,OAAJ,EAAa;AACTzH,WAAG,CAACd,aAAJ,GAAoBuI,OAAO,CAAC5Y,IAA5B;AACAmR,WAAG,CAACb,WAAJ,GAAkBsI,OAAO,CAAC3Y,EAA1B;AACH;AACJ;;;+BAEW4U,K,EAAO0F,I,EAAM;AAErB,UAAM7K,OAAO,GAAG,sGAAiBmF,KAApB,CAAb;;AAEA,UAAI0F,IAAJ,EAAU;AACN,eAAO7K,OAAP;AACH;;AAED,UAAMtF,OAAO,GAAG,KAAK0O,kBAAL,CAAwBpJ,OAAO,CAACoG,QAAhC,EAA0CpG,OAAO,CAACqG,OAAlD,CAAhB;AAEA,UAAM7L,IAAI,GAAG;AAAEE,eAAO,EAAPA,OAAF;AAAWE,aAAK,EAAE,KAAKoF,OAAL,CAAa,KAAK3Y,CAAL,CAAO,CAAP,CAAb,EAAwBuT;AAA1C,OAAb;AACA,UAAMvT,CAAC,GAAG4T,IAAI,CAACT,IAAD,CAAd;AACA,UAAMvD,IAAI,GAAG8D,OAAO,CAACP,IAAD,CAApB;AAEA,UAAMtD,UAAU,GAAGkD,OAAO,CAAC/S,CAAD,EAAI4P,IAAJ,EAAU,KAAKzP,UAAf,EACtBwY,OAAO,CAACM,WAAR,GAAsB,KAAKgE,IAAL,GAAY,KAAKD,UADjB,EAC6BrE,OAAO,CAACQ,YAAR,GAAuB,KAAK8D,IAAL,GAAY,KAAKD,UADrE,CAA1B;AAEA,UAAMgF,cAAc,GAAGnS,UAAU,CAAC,CAAD,CAAjC;AACA,UAAMoS,cAAc,GAAG,CAAvB;AAEA,UAAMoB,cAAc,GAAGtQ,OAAO,CAAC/S,CAAD,EAAI4P,IAAJ,EAAU,KAAKzP,UAAf,EAA2B,CAA3B,EAA8B,CAA9B,CAA9B;AACA,UAAMU,SAAS,GAAGwiB,cAAc,CAAC,CAAD,CAAhC;AACA,UAAMviB,SAAS,GAAG,CAAlB;AAEA,UAAIwY,aAAJ,EAAmBC,WAAnB,EAAgChL,gBAAhC,EACIiL,aADJ,EACmBC,WADnB,EACgCjL,gBADhC;AAGA8K,mBAAa,GAAGC,WAAW,GAAGhL,gBAAgB,GAAGyT,cAAjD;AACAxI,mBAAa,GAAGC,WAAW,GAAGjL,gBAAgB,GAAGyT,cAAjD;AAEA,UAAMlb,KAAK,GAAG/G,CAAC,CAACA,CAAC,CAACmC,MAAF,GAAW,CAAZ,CAAD,GAAkBnC,CAAC,CAAC,CAAD,CAAjC;AAEA2Y,aAAO,CAAC3Y,CAAR,GAAYA,CAAZ;AACA2Y,aAAO,CAAC5R,KAAR,GAAgBA,KAAhB;AACA4R,aAAO,CAAC/I,IAAR,GAAeA,IAAf;AACA+I,aAAO,CAAC9I,UAAR,GAAqBA,UAArB;AACA8I,aAAO,CAAC0K,cAAR,GAAyBA,cAAzB;AACA1K,aAAO,CAAC9X,SAAR,GAAoBA,SAApB;AACA8X,aAAO,CAAC7X,SAAR,GAAoBA,SAApB;AACA6X,aAAO,CAACW,aAAR,GAAwBA,aAAxB;AACAX,aAAO,CAACY,WAAR,GAAsBA,WAAtB;AACAZ,aAAO,CAACpK,gBAAR,GAA2BA,gBAA3B;AACAoK,aAAO,CAACa,aAAR,GAAwBA,aAAxB;AACAb,aAAO,CAACc,WAAR,GAAsBA,WAAtB;AACAd,aAAO,CAACnK,gBAAR,GAA2BA,gBAA3B;AAEA,aAAOmK,OAAP;AACH;;;;EAtJwCuJ,+B;;;;;;;;;;;;;;;;;;;;;;;;;;ACX7C;AACA;;IAkBqBuB,Y;;;;;AAEjB,oBAAatQ,IAAb,EAAmBwE,OAAnB,EAA4B;AAAA;;AAAA;;AACxB,wFAAMxE,IAAN,EAAYwE,OAAZ;AAEA,UAAK+L,aAAL,GAAqB,CAAE,SAAF,EAAa,SAAb,EAAwB,SAAxB,CAArB;AAHwB;AAI3B;;;;8BAEUtJ,G,EAAKrK,M,EAAQqO,e,EAAiBC,gB,EAAkBrd,S,EAAW;AAElE,UAAIoZ,GAAG,KAAK,IAAZ,EAAkB;AACd,6FAAuBA,GAAvB,EAA4BrK,MAA5B,EAAoCqO,eAApC,EAAqDC,gBAArD,EAAuErd,SAAvE;AACH;;AAEDlB,eAAS,CAAC,KAAKC,GAAN,EAAWqa,GAAG,CAACpa,CAAf,EAAkBoa,GAAG,CAACna,KAAtB,EAA6Bma,GAAG,CAACla,UAAjC,EAA6Cka,GAAG,CAACja,UAAjD,EAA6Dia,GAAG,CAACha,UAAjE,EACL,KAAK4c,UADA,EACY,KAAKN,WAAL,GAAmB,KAAKF,IAAxB,GAA+BpC,GAAG,CAACG,MAAJ,CAAW9W,GADtD,EAC2D,KAAKwZ,IADhE,EACsE,KAAKpO,YAAL,GAAoBuL,GAAG,CAACG,MAAJ,CAAW9W,GADrG,EAC0G2W,GAAG,CAACG,MAAJ,CAAW7W,MADrH,EAEL0W,GAAG,CAACnB,WAFC,EAEYmB,GAAG,CAACjB,YAFhB,EAE8BiB,GAAG,CAACrT,KAAJ,GAAYqT,GAAG,CAACf,YAF9C,EAE4De,GAAG,CAAC7L,gBAFhE,EAEkF6L,GAAG,CAAC5L,gBAFtF,EAEwG,KAAKzN,SAF7G,EAEwHC,SAFxH,EAEmI+O,MAFnI,CAAT;AAGH;;;gCAEYqK,G,EAAKrK,M,EAAQqO,e,EAAiBC,gB,EAAkBrd,S,EAAW;AAEpE,UAAIoZ,GAAG,KAAK,IAAZ,EAAkB;AACd,+FAAyBA,GAAzB,EAA8BrK,MAA9B,EAAsCqO,eAAtC,EAAuDC,gBAAvD,EAAyErd,SAAzE;AACH;AACJ;;;+BAEWoZ,G,EAAKrK,M,EAAQqO,e,EAAiBC,gB,EAAkBrd,S,EAAW;AAEnE,UAAIoZ,GAAG,KAAK,IAAZ,EAAkB;AACd,8FAAwBA,GAAxB,EAA6BrK,MAA7B,EAAqCqO,eAArC,EAAsDC,gBAAtD,EAAwErd,SAAxE;AACH;AACJ;;;+BAEWoZ,G,EAAKrK,M,EAAQqO,e,EAAiBC,gB,EAAkBrd,S,EAAW;AAEnE,UAAIoZ,GAAG,KAAK,IAAZ,EAAkB;AACd,8FAAwBA,GAAxB,EAA6BrK,MAA7B,EAAqCqO,eAArC,EAAsDC,gBAAtD,EAAwErd,SAAxE,EAAmF,KAAnF;AACH;;AAEDwK,gBAAU,CAAC,KAAKzL,GAAN,EAAW,KAAKkd,IAAhB,EAAsB,KAAKpO,YAAL,GAAoB,KAAK2N,IAA/C,EAAqD,KAAK/Q,WAA1D,EAAuE,KAAKiR,WAA5E,EAAyF,KAAKM,UAA9F,EACN5C,GAAG,CAACnB,WADE,EACWmB,GAAG,CAACjB,YADf,EAC6BiB,GAAG,CAACf,YADjC,EAC+Ce,GAAG,CAACN,cADnD,EACmE,KAAKlO,cADxE,EACwF5K,SADxF,EACmG,KAAKkE,UADxG,CAAV;AANmE;AAAA;AAAA;;AAAA;AASnE,6BAAiBkV,GAAG,CAACna,KAArB,8HAA4B;AAAA,cAAnBiB,IAAmB;AACxBmN,wBAAc,CAAC,KAAKtO,GAAN,EAAWqa,GAAG,CAACpa,CAAf,EAAkBkB,IAAlB,EAAwBkZ,GAAG,CAACpO,UAA5B,EAAwCoO,GAAG,CAACla,UAA5C,EAAwDka,GAAG,CAACja,UAA5D,EAAwEia,GAAG,CAACha,UAA5E,EAAwF,KAAKW,SAA7F,EACVqZ,GAAG,CAACN,cADM,EACUM,GAAG,CAACtK,WADd,EAC2B,KAAKmN,IADhC,EACsC,KAAKpO,YAD3C,EACyDuL,GAAG,CAACnB,WAD7D,EAC0EmB,GAAG,CAACjB,YAD9E,EAC4FiB,GAAG,CAACf,YADhG,EAEV,KAAK2D,UAFK,EAEO,KAAKN,WAAL,GAAmB,KAAKF,IAF/B,EAEqCpC,GAAG,CAACrT,KAFzC,EAGVqT,GAAG,CAACG,MAAJ,CAAW9W,GAHD,EAGM2W,GAAG,CAACG,MAAJ,CAAW7W,MAHjB,EAGyB0W,GAAG,CAAC7L,gBAH7B,EAG+C6L,GAAG,CAAC5L,gBAHnD,EAIV,KAAKjC,kBAJK,EAIe,KAAKrH,UAJpB,EAIgClE,SAJhC,CAAd;AAKH;AAfkE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiBnE8K,qBAAe,CAAC,KAAK/L,GAAN,EAAWqa,GAAG,CAACpa,CAAf,EAAkB,CAACoa,GAAG,CAACna,KAAL,CAAlB,EAA+Bma,GAAG,CAACpO,UAAnC,EAA+CoO,GAAG,CAACla,UAAnD,EAA+Dka,GAAG,CAACja,UAAnE,EAA+Eia,GAAG,CAACha,UAAnF,EAA+F,KAAKW,SAApG,EACXqZ,GAAG,CAACN,cADO,EACSM,GAAG,CAACtK,WADb,EAC0B,KAAKmN,IAD/B,EACqC,KAAKpO,YAAL,GAAoB,KAAK2N,IAD9D,EACoEpC,GAAG,CAACnB,WADxE,EACqFmB,GAAG,CAACjB,YADzF,EACuGiB,GAAG,CAACf,YAD3G,EAEX,KAAK2D,UAFM,EAEM,KAAKN,WAAL,GAAmB,KAAKF,IAF9B,EAEoCpC,GAAG,CAACrT,KAFxC,EAGX,CAAC,CAACqT,GAAG,CAACG,MAAJ,CAAW9W,GAAZ,EAAiB2W,GAAG,CAACG,MAAJ,CAAW7W,MAA5B,EAAoC0W,GAAG,CAAC7L,gBAAxC,EAA0D6L,GAAG,CAAC5L,gBAA9D,CAAD,CAHW,EAIX,KAAKgP,cAJM,EAIU,KAAKrR,QAJf,EAIyB,KAAKC,cAJ9B,EAI8C,KAAKC,oBAJnD,EAIyE,KAAKC,kBAJ9E,EAIkG,KAAKC,kBAJvG,EAKXvL,SALW,EAKA,KAAKkE,UALL,EAKiBkV,GAAG,CAACL,iBALrB,EAKwC/Y,SALxC,EAKmDqd,gBALnD,EAKqEjE,GAAG,KAAK,IAL7E,CAAf;AAMH;;;mCAEeA,G,EAAKrK,M,EAAQqO,e,EAAiBC,gB,EAAkBrd,S,EAAW;AAEvE,UAAIoZ,GAAG,KAAK,IAAZ,EAAkB;AAAE;AAAQ,OAF2C,CAIvE;;;AACAjQ,0BAAc,CAAC,KAAKpK,GAAN,EAAW,KAAKkd,IAAhB,EAAsB7C,GAAG,CAACkC,iBAA1B,EAA6C,KAAKU,UAAlD,EACV5C,GAAG,CAAC/P,UADM,EACM,KAAKC,cADX,EAC2B,KAAKC,cADhC,EACgD,KAAKC,cADrD,EACqE,KAAK2B,QAD1E,EACoF,KAAKjH,UADzF,EACqGlE,SADrG,CAAd;AAEH;;;+BAEWoZ,G,EAAK;AAEb,UAAIA,GAAG,KAAK,IAAZ,EAAkB;AACd,8FAAwBA,GAAxB;AACH;;AAED,UAAMuH,gBAAgB,GAAG/O,OAAO,CAACwH,GAAG,CAACpa,CAAL,EAAQoa,GAAG,CAACna,KAAZ,EAAmBma,GAAG,CAACla,UAAvB,EAAmCka,GAAG,CAACnB,WAAvC,EAAoDmB,GAAG,CAACjB,YAAxD,CAAhC;;AAEA,UAAIwI,gBAAgB,KAAKvH,GAAG,CAACb,WAA7B,EAA0C;AACtC,YAAMqC,QAAQ,GAAG,KAAKvB,SAAL,GAAiB,kBAAlC;AACA,aAAKwD,YAAL,CAAkBzD,GAAlB,EAAuB,kBAAvB,EAA2CuH,gBAA3C,EAA6D,KAAKxG,mBAAlE,EAAuFS,QAAvF;AACA,aAAK+B,OAAL;AACH;;AAED,UAAMiE,gBAAgB,GAAG/O,OAAO,CAACuH,GAAG,CAACpa,CAAL,EAAQoa,GAAG,CAACna,KAAZ,EAAmBma,GAAG,CAACla,UAAvB,EAAmCka,GAAG,CAACnB,WAAvC,EAAoDmB,GAAG,CAACjB,YAAxD,CAAhC;;AAEA,UAAIyI,gBAAgB,KAAKxH,GAAG,CAACX,WAA7B,EAA0C;AACtC,YAAMmC,SAAQ,GAAG,KAAKvB,SAAL,GAAiB,kBAAlC;;AACA,aAAKwD,YAAL,CAAkBzD,GAAlB,EAAuB,kBAAvB,EAA2CwH,gBAA3C,EAA6D,KAAKzG,mBAAlE,EAAuFS,SAAvF;AACA,aAAK+B,OAAL;AACH;;AAED,UAAMkE,OAAO,GAAG,KAAKjK,UAAL,CAAgB,KAAKyC,SAAL,GAAiB,kBAAjC,CAAhB;;AAEA,UAAIwH,OAAJ,EAAa;AACTzH,WAAG,CAACd,aAAJ,GAAoBuI,OAAO,CAAC5Y,IAA5B;AACAmR,WAAG,CAACb,WAAJ,GAAkBsI,OAAO,CAAC3Y,EAA1B;AACH;;AAED,UAAM4Y,OAAO,GAAG,KAAKlK,UAAL,CAAgB,KAAKyC,SAAL,GAAiB,kBAAjC,CAAhB;;AAEA,UAAIyH,OAAJ,EAAa;AACT1H,WAAG,CAACZ,aAAJ,GAAoBsI,OAAO,CAAC7Y,IAA5B;AACAmR,WAAG,CAACX,WAAJ,GAAkBqI,OAAO,CAAC5Y,EAA1B;AACH;AACJ;;;+BAEW4U,K,EAAO;AAEf,UAAMnF,OAAO,GAAG,+EAAiBmF,KAApB,EAA2B,IAA3B,CAAb;;AAEA,UAAM6F,OAAO,GAAG,CAAC7F,KAAD,CAAhB;;AAEA,UAAIA,KAAK,GAAG,CAAR,GAAY,CAAhB,EAAmB;AACf6F,eAAO,CAACnQ,IAAR,CAAasK,KAAK,GAAG,CAArB;AACH;;AAED,UAAIA,KAAK,GAAG,CAAR,GAAY,CAAhB,EAAmB;AACf6F,eAAO,CAACnQ,IAAR,CAAavN,IAAI,CAAC1C,GAAL,CAASua,KAAK,GAAG,CAAjB,EAAoB,CAApB,CAAb;AACH;;AAED,UAAM8F,cAAc,GAAG,KAAKjL,OAAL,CAAa,KAAK3Y,CAAL,CAAO8d,KAAP,CAAb,CAAvB;AAEA,UAAM9d,CAAC,GAAG4T,IAAI,CAACgQ,cAAD,CAAd;AACA,UAAM3jB,KAAK,GAAG,EAAd;AACA,UAAMoK,UAAU,GAAG,EAAnB;AACA,UAAMyO,oBAAoB,GAAG,EAA7B;AAEA,UAAIvW,CAAC,GAAG,CAAR;AAEA,UAAMrC,UAAU,GAAG,EAAnB;AACA,UAAMC,UAAU,GAAG,EAAnB;AACA,UAAMC,UAAU,GAAG,EAAnB;AACA,UAAM4L,UAAU,GAAG,EAAnB;AA1Be,iBA4BC2X,OA5BD;;AA4Bf,+CAAyB;AAApB,YAAIzS,GAAG,WAAP;AAED,YAAM/P,KAAK,GAAG,MAAM+P,GAApB;AAEA,YAAM1J,SAAS,GAAG,KAAKxH,CAAL,CAAOkR,GAAP,CAAlB;AACA,YAAMhQ,IAAI,GAAGuS,QAAQ,CAAC,KAAKkF,OAAL,CAAanR,SAAb,CAAD,CAAR,CAAkC,CAAlC,CAAb;AACAtG,YAAI,CAAC,CAAD,CAAJ,GAAUC,KAAV;AACAlB,aAAK,CAACuT,IAAN,CAAWtS,IAAX;AAEA8K,kBAAU,CAAC7K,KAAD,CAAV,GAAoB2G,UAAU,CAACN,SAAD,EAAY,KAAZ,CAA9B;AAEA,YAAMlG,KAAK,GAAG,KAAKoiB,aAAL,CAAmBnhB,CAAnB,CAAd;AAEArC,kBAAU,CAACiB,KAAD,CAAV,GAAoB,IAApB;AACAhB,kBAAU,CAACgB,KAAD,CAAV,GAAoB,CAApB;AACAf,kBAAU,CAACe,KAAD,CAAV,GAAoB4H,uBAAuB,CAACzH,KAAD,EAAQ,CAAR,CAA3C;AACAwX,4BAAoB,CAAC3X,KAAD,CAApB,GAA8BoB,CAAC,EAA/B;AACA8H,kBAAU,CAACmJ,IAAX,CAAgB;AACZwF,YAAE,EAAE,MAAM9H,GADE;AAEZ/P,eAAK,EAAE6K,UAAU,CAAC7K,KAAD,CAFL;AAGZ0D,kBAAQ,EAAEyQ,eAAe,CAAChU,KAAD,EAAQ,CAAR,EAAW,SAAX,EAAsB,CAAtB,EAAyB,SAAzB,EAAoC,CAApC,CAHb;AAIZD,eAAK,EAAE,CAJK;AAKZrB,WAAC,EAAE,CALS;AAMZyC,WAAC,EAAE,CANS;AAOZoH,aAAG,EAAE,CAPO;AAQZE,aAAG,EAAE;AARO,SAAhB;AAUH;;AAED,UAAMlJ,SAAS,GAAG+R,OAAO,CAAC5S,CAAD,EAAIC,KAAJ,EAAWC,UAAX,EAAuB,CAAvB,EAA0B,CAA1B,CAAzB;AACA,UAAMY,SAAS,GAAG+R,OAAO,CAAC7S,CAAD,EAAIC,KAAJ,EAAWC,UAAX,EAAuB,CAAvB,EAA0B,CAA1B,CAAzB;AAEA,UAAIoZ,aAAJ,EAAmBC,WAAnB,EAAgChL,gBAAhC,EACIiL,aADJ,EACmBC,WADnB,EACgCjL,gBADhC;AAGA8K,mBAAa,GAAGC,WAAW,GAAGhL,gBAAgB,GAAG1N,SAAjD;AACA2Y,mBAAa,GAAGC,WAAW,GAAGjL,gBAAgB,GAAG1N,SAAjD;AAEA,UAAMiG,KAAK,GAAG/G,CAAC,CAACA,CAAC,CAACmC,MAAF,GAAW,CAAZ,CAAD,GAAkBnC,CAAC,CAAC,CAAD,CAAjC;AAEA2Y,aAAO,CAACtO,UAAR,GAAqBA,UAArB;AACAsO,aAAO,CAACG,oBAAR,GAA+BA,oBAA/B;AACAH,aAAO,CAAC2D,iBAAR,GAA4B,KAAKD,cAAjC;AAEA1D,aAAO,CAACzY,UAAR,GAAqBA,UAArB;AACAyY,aAAO,CAACxY,UAAR,GAAqBA,UAArB;AACAwY,aAAO,CAACvY,UAAR,GAAqBA,UAArB;AACAuY,aAAO,CAAC3M,UAAR,GAAqBA,UAArB;AAEA2M,aAAO,CAACM,WAAR,GAAsB,CAAtB;AACAN,aAAO,CAACQ,YAAR,GAAuB,CAAvB;AACAR,aAAO,CAACU,YAAR,GAAuB,CAAvB;AAEAV,aAAO,CAAC3Y,CAAR,GAAYA,CAAZ;AACA2Y,aAAO,CAAC5R,KAAR,GAAgBA,KAAhB;AACA4R,aAAO,CAAC1Y,KAAR,GAAgBA,KAAhB;AACA0Y,aAAO,CAAC9X,SAAR,GAAoBA,SAApB;AACA8X,aAAO,CAAC7X,SAAR,GAAoBA,SAApB;AACA6X,aAAO,CAACW,aAAR,GAAwBA,aAAxB;AACAX,aAAO,CAACY,WAAR,GAAsBA,WAAtB;AACAZ,aAAO,CAACpK,gBAAR,GAA2BA,gBAA3B;AACAoK,aAAO,CAACa,aAAR,GAAwBA,aAAxB;AACAb,aAAO,CAACc,WAAR,GAAsBA,WAAtB;AACAd,aAAO,CAACnK,gBAAR,GAA2BA,gBAA3B;AAEA,aAAOmK,OAAP;AACH;;;8BAEUyB,G,EAAKO,C,EAAG;AACf,UAAIP,GAAG,KAAK,IAAZ,EAAkB;AACd,sFAAgBA,GAAhB,EAAqBO,CAArB;AACH;AACJ;;;;EA5MiCyI,2B;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBtC;AACA;;IAiBqBS,Y;;;;;AAEjB,oBAAa1Q,IAAb,EAAmBwE,OAAnB,EAA4B;AAAA;;AAAA;;AACxB,wFAAMxE,IAAN,EAAYwE,OAAZ;AAEA,UAAKhH,KAAL,GAAagD,QAAQ,CAACR,IAAI,CAACyF,QAAN,CAArB;;AAEA,UAAKkL,YAAL;;AAEA,UAAKvV,gBAAL,GAAwB,MAAK+K,aAAL,GAAqB,MAAKC,WAAL,GAAmB,GAAhE;AACA,UAAK1Y,SAAL,GAAiB,GAAjB;AAEA,UAAK2N,gBAAL,GAAwB,MAAKgL,aAAL,GAAqB,MAAKC,WAAL,GAAmB,CAAhE;AACA,UAAK3Y,SAAL,GAAiB,CAAjB;AAEA,UAAKijB,QAAL,GAAgB,MAAK/jB,CAAL,CAAOmC,MAAP,GAAgB,CAAhC;AAEA,UAAKoY,MAAL,GAAc;AAAE9W,SAAG,EAAE,CAAP;AAAUC,YAAM,EAAE,CAAlB;AAAqBH,SAAG,EAAE,EAA1B;AAA8BC,SAAG,EAAE;AAAnC,KAAd;AAEA,UAAK4N,MAAL,GAAc,EAAd;AACA,UAAKnC,MAAL,GAAc;AACVoC,aAAO,EAAE,CADC;AAEVC,aAAO,EAAE,CAFC;AAGVa,YAAM,EAAE;AAHE,KAAd;;AAMA,SAAK,IAAMhR,KAAX,IAAoB,MAAK6K,UAAzB,EAAqC;AACjC,YAAKoF,MAAL,CAAYjQ,KAAZ,IAAqB;AACjBwQ,eAAO,EAAE,CADQ;AAEjBO,WAAG,EAAE,CAFY;AAGjB7Q,aAAK,EAAE;AAHU,OAArB;AAKA,YAAK4N,MAAL,CAAYkD,MAAZ,CAAmBhR,KAAnB,IAA4B;AACxB8H,YAAI,EAAE,CADkB;AAExBC,UAAE,EAAE;AAFoB,OAA5B;AAIH;;AAlCuB;AAmC3B;;;;6BAESkR,G,EAAKrK,M,EAAQqO,e,EAAiBC,gB,EAAkBrd,S,EAAW;AAEjE,WAAKsd,SAAL,CAAelE,GAAf,EAAoBrK,MAApB,EAA4BqO,eAA5B,EAA6CC,gBAA7C,EAA+Drd,SAA/D;AAEA,WAAKmD,QAAL,CAAciW,GAAd,EAAmBrK,MAAnB,EAA2BqO,eAA3B,EAA4CC,gBAA5C,EAA8Drd,SAA9D;AAEA,WAAK6F,SAAL,CAAeuT,GAAf,EAAoBrK,MAApB,EAA4BqO,eAA5B,EAA6CC,gBAA7C,EAA+Drd,SAA/D;AAEA,WAAKud,WAAL,CAAiBnE,GAAjB,EAAsBrK,MAAtB,EAA8BqO,eAA9B,EAA+CC,gBAA/C,EAAiErd,SAAjE;AAEA,WAAKwd,UAAL,CAAgBpE,GAAhB,EAAqBrK,MAArB,EAA6BqO,eAA7B,EAA8CC,gBAA9C,EAAgErd,SAAhE;;AAEA,UAAI,KAAK4Y,WAAL,KAAqB5Y,SAAS,GAAG,CAAZ,IAAkB,KAAK8Y,cAAL,IAAuB,KAAKb,WAA5B,IAA2C,KAAKa,cAAL,IAAuB,KAAKX,YAA9G,CAAJ,EAAkI;AAC9H,aAAKsF,UAAL,CAAgBrE,GAAhB,EAAqBrK,MAArB,EAA6BqO,eAA7B,EAA8CC,gBAA9C,EAAgErd,SAAhE;AACH;AACJ;;;6BAESoZ,G,EAAKrK,M,EAAQqO,e,EAAiBC,gB,EAAkBrd,S,EAAW;AAEjE,UAAIoZ,GAAG,KAAK,IAAZ,EAAkB;AAEdjW,sBAAQ,CAAC,KAAKpE,GAAN,EAAW,KAAKkd,IAAhB,EAAsB,KAAKpO,YAA3B,EAAyC,KAAKmO,UAA9C,EAA0D,KAAKN,WAAL,GAAmB,KAAKF,IAAlF,EAAwF,CAAxF,EACJpC,GAAG,CAACd,aADA,EACec,GAAG,CAACb,WADnB,EACgCa,GAAG,CAAC7L,gBADpC,EAEJ6L,GAAG,CAACZ,aAFA,EAEeY,GAAG,CAACX,WAFnB,EAEgCW,GAAG,CAAC5L,gBAFpC,EAGJ4L,GAAG,CAACG,MAAJ,CAAWhX,GAHP,EAGY6W,GAAG,CAACG,MAAJ,CAAW/W,GAHvB,EAG4B4W,GAAG,CAACG,MAAJ,CAAW9W,GAHvC,EAG4C2W,GAAG,CAACG,MAAJ,CAAW7W,MAHvD,EAIJ,KAAK0X,YAJD,EAIe,KAAKC,YAJpB,EAIkC,KAJlC,EAIyC,CAJzC,EAI4C,KAAKkC,aAJjD,EAIgE,KAAKtY,QAJrE,EAI+E,KAAKC,UAJpF,EAIgGlE,SAJhG,CAAR;AAKH;AACJ;;;8BAEUoZ,G,EAAKrK,M,EAAQqO,e,EAAiBC,gB,EAAkBrd,S,EAAW;AAElE,UAAIoZ,GAAG,KAAK,IAAZ,EAAkB;AAEd1J,gBAAQ,CAAC,KAAK3Q,GAAN,EAAW,KAAKC,CAAhB,EAAmB,KAAK2Q,KAAxB,EAA+B,KAAKC,WAApC,EAAiD,KAAKC,oBAAtD,EAA4E,KAAK1Q,UAAjF,EAA6F,KAAKC,UAAlG,EACJ,KAAK4c,UADD,EACa,KAAKN,WAAL,GAAmB,KAAKF,IADrC,EAC2C,KAAKS,IADhD,EACsD,KAAKpO,YAD3D,EACyE,KAAKmV,SAD9E,EACyF,KAAKC,UAD9F,EAEJ,KAAKhL,WAFD,EAEc,KAAKE,YAFnB,EAEiCnY,SAFjC,EAE4C,KAAKkE,UAFjD,EAE6D6K,MAF7D,CAAR;AAGH,OALD,MAKO;AAEHoB,eAAO,CAAC,KAAKpR,GAAN,EAAW,KAAKiM,UAAhB,EAA4B,KAAK7L,UAAjC,EAA6C,KAAKC,UAAlD,EACH,KAAK6c,IADF,EACQ,KAAKpO,YAAL,GAAoB,IAAI,KAAKoO,IADrC,EAC2C,KAAKD,UADhD,EAC4D,KAAKN,WAAL,GAAmB,CAD/E,EACkF,KAAKtL,MADvF,EAC+FpQ,SAD/F,EAC0G,KAAKiO,MAD/G,EAEH,KAAK7C,cAFF,EAEkB,KAAKC,oBAFvB,EAE6C,KAAKC,kBAFlD,EAEsE,KAAKpH,UAF3E,EAEuF,KAAKsY,cAF5F,EAE4G,KAAKrR,QAFjH,CAAP;AAGH;AACJ;;;8BAEUiO,G,EAAKrK,M,EAAQqO,e,EAAiBC,gB,EAAkBrd,S,EAAW;AAElE,UAAIoZ,GAAG,KAAK,IAAZ,EAAkB;AACd;AACA,sFAAgBA,GAAhB,EAAqBrK,MAArB,EAA6BqO,eAA7B,EAA8CC,gBAA9C,EAAgErd,SAAhE;AACH;AACJ;;;gCAEYoZ,G,EAAKrK,M,EAAQqO,e,EAAiBC,gB,EAAkBrd,S,EAAW;AAEpE0P,cAAQ,CAAC,KAAK3Q,GAAN,EAAW,KAAKC,CAAhB,EAAmB,KAAK2Q,KAAxB,EAA+B,KAAKuT,eAApC,EAAqD,KAAKC,wBAA1D,EAAoF,KAAKhkB,UAAzF,EAAqG,KAAKC,UAA1G,EACJ,KAAK4c,UADD,EACa,KAAKT,aADlB,EACiC,KAAKU,IADtC,EAC4C,KAAKZ,cADjD,EACiE,CADjE,EACoE,KAAK0H,QADzE,EAEJ,CAFI,EAED,CAFC,EAEE/iB,SAFF,EAEa,KAAKkE,UAFlB,EAE8B6K,MAF9B,CAAR;AAGH;;;+BAEWqK,G,EAAKrK,M,EAAQqO,e,EAAiBC,gB,EAAkBrd,S,EAAW;AAEnE,UAAIoZ,GAAG,KAAK,IAAZ,EAAkB;AAEd5O,kBAAU,CAAC,KAAKzL,GAAN,EAAW,KAAKkd,IAAhB,EAAsB,KAAKpO,YAA3B,EAAyC,KAAKpD,WAA9C,EAA2D,KAAKiR,WAAL,GAAmB,KAAKF,IAAnF,EAAyF,KAAKQ,UAA9F,EACN,KAAK/D,WADC,EACY,KAAKE,YADjB,EAC+B,KAAKE,YADpC,EACkD,KAAKS,cADvD,EACuE,KAAKlO,cAD5E,EAC4F5K,SAD5F,EACuG,KAAKkE,UAD5G,CAAV;AAGA4G,uBAAe,CAAC,KAAK/L,GAAN,EAAW,KAAKC,CAAhB,EAAmB,CAAC,KAAK2Q,KAAN,CAAnB,EAAiC,KAAK3E,UAAtC,EAAkD,KAAK9L,UAAvD,EAAmE,KAAKC,UAAxE,EAAoF,KAAKC,UAAzF,EAAqG,KAAKW,SAA1G,EACX,KAAK+Y,cADM,EACU,KAAKhK,WADf,EAC4B,KAAKmN,IADjC,EACuC,KAAKpO,YAAL,GAAoB,KAAK2N,IADhE,EACsE,KAAKvD,WAD3E,EACwF,KAAKE,YAD7F,EAC2G,KAAKE,YADhH,EAEX,KAAK2D,UAFM,EAEM,KAAKN,WAAL,GAAmB,KAAKF,IAF9B,EAEoC,KAAKzV,KAFzC,EAGX,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAD,CAHW,EAIX,KAAKyW,cAJM,EAIU,KAAKrR,QAJf,EAIyB,KAAKC,cAJ9B,EAI8C,KAAKC,oBAJnD,EAIyE,KAAKC,kBAJ9E,EAIkG,KAAKC,kBAJvG,EAKXvL,SALW,EAKA,KAAKkE,UALL,EAKiB,KAAK6U,iBALtB,EAKyC/Y,SALzC,EAKoDqd,gBALpD,EAKsEjE,GAAG,KAAK,IAL9E,EAKoF,KALpF,EAK2F,IAL3F,CAAf;AAMH;AACJ;;;yBAEKA,G,EAAK;AACP,+EAAWA,GAAX;;AACA,WAAK0J,YAAL,CAAkB1J,GAAlB;AACH;;;8BAEUA,G,EAAK;AACZ,UAAIA,GAAG,KAAK,IAAZ,EAAkB;AACd,sFAAgBA,GAAhB;AACH;AACJ;;;iCAEaA,G,EAAK;AAEfA,SAAG,CAAC4J,SAAJ,GAAgBliB,aAAa,CAAC,KAAK9B,CAAN,EAASoa,GAAG,CAACnB,WAAJ,GAAkB,KAAKgE,IAAL,GAAY,KAAKD,UAA5C,CAA7B;AACA5C,SAAG,CAAC6J,UAAJ,GAAiBjiB,aAAa,CAAC,KAAKhC,CAAN,EAASoa,GAAG,CAACjB,YAAJ,GAAmB,KAAK8D,IAAL,GAAY,KAAKD,UAA7C,CAA9B;AAEA,WAAKkH,eAAL,GAAuBnR,OAAO,CAAC,KAAK/S,CAAN,EAAS,KAAK2Q,KAAd,EAAqB,KAAKxQ,UAA1B,EAAsC,CAAtC,EAAyC,CAAzC,CAA9B;AACA,WAAKyQ,WAAL,GAAmB,KAAKsT,eAAL,CAAqB9N,KAArB,CAA2BnQ,IAAI,CAAC1C,GAAL,CAAS,KAAKygB,SAAL,GAAiB,CAA1B,EAA6B,CAA7B,CAA3B,EAA4D,KAAKC,UAAL,GAAkB,CAA9E,CAAnB;AACA,WAAKpT,oBAAL,GAA4B,KAAKD,WAAL,CAAiBwF,KAAjB,CAAuB,CAAvB,CAA5B;AACA,WAAK+N,wBAAL,GAAgC,KAAKD,eAAL,CAAqB9N,KAArB,CAA2B,CAA3B,CAAhC;;AAEA,UAAIgE,GAAG,KAAK,IAAZ,EAAkB;AACd,aAAKgK,UAAL,CAAgBhK,GAAhB;AACH;AACJ;;;+BAEWA,G,EAAK;AAEb,UAAIiK,KAAK,GAAG,CAAZ;AAFa;AAAA;AAAA;;AAAA;AAIb,6BAAmB,KAAK1T,KAAxB,8HAA+B;AAAA,cAApBI,IAAoB;AAC3B,cAAIuT,OAAO,GAAG,CAAd;;AACA,eAAK,IAAI/hB,CAAC,GAAG6X,GAAG,CAAC4J,SAAjB,EAA4BzhB,CAAC,IAAI6X,GAAG,CAAC6J,UAArC,EAAiD1hB,CAAC,EAAlD,EAAsD;AAClD+hB,mBAAO,IAAIvT,IAAI,CAACxO,CAAD,CAAf;AACH;;AACD+hB,iBAAO,GAAGA,OAAO,GAAG,KAAKnkB,UAAL,CAAgB4Q,IAAI,CAAC,CAAD,CAApB,CAApB;AACAsT,eAAK,IAAIC,OAAT;AACA,eAAKlT,MAAL,CAAYL,IAAI,CAAC,CAAD,CAAhB,EAAqBmB,GAArB,GAA2BoS,OAA3B;AACH;AAZY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcb,WAAK,IAAMnjB,KAAX,IAAoB,KAAKiQ,MAAzB,EAAiC;AAC7B,aAAKA,MAAL,CAAYjQ,KAAZ,EAAmBwQ,OAAnB,GAA6B,KAAKP,MAAL,CAAYjQ,KAAZ,EAAmB+Q,GAAnB,GAAyBmS,KAAtD;AACH;AACJ;;;6BAES1J,C,EAAG;AAET,UAAI,KAAKN,SAAL,KAAmB,UAAvB,EAAmC;AAAE;AAAQ;;AAE7C,UAAMwC,MAAM,GAAG,KAAK2C,qBAAL,EAAf;AAEA,UAAMC,OAAO,GAAG5f,WAAW,CAAC8a,CAAC,CAACmF,OAAF,GAAYjD,MAAM,CAACnc,IAApB,CAA3B;AACA,UAAMgf,OAAO,GAAG7f,WAAW,CAAC8a,CAAC,CAACoF,OAAF,GAAYlD,MAAM,CAACpZ,GAApB,CAA3B;;AAEA,UAAIic,OAAO,GAAG,KAAK7Q,YAAf,IAA+B6Q,OAAO,GAAG,KAAK7Q,YAAL,GAAoB,KAAK6N,WAAtE,EAAmF;AAC/E;AACH;;AAED,UAAIhL,KAAK,GAAGzL,IAAI,CAACse,IAAL,CAAU,CAAC9E,OAAO,GAAG,KAAKxQ,MAAL,CAAYoC,OAAvB,KAAmCqO,OAAO,GAAG,KAAKzQ,MAAL,CAAYqC,OAAzD,CAAV,CAAZ;;AAEA,UAAIoO,OAAO,GAAG,KAAKzQ,MAAL,CAAYqC,OAA1B,EAAmC;AAC/BI,aAAK,GAAGzL,IAAI,CAACyI,EAAL,GAAU,CAAV,GAAcgD,KAAtB;AACH,OAFD,MAEO;AACHA,aAAK,GAAGzL,IAAI,CAACyI,EAAL,GAAU,CAAV,GAAc,CAAd,GAAkBgD,KAA1B;AACH;;AAED,UAAI8S,KAAK,GAAG,IAAZ;;AAEA,WAAK,IAAIrjB,KAAT,IAAkB,KAAK8N,MAAL,CAAYkD,MAA9B,EAAsC;AAClC,YAAM8B,CAAC,GAAG,KAAKhF,MAAL,CAAYkD,MAAZ,CAAmBhR,KAAnB,CAAV;;AACA,YAAIuQ,KAAK,IAAIuC,CAAC,CAAChL,IAAX,IAAmByI,KAAK,IAAIuC,CAAC,CAAC/K,EAAlC,EAAsC;AAClCsb,eAAK,GAAGrjB,KAAR;AACH;AACJ;;AAED,UAAI,CAACqjB,KAAL,EAAY;AAER9S,aAAK,GAAGA,KAAK,GAAG,IAAIzL,IAAI,CAACyI,EAAzB;;AAEA,aAAK,IAAIvN,MAAT,IAAkB,KAAK8N,MAAL,CAAYkD,MAA9B,EAAsC;AAClC,cAAM8B,EAAC,GAAG,KAAKhF,MAAL,CAAYkD,MAAZ,CAAmBhR,MAAnB,CAAV;;AACA,cAAIuQ,KAAK,IAAIuC,EAAC,CAAChL,IAAX,IAAmByI,KAAK,IAAIuC,EAAC,CAAC/K,EAAlC,EAAsC;AAClCsb,iBAAK,GAAGrjB,MAAR;AACH;AACJ;AACJ;;AAED,UAAIqjB,KAAJ,EAAW;AACP,aAAK3G,YAAL,CAAkB,KAAKzM,MAAL,CAAYoT,KAAZ,CAAlB,EAAsC,OAAtC,EAA+C,CAA/C,EAAkD,KAAKrJ,mBAAvD,EAA4E,UAAUqJ,KAAtF;;AACA,aAAK,IAAIrjB,OAAT,IAAkB,KAAKiQ,MAAvB,EAA+B;AAC3B,cAAIjQ,OAAK,KAAKqjB,KAAd,EAAqB;AAAE;AAAU;;AACjC,eAAK3G,YAAL,CAAkB,KAAKzM,MAAL,CAAYjQ,OAAZ,CAAlB,EAAsC,OAAtC,EAA+C,CAA/C,EAAkD,KAAKga,mBAAvD,EAA4E,UAAUha,OAAtF;AACH;;AACD,aAAKwc,OAAL;AACH;AACJ;;;8BAEUhD,C,EAAG;AACV,oFAAgBA,CAAhB;;AACA,WAAK8J,QAAL,CAAc9J,CAAd;AACH;;;+BAEWA,C,EAAG;AACX,oFAAgBA,CAAhB;;AACA,WAAK8J,QAAL,CAAc9J,CAAd;AACH;;;;EA3NiCuH,+B;;;;AClBtC;AACA;AACA;AACA;AACA;AAEe,8DAAY;AAEvB,SAAO;AAEHwC,UAAM,EAAE,gBAAUvR,IAAV,EAAgBwR,MAAhB,EAAwB;AAE5B,UAAIC,KAAK,GAAG,IAAZ;AAEA,UAAMhM,QAAQ,GAAGzF,IAAI,CAACyF,QAAtB;;AAEA,UAAIA,QAAQ,CAACiM,QAAb,EAAuB;AACnBD,aAAK,GAAG,IAAIzC,yBAAJ,CAAgBhP,IAAhB,EAAsB;AAC1B9S,eAAK,EAAEskB,MAAM,CAACG,WADY;AAE1BxkB,gBAAM,EAAE,GAFkB;AAG1Bwc,oBAAU,EAAE,uBAHc;AAI1BhO,kBAAQ,EAAE,EAJgB;AAK1BmO,cAAI,EAAE,EALoB;AAM1BT,cAAI,EAAE,EANoB;AAO1Bzb,mBAAS,EAAE,CAPe;AAQ1Bqc,qBAAW,EAAE,EARa;AAS1BC,qBAAW,EAAE,CATa;AAU1Bd,uBAAa,EAAE,EAVW;AAW1Be,0BAAgB,EAAE,CAXQ;AAY1Bb,8BAAoB,EAAE,GAZI;AAa1BnS,wBAAc,EAAE,EAbU;AAc1BC,wBAAc,EAAE,EAdU;AAe1BC,wBAAc,EAAE,CAfU;AAgB1BiT,wBAAc,EAAE,EAhBU;AAiB1BhS,qBAAW,EAAE,CAjBa;AAkB1BxC,cAAI,EAAE,IAlBoB;AAmB1BC,YAAE,EAAE,CAnBsB;AAoB1BiU,mBAAS,EAAE,EApBe;AAqB1BI,uBAAa,EAAE,CArBW;AAsB1B7E,gBAAM,EAAE,qBAtBkB;AAuB1BpJ,wBAAc,EAAE,EAvBU;AAwB1BoO,2BAAiB,EAAE,EAxBO;AAyB1B7O,sBAAY,EAAE;AAzBY,SAAtB,CAAR;AA2BH,OA5BD,MA4BO,IAAI+J,QAAQ,CAACmM,OAAT,IAAoBnM,QAAQ,CAACoM,UAAjC,EAA6C;AAChDJ,aAAK,GAAG,IAAIf,YAAJ,CAAa1Q,IAAb,EAAmB;AACvB9S,eAAK,EAAEskB,MAAM,CAACG,WADS;AAEvBxkB,gBAAM,EAAE,GAFe;AAGvBwc,oBAAU,EAAE,uBAHW;AAIvBhO,kBAAQ,EAAE,EAJa;AAKvBmO,cAAI,EAAE,EALiB;AAMvBT,cAAI,EAAE,EANiB;AAOvBzb,mBAAS,EAAE,CAPY;AAQvBqc,qBAAW,EAAE,EARU;AASvBC,qBAAW,EAAE,CATU;AAUvBd,uBAAa,EAAE,EAVQ;AAWvBe,0BAAgB,EAAE,CAXK;AAYvBb,8BAAoB,EAAE,GAZC;AAavBnS,wBAAc,EAAE,EAbO;AAcvBC,wBAAc,EAAE,EAdO;AAevBC,wBAAc,EAAE,CAfO;AAgBvBiT,wBAAc,EAAE,EAhBO;AAiBvBhS,qBAAW,EAAE,CAjBU;AAkBvBxC,cAAI,EAAE,IAlBiB;AAmBvBC,YAAE,EAAE,CAnBmB;AAoBvBiU,mBAAS,EAAE,EApBY;AAqBvBI,uBAAa,EAAE,CArBQ;AAsBvB7E,gBAAM,EAAE,WAtBe;AAuBvBpJ,wBAAc,EAAE,EAvBO;AAwBvBoO,2BAAiB,EAAE,EAxBI;AAyBvB7O,sBAAY,EAAE;AAzBS,SAAnB,CAAR;AA2BH,OA5BM,MA4BA,IAAI+J,QAAQ,CAACmM,OAAb,EAAsB;AACzBH,aAAK,GAAG,IAAIxB,2BAAJ,CAAoBjQ,IAApB,EAA0B;AAC9B9S,eAAK,EAAEskB,MAAM,CAACG,WADgB;AAE9BxkB,gBAAM,EAAE,GAFsB;AAG9Bwc,oBAAU,EAAE,uBAHkB;AAI9BhO,kBAAQ,EAAE,EAJoB;AAK9BmO,cAAI,EAAE,EALwB;AAM9BT,cAAI,EAAE,EANwB;AAO9Bzb,mBAAS,EAAE,CAPmB;AAQ9Bqc,qBAAW,EAAE,EARiB;AAS9BC,qBAAW,EAAE,CATiB;AAU9Bd,uBAAa,EAAE,EAVe;AAW9Be,0BAAgB,EAAE,CAXY;AAY9Bb,8BAAoB,EAAE,GAZQ;AAa9BnS,wBAAc,EAAE,EAbc;AAc9BC,wBAAc,EAAE,EAdc;AAe9BC,wBAAc,EAAE,CAfc;AAgB9BiT,wBAAc,EAAE,EAhBc;AAiB9BhS,qBAAW,EAAE,CAjBiB;AAkB9BxC,cAAI,EAAE,IAlBwB;AAmB9BC,YAAE,EAAE,CAnB0B;AAoB9BiU,mBAAS,EAAE,EApBmB;AAqB9BI,uBAAa,EAAE,CArBe;AAsB9B7E,gBAAM,EAAE,mBAtBsB;AAuB9BpJ,wBAAc,EAAE,EAvBc;AAwB9BoO,2BAAiB,EAAE,EAxBW;AAyB9B7O,sBAAY,EAAE;AAzBgB,SAA1B,CAAR;AA2BH,OA5BM,MA4BA,IAAIoW,MAAM,CAACC,IAAP,CAAYtM,QAAQ,CAACrF,KAArB,EAA4B4R,IAA5B,CAAiC,UAAAtG,CAAC;AAAA,eAAIjG,QAAQ,CAACrF,KAAT,CAAesL,CAAf,MAAsB,KAA1B;AAAA,OAAlC,CAAJ,EAAwE;AAC3E+F,aAAK,GAAG,IAAInB,YAAJ,CAAatQ,IAAb,EAAmB;AACvB9S,eAAK,EAAEskB,MAAM,CAACG,WADS;AAEvBxkB,gBAAM,EAAE,GAFe;AAGvBwc,oBAAU,EAAE,uBAHW;AAIvBhO,kBAAQ,EAAE,EAJa;AAKvBmO,cAAI,EAAE,EALiB;AAMvBT,cAAI,EAAE,EANiB;AAOvBzb,mBAAS,EAAE,CAPY;AAQvBqc,qBAAW,EAAE,EARU;AASvBC,qBAAW,EAAE,CATU;AAUvBd,uBAAa,EAAE,EAVQ;AAWvBe,0BAAgB,EAAE,CAXK;AAYvBb,8BAAoB,EAAE,GAZC;AAavBnS,wBAAc,EAAE,EAbO;AAcvBC,wBAAc,EAAE,EAdO;AAevBC,wBAAc,EAAE,CAfO;AAgBvBiT,wBAAc,EAAE,EAhBO;AAiBvBhS,qBAAW,EAAE,CAjBU;AAkBvBxC,cAAI,EAAE,IAlBiB;AAmBvBC,YAAE,EAAE,CAnBmB;AAoBvBiU,mBAAS,EAAE,EApBY;AAqBvBI,uBAAa,EAAE,CArBQ;AAsBvB7E,gBAAM,EAAE,WAtBe;AAuBvBpJ,wBAAc,EAAE,EAvBO;AAwBvBoO,2BAAiB,EAAE,EAxBI;AAyBvB7O,sBAAY,EAAE;AAzBS,SAAnB,CAAR;AA2BH,OA5BM,MA4BA;AACH+V,aAAK,GAAG,IAAInD,cAAJ,CAActO,IAAd,EAAoB;AACxB9S,eAAK,EAAEskB,MAAM,CAACG,WADU;AAExBxkB,gBAAM,EAAE,GAFgB;AAGxBwc,oBAAU,EAAE,uBAHY;AAIxBhO,kBAAQ,EAAE,EAJc;AAKxBmO,cAAI,EAAE,EALkB;AAMxBT,cAAI,EAAE,EANkB;AAOxBzb,mBAAS,EAAE,CAPa;AAQxBqc,qBAAW,EAAE,EARW;AASxBC,qBAAW,EAAE,CATW;AAUxBd,uBAAa,EAAE,EAVS;AAWxBe,0BAAgB,EAAE,CAXM;AAYxBb,8BAAoB,EAAE,GAZE;AAaxBnS,wBAAc,EAAE,EAbQ;AAcxBC,wBAAc,EAAE,EAdQ;AAexBC,wBAAc,EAAE,CAfQ;AAgBxBiT,wBAAc,EAAE,EAhBQ;AAiBxBhS,qBAAW,EAAE,CAjBW;AAkBxBxC,cAAI,EAAE,IAlBkB;AAmBxBC,YAAE,EAAE,CAnBoB;AAoBxBiU,mBAAS,EAAE,EApBa;AAqBxBI,uBAAa,EAAE,CArBS;AAsBxB7E,gBAAM,EAAE,YAtBgB;AAuBxBpJ,wBAAc,EAAE,EAvBQ;AAwBxBoO,2BAAiB,EAAE,EAxBK;AAyBxB7O,sBAAY,EAAE;AAzBU,SAApB,CAAR;AA2BH;;AAED8V,YAAM,CAACrM,WAAP,CAAmBsM,KAAK,CAAC5M,EAAzB;AACA4M,WAAK,CAAC3I,MAAN;AAEA,aAAO2I,KAAP;AACH;AA1JE,GAAP;AA4JH,C;;;;;;;;ICpKKQ,W;;;AAEF,uBAAaC,EAAb,EAAiB;AAAA;;AAAA;;AACb,SAAKA,EAAL,GAAUA,EAAV;AAEA,SAAKC,KAAL,GAAa,KAAb;AAEA,SAAKtN,EAAL,GAAUC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAV;AACA,SAAKF,EAAL,CAAQG,SAAR,GAAoB,kBAApB;AACA,SAAKoN,MAAL,GAActN,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAd;AACA,SAAKqN,MAAL,CAAYpN,SAAZ,GAAwB,mBAAxB;AACA,SAAKH,EAAL,CAAQM,WAAR,CAAoB,KAAKiN,MAAzB;AAEA,SAAKvN,EAAL,CAAQ0C,gBAAR,CAAyB,OAAzB,EAAkC;AAAA,aAAM,KAAI,CAAC8K,MAAL,EAAN;AAAA,KAAlC;AAEA,SAAKC,OAAL;AACH;;;;8BAES;AACN,WAAKH,KAAL,GAAa,CAAC,KAAKA,KAAnB;AACA,UAAMI,MAAM,GAAGzN,QAAQ,CAAC0N,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,CAAf;AACA,WAAKL,KAAL,GAAaI,MAAM,CAACvN,SAAP,GAAmB,OAAhC,GAA0CuN,MAAM,CAACvN,SAAP,GAAmB,KAA7D;AACA,WAAKmN,KAAL,GAAa,KAAKtN,EAAL,CAAQG,SAAR,GAAoB,oBAAjC,GAAwD,KAAKH,EAAL,CAAQG,SAAR,GAAoB,kBAA5E;AACA,WAAKsN,OAAL;AACA,WAAKJ,EAAL,CAAQ,KAAKC,KAAb;AACH;;;8BAEU;AACP,WAAKC,MAAL,CAAYK,WAAZ,GAA0B,KAAKN,KAAL,GACpB,oBADoB,GAEpB,sBAFN;AAGH;;;;;;AAGUF,4DAAf,E;;;;;AClCA;AACA;AAEA;AAEA,IAAMS,OAAO,GAAG,IAAIC,aAAJ,EAAhB;AAEA,IAAIC,MAAM,GAAG,EAAb;AAEA9N,QAAQ,CAACyC,gBAAT,CAA0B,kBAA1B,EAA8C,YAAY;AAEtD,MAAMiK,MAAM,GAAG1M,QAAQ,CAAC+N,cAAT,CAAwB,MAAxB,CAAf;AAFsD;AAAA;AAAA;;AAAA;AAItD,yBAAkB7S,cAAlB,8HAAwB;AAAA,UAAf8S,KAAe;AACpBF,YAAM,CAACvS,IAAP,CAAYqS,OAAO,CAACnB,MAAR,CAAeuB,KAAf,EAAsBtB,MAAtB,CAAZ;AACH;AANqD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQtD,WAASuB,UAAT,CAAqB1E,MAArB,EAA6B;AACzBuE,UAAM,CAACI,OAAP,CAAe,UAAUvB,KAAV,EAAiB;AAC5BA,WAAK,CAACwB,SAAN,CAAgB5E,MAAhB;AACH,KAFD;AAGH;;AAED,MAAM6E,WAAW,GAAG,IAAIjB,YAAJ,CAAgBc,UAAhB,CAApB;AACAvB,QAAM,CAACrM,WAAP,CAAmB+N,WAAW,CAACrO,EAA/B;;AAEA,WAAS+E,MAAT,CAAiB1c,KAAjB,EAAwB;AACpB0lB,UAAM,CAACI,OAAP,CAAe,UAAUvB,KAAV,EAAiB;AAC5BA,WAAK,CAACzI,QAAN,CAAe9b,KAAf,EAAsB,IAAtB;AACH,KAFD;AAGH;;AAEDZ,QAAM,CAACib,gBAAP,CAAwB,QAAxB,EAAkC,YAAY;AAC1CqC,UAAM,CAAC4H,MAAM,CAACG,WAAR,CAAN;AACH,GAFD;AAIA/H,QAAM,CAAC4H,MAAM,CAACG,WAAR,CAAN;AACH,CA5BD,E","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","const pixelRatio = window.devicePixelRatio || 1\n\nexport function toCssSize (value) {\n    return value / pixelRatio\n}\n\nexport function fromCssSize (value) {\n    return value * pixelRatio\n}\n\nexport function drawLines (ctx, x, lines, lineStates, lineGrades, lineColors, width, height, offsetW, offsetH, graphOffsetH, left, right, dX, maxHeight, minHeight, lineWidth, zoomGrade, inOut) {\n    for (let line of lines) {\n        const label = line[0]\n        if (lineStates[label] || lineGrades[label] > 0) {\n            drawLine(ctx, x, line, lineGrades[label], lineColors[label], width, height, offsetW, offsetH, graphOffsetH, left, right, dX, maxHeight, minHeight, lineWidth, zoomGrade, inOut)\n        }\n    }\n}\n\nexport function drawLine (ctx, x, line, grade, color, width, height, offsetW, offsetH, bottomGraphOffsetH, left, right, dX, maxHeight, minHeight, lineWidth, zoomGrade, inOut) {\n\n    if (minHeight > maxHeight) {\n        return\n    }\n\n    const dRange = (right - left) / 2 * (1 - zoomGrade)\n    const dx = dX * (1 - zoomGrade)\n\n    left = left + dRange\n    right = right - dRange\n    dX = dX - dx\n\n    const scaleX = width / dX\n    const scaleY = (height - bottomGraphOffsetH) / (maxHeight - minHeight)\n\n    ctx.lineWidth = lineWidth\n    ctx.strokeStyle = color(grade * zoomGrade)\n\n    const fromIndex = getLowerIndex(x, left - offsetW / width)\n    const toIndex = getUpperIndex(x, right + offsetW / width)\n\n    let prevX = x[fromIndex]\n    let prevXCoord = offsetW +\n        ((prevX - x[1]) / ((x[x.length - 1] - x[1])) - left) * width / (right - left)\n\n    const zeroH = offsetH + height - bottomGraphOffsetH\n\n    ctx.beginPath()\n    ctx.moveTo(prevXCoord, zeroH - line[fromIndex] * scaleY)\n\n    for (let i = fromIndex + 1; i <= toIndex; i++) {\n\n        const xi = x[i]\n        const y = line[i] - minHeight\n\n        const yCoord = zeroH - y * scaleY\n\n        prevXCoord = prevXCoord + (xi - prevX) * scaleX\n        ctx.lineTo(prevXCoord, yCoord)\n        prevX = xi\n    }\n\n    ctx.stroke()\n}\n\nconst roundingProbes = [ 2, 5, 10, 100, 1000, 10000, 100000, 1000000 ]\n\nexport function calcYAlignment (maxVal, minVal, topOffset, maxBottomOffset, highestLine, lowestLine, height, vals) {\n\n    let bottomOffset = height * minVal / maxVal\n    bottomOffset = bottomOffset > maxBottomOffset ? maxBottomOffset : bottomOffset\n\n    vals.max = maxVal - (maxVal - minVal) * (topOffset - highestLine) / (topOffset - bottomOffset)\n    vals.min = minVal + (maxVal - minVal) * (lowestLine - bottomOffset) / (topOffset - bottomOffset)\n    vals.top = height - topOffset\n    vals.bottom = bottomOffset\n\n    for (let probe of roundingProbes) {\n\n        const topVal = floorTo(vals.max, probe)\n        const bottomVal = ceilTo(vals.min, probe)\n\n        if (bottomVal >= topVal) {\n            break\n        }\n\n        let top = (maxVal - topVal) / (topVal - bottomVal) * (highestLine - lowestLine)\n\n        if (top >= (height - highestLine)) {\n            break\n        }\n\n        let bottom = (bottomVal - minVal) / (topVal - bottomVal) * (highestLine - lowestLine)\n\n        if (bottom >= lowestLine) {\n            break\n        }\n\n        vals.max = topVal\n        vals.min = bottomVal\n        vals.top = height - highestLine - top\n        vals.bottom = lowestLine - bottom\n    }\n\n    return vals\n}\n\nexport function calcTopYAlignment (maxVal, topOffset, highestLine, lowestLine, height, vals) {\n\n    vals.max = maxVal - maxVal * (topOffset - highestLine) / (topOffset)\n    vals.top = height - topOffset\n    vals.bottom = 0\n\n    for (let probe of roundingProbes) {\n\n        const topVal = floorTo(vals.max, probe)\n\n        if (topVal < 0) {\n            break\n        }\n\n        let top = (maxVal - topVal) / topVal * (highestLine - lowestLine)\n        if (top >= (height - highestLine)) {\n            break\n        }\n\n\n        vals.max = topVal\n        vals.top = height - highestLine - top\n    }\n\n    vals.min = vals.max / highestLine * lowestLine\n\n    return vals\n}\n\nfunction floorTo (val, mod) {\n    return ((val / mod) | 0) * mod\n}\n\nfunction ceilTo (val, mod) {\n    return (((val / mod) | 0) + 1) * mod\n}\n\nexport function drawGrid (ctx, offsetW, offsetH, width, height, nlines,\n    fromMax, toMax, currentMax,\n    fromMin, toMin, currentMin,\n    lineMax, lineMin,\n    topOffset, bottomOffset,\n    getColor, getYColor, fromRight, lineGrade, lineWidth, textSize, nightGrade, zoomGrade) {\n\n    if (toMin > toMax) {\n        return\n    }\n\n    if (lineGrade === 0) {\n        return\n    }\n\n    const topLineOffset = height - topOffset\n\n    const scale = (topLineOffset - bottomOffset) / (currentMax - currentMin)\n\n    const fromCurTop = topLineOffset - (currentMax - fromMax) * scale\n    const toCurTop = topLineOffset + (toMax - currentMax) * scale\n    const fromCurBottom = bottomOffset + (fromMin - currentMin) * scale\n    const toCurBottom = bottomOffset - (currentMin - toMin) * scale\n\n    const fromTopOffset = (fromCurTop - fromCurBottom) / (topLineOffset - bottomOffset) * topOffset\n    const fromBottomOffset = (fromCurTop - fromCurBottom) / (topLineOffset - bottomOffset) * bottomOffset\n    const toTopOffset = (toCurTop - toCurBottom) / (topLineOffset - bottomOffset) * topOffset\n    const toBottomOffset = (toCurTop - toCurBottom) / (topLineOffset - bottomOffset) * bottomOffset\n\n    const fromOffsetH = fromCurTop + fromTopOffset\n    const dFrom = fromCurTop - fromCurBottom + fromTopOffset + fromBottomOffset\n    const toOffsetH = toCurTop + toTopOffset\n    const dTo = toCurTop - toCurBottom + toTopOffset + toBottomOffset\n\n    const grade = (Math.abs(toMax - fromMax) + Math.abs(toMin - fromMin)) === 0\n        ? 1\n        : (Math.abs(fromMax - currentMax) + Math.abs(fromMin - currentMin)) /\n            (Math.abs(toMax - fromMax) + Math.abs(toMin - fromMin))\n\n    ctx.lineWidth = lineWidth\n    ctx.strokeStyle = getColor(nightGrade, 1)\n\n    ctx.beginPath()\n\n    ctx.moveTo(offsetW, height + offsetH)\n    ctx.lineTo(offsetW + width, height + offsetH)\n\n    ctx.stroke()\n\n    drawGridLines(ctx, offsetW, height + offsetH - toOffsetH, width, dTo, nlines, lineMax, lineMin, textSize, fromRight, getColor(nightGrade, grade * zoomGrade), getYColor(nightGrade, grade * zoomGrade), grade)\n\n    if (grade < 1) {\n        drawGridLines(ctx, offsetW, height + offsetH - fromOffsetH, width, dFrom, nlines, lineMax, lineMin, textSize, fromRight, getColor(nightGrade, (1 - grade) * zoomGrade), getYColor(nightGrade, (1 - grade) * zoomGrade), grade)\n    }\n}\n\nfunction drawGridLines (ctx, offsetW, offsetH, width, height, nlines, fromVal, toVal, textSize, fromRight, color, yColor, grade) {\n\n    ctx.strokeStyle = color\n    ctx.fillStyle = yColor\n\n    ctx.beginPath()\n\n    const linesDiff = height / (nlines + 1)\n    const valsDiff = (fromVal - toVal) / (nlines - 1)\n\n    for (let i = 0, y = offsetH + linesDiff, v = fromVal; i < nlines; i++, y += linesDiff, v -= valsDiff) {\n        ctx.moveTo(offsetW, y)\n        ctx.lineTo(offsetW + width, y)\n        const x = fromRight ? offsetW + width - ctx.measureText(v).width : offsetW\n        ctx.fillText(v | 0, x, y - textSize / 2)\n    }\n\n    const v = (toVal - valsDiff) | 0\n    const x = fromRight ? offsetW + width - ctx.measureText(v).width : offsetW\n    ctx.fillText(v, x, offsetH + height - textSize / 2)\n\n    ctx.stroke()\n}\n\nexport function drawDates (ctx, offsetW, offsetH, scale, baseX, xDiff, format, left, right, fromPeriod, toPeriod, grade, getColor, nightGrade, zoomGrade) {\n\n    let fromFillStyle, toFillStyle\n\n    if (fromPeriod > toPeriod) {\n        toFillStyle = getColor(nightGrade, grade * zoomGrade)\n        fromFillStyle = getColor(nightGrade, zoomGrade)\n    } else {\n        toFillStyle = getColor(nightGrade, zoomGrade)\n        fromFillStyle = getColor(nightGrade, (1 - grade) * zoomGrade)\n    }\n\n    ctx.fillStyle = toFillStyle\n    const toN = Math.floor(left / toPeriod) - 1\n    for (let p = toPeriod * toN; p < right + toPeriod; p += toPeriod) {\n        const timestamp = Math.floor(baseX + xDiff * p)\n        drawDate(ctx, offsetW, offsetH, timestamp, format, p, left, scale)\n    }\n\n    if (fromPeriod === toPeriod) {\n        return\n    }\n\n    ctx.fillStyle = fromFillStyle\n    const fromN = Math.floor(left / fromPeriod) - 1\n    for (let p = fromPeriod * fromN; p < right + fromPeriod; p += fromPeriod) {\n        const timestamp = Math.floor(baseX + xDiff * p)\n        drawDate(ctx, offsetW, offsetH, timestamp, format, p, left, scale)\n    }\n}\n\nconst dateOffset = fromCssSize(18)\n\nfunction drawDate (ctx, offsetW, offsetH, timestamp, format, position, left, scale) {\n    const text = formatDate(timestamp, format)\n    ctx.fillText(text, offsetW + (position - left) * scale - dateOffset, offsetH)\n}\n\nconst shortMonths = [\n    'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\n    'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\n]\nconst months = [\n    'January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'\n]\nconst shortDays = [ 'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat' ]\nconst days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n\n/*\n- Apr 1 'monthdate'\n- 1 April 2019 'date'\n- Saturday, 1 April 2019 'weekdate'\n- Sat, 1 April 2019 'shortweekdate'\n- 12:00 'hours'\n- 1 April 'day'\n*/\n\nexport function formatDate (timestamp, format) {\n\n    const d = new Date(timestamp)\n\n    switch (format) {\n        case 'date':\n            return d.getUTCDate() + ' ' + months[d.getUTCMonth()] + ' ' + d.getUTCFullYear()\n        case 'hours':\n            return leftPad(d.getUTCHours()) + ':00'\n        case 'monthdate':\n            return shortMonths[d.getUTCMonth()] + ' ' + d.getUTCDate()\n        case 'weekdate':\n            return shortDays[d.getUTCDay()] + ', ' + d.getUTCDate() + ' ' + months[d.getUTCMonth()] + ' ' + d.getUTCFullYear()\n        case 'shortweekdate':\n            return days[d.getUTCDay()] + ', ' + d.getUTCDate() + ' ' + months[d.getUTCMonth()] + ' ' + d.getUTCFullYear()\n        case 'day':\n            return d.getUTCDate() + ' ' + months[d.getUTCMonth()]\n    }\n}\n\nfunction leftPad (v) {\n    return v < 10 ? '0' + v : v\n}\n\nexport const controlWidth = fromCssSize(10)\nexport const previewPadding = fromCssSize(2)\nconst controlRadius = fromCssSize(8)\nconst decorColor = animatableAlphaHEXcolor('#FFFFFF', 1)\n\nexport function drawScrollControlls (ctx, offsetW, offsetH, width, height, from, to,\n    getPreviewBlurColor, getPreviewControlColor, nightGrade, zoomGrade) {\n\n    const left = offsetW + from * width + controlWidth\n    const right = offsetW + to * width - controlWidth\n    const fromH = offsetH - previewPadding\n    const toH = offsetH + height + previewPadding\n\n    ctx.fillStyle = getPreviewBlurColor(nightGrade, zoomGrade)\n    ctx.beginPath()\n    drawRoundedRect(ctx, offsetW, left, fromH, toH, controlRadius, 0)\n    drawRoundedRect(ctx, right, offsetW + width, fromH, toH, 0, controlRadius)\n    ctx.closePath()\n    ctx.fill()\n\n    ctx.fillStyle = getPreviewControlColor(nightGrade, zoomGrade)\n    ctx.beginPath()\n    drawRoundedRect(ctx, left - controlWidth, left, fromH, toH, controlRadius, 0)\n    drawRoundedRect(ctx, right, right + controlWidth, fromH, toH, 0, controlRadius)\n    ctx.closePath()\n    ctx.fill()\n\n    ctx.strokeStyle = getPreviewControlColor(nightGrade, zoomGrade)\n    ctx.moveTo(left, fromH)\n    ctx.lineTo(right, fromH)\n    ctx.moveTo(left, toH)\n    ctx.lineTo(right, toH)\n    ctx.stroke()\n\n    ctx.fillStyle = decorColor(zoomGrade)\n    ctx.beginPath()\n    const ver = controlWidth / 2, hor = (fromH + toH) / 2\n    drawRoundedRect(ctx, left - ver - 2, left - ver + 2, hor - 8, hor + 8, 2, 2)\n    drawRoundedRect(ctx, right + ver - 2, right + ver + 2, hor - 8, hor + 8, 2, 2)\n    ctx.closePath()\n    ctx.fill()\n}\n\nexport function drawRoundedRect (ctx, fromX, toX, fromY, toY, leftRadius, rightRadius) {\n    ctx.moveTo(fromX + leftRadius, fromY)\n    ctx.lineTo(toX - rightRadius, fromY)\n    ctx.quadraticCurveTo(toX, fromY, toX, fromY + rightRadius)\n    ctx.lineTo(toX, toY - rightRadius)\n    ctx.quadraticCurveTo(toX, toY, toX - rightRadius, toY)\n    ctx.lineTo(fromX + leftRadius, toY)\n    ctx.quadraticCurveTo(fromX, toY, fromX, toY - leftRadius)\n    ctx.lineTo(fromX, fromY + leftRadius)\n    ctx.quadraticCurveTo(fromX, fromY, fromX + leftRadius, fromY)\n}\n\nexport function drawCheckboxes (ctx, offsetW, offsetH, maxWidth, checkboxes, checkboxHeight, checkboxRadius, checkboxMargin, checkboxFont, nightGrade, zoomGrade) {\n\n    const ctxFont = ctx.font\n\n    ctx.font = (checkboxHeight / 2) + 'px ' + checkboxFont\n\n    let leftOffset = offsetW, topOffset = offsetH\n\n    for (let checkbox of checkboxes) {\n        const textWidth = ctx.measureText(checkbox.label).width\n        const width = textWidth + 1.5 * checkboxHeight\n        if (leftOffset + width + 1.5 * checkboxMargin > maxWidth) {\n            leftOffset = offsetW\n            topOffset += checkboxHeight + checkboxMargin\n        }\n        drawCheckbox(ctx, leftOffset, topOffset, width, checkboxHeight, checkboxRadius,\n            checkbox.label, textWidth, checkbox.getColor, checkbox.grade, nightGrade, zoomGrade)\n        checkbox.x = leftOffset\n        checkbox.y = topOffset\n        checkbox.toX = leftOffset + width\n        checkbox.toY = topOffset + checkboxHeight\n        leftOffset += width + checkboxMargin\n    }\n\n    ctx.font = ctxFont\n}\n\nconst checkboxBorderWidth = fromCssSize(4)\n\nexport function drawCheckbox (ctx, offsetW, offsetH, width, height, radius, text, textWidth, getDynamicColor, grade, nightGrade, zoomGrade) {\n\n    ctx.strokeStyle = getDynamicColor(zoomGrade, 0, 0)\n\n    ctx.lineWidth = checkboxBorderWidth\n\n    ctx.beginPath()\n    ctx.fillStyle = getDynamicColor(zoomGrade, 1 - grade, nightGrade)\n\n    drawRoundedRect(ctx, offsetW, offsetW + width, offsetH, offsetH + height, radius, radius)\n    ctx.closePath()\n    ctx.stroke()\n    ctx.fill()\n\n    ctx.fillStyle = getDynamicColor(zoomGrade, grade, 0)\n\n    ctx.strokeStyle = ctx.fillStyle\n    ctx.fillText(text, offsetW + 0.75 * height + height * grade / 3, offsetH + 2/3 * height)\n\n    if (grade > 0.5) {\n        const checkGrade = 2 * (grade - 0.5)\n        ctx.lineWidth = checkboxBorderWidth / 2\n        ctx.beginPath()\n        const o = offsetW + height / 4\n        ctx.moveTo(o, offsetH + height / 2)\n        ctx.lineTo(o + height / 6, offsetH + height * 2/3)\n        ctx.lineTo(o + height / 6 + height / 3 * checkGrade, offsetH + height * 2/3 - height / 3 * checkGrade)\n        ctx.stroke()\n    }\n}\n\nconst legendPadding = fromCssSize(10)\nconst legendOffset = fromCssSize(10)\nconst crossRadius = fromCssSize(4)\n\nexport function drawRuller (ctx, offsetW, offsetH, rullerWidth, rullerHeight, width, left, right, range, position, getRullerColor, alphaGrade, nightGrade) {\n\n    const leftOffset = offsetW + (position - left) / (range) * width\n\n    ctx.lineWidth = rullerWidth\n    ctx.strokeStyle = getRullerColor(nightGrade, alphaGrade)\n    ctx.beginPath()\n    ctx.moveTo(leftOffset, offsetH)\n    ctx.lineTo(leftOffset, offsetH + rullerHeight)\n    ctx.stroke()\n}\n\nexport function drawLinesLegend (ctx, x, lineKinds, lineLabels, lineStates, lineGrades, lineColors, lineWidth,\n    position, closestIndex, offsetW, offsetH, left, right, range, width, height, xDiff,\n    paramKinds,\n    textSize, textFont, getLegendColor, getLegendBorderColor, getLegendFontColor, getBackgroundColor,\n    alphaGrade, nightGrade, coordinates, zoomGrade, format, drawArrow, drawAll, drawPercents) {\n\n    const ctxFont = ctx.font\n\n    const legendFont = textSize + 'px ' + textFont\n\n    const timestamp = Math.floor(x[1] + xDiff * position)\n\n    const text = formatDate(timestamp, format)\n\n    const leftOffset = offsetW + (position - left) / (range) * width\n\n    ctx.font = 'bold ' + legendFont\n    let contentWidth = ctx.measureText(text).width + 3 * legendPadding\n    let contentHeight = textSize\n\n    let percentsWidth = ctx.measureText('99%').width\n\n    let maxValueWidth = 0\n\n    let lowestTopOffset = height\n\n    let totalValues = 0\n\n    for (let i = 0; i < lineKinds.length; i++) {\n\n        const lines = lineKinds[i]\n\n        for (const line of lines) {\n\n            const label = line[0]\n\n            if (lineStates[label] || lineGrades[label] > 0) {\n\n                const val = line[closestIndex]\n                const name = lineLabels[label]\n\n                totalValues += val\n\n                ctx.font = legendFont\n                const nameWidth = ctx.measureText(name).width\n                ctx.font = 'bold ' + legendFont\n                const valWidth = ctx.measureText(val).width\n\n                contentHeight += legendPadding + textSize\n\n                const lineWidth = valWidth + nameWidth + legendPadding\n\n                if (lineWidth > contentWidth) {\n                    contentWidth = lineWidth\n                }\n\n                if (valWidth > maxValueWidth) {\n                    maxValueWidth = valWidth\n                }\n\n                let approxValue = val\n\n                if (x[closestIndex] > timestamp) {\n                    const lowerIndex = Math.max(1, closestIndex - 1)\n                    approxValue = approximateHeight(x, line, timestamp, lowerIndex, closestIndex)\n                } else if (x[closestIndex] < timestamp) {\n                    const upperIndex = Math.min(x.length - 1, closestIndex + 1)\n                    approxValue = approximateHeight(x, line, timestamp, closestIndex, upperIndex)\n                }\n\n                const param = paramKinds[i]\n\n                // const topOffset = height - (approxValue - currentMinHeight) * (height - topGraphOffsetH - bottomGraphOffsetH) / (currentMaxHeight - currentMinHeight)\n                // top, bottom, max, min\n                const topOffset = height - (approxValue - param[3]) * (height - param[0] - param[1]) / (param[2] - param[3])\n\n                if (topOffset < lowestTopOffset) {\n                    lowestTopOffset = topOffset\n                }\n            }\n        }\n    }\n\n    if (drawAll) {\n        contentHeight += legendPadding + textSize\n    }\n\n    if (drawPercents) {\n        contentWidth += percentsWidth + legendPadding\n    }\n\n    const legendWidth = contentWidth + 2 * legendPadding\n    const legendHeight = contentHeight + 2 * legendPadding\n\n    let legendOffsetLeft = leftOffset - legendWidth / 2\n\n    let additionalOffset = 0\n\n    if (lowestTopOffset - legendPadding < offsetH + legendHeight) {\n        additionalOffset = legendWidth / 2 + legendPadding\n    }\n\n    let nextOffset = legendOffsetLeft + additionalOffset\n\n    if (nextOffset < 0) {\n        additionalOffset = additionalOffset ? -additionalOffset : legendWidth / 2 + 10\n    }\n\n    const rightOverflow = nextOffset + legendWidth - width + offsetW\n\n    if (rightOverflow > 0) {\n        additionalOffset = additionalOffset ? -additionalOffset : -legendWidth / 2 - 10\n    }\n\n    legendOffsetLeft += additionalOffset\n\n    ctx.fillStyle = getLegendColor(nightGrade, alphaGrade)\n    ctx.strokeStyle = getLegendBorderColor(alphaGrade)\n    ctx.lineWidth = 1\n    ctx.beginPath()\n    coordinates.x = legendOffsetLeft\n    coordinates.toX = coordinates.x + legendWidth\n    coordinates.y = offsetH\n    coordinates.toY = coordinates.y + legendHeight\n    drawRoundedRect(ctx, coordinates.x, coordinates.toX, coordinates.y, coordinates.toY, controlRadius, controlRadius)\n    ctx.closePath()\n    ctx.fill()\n    ctx.stroke()\n\n    let textOffsetH = coordinates.y + legendPadding + textSize\n\n    ctx.fillStyle = getLegendFontColor(nightGrade, alphaGrade)\n    ctx.fillText(text, coordinates.x + legendPadding, textOffsetH)\n\n    if (drawArrow) {\n        ctx.beginPath()\n        const arrowSide = textSize / 2\n        ctx.moveTo(coordinates.toX - legendPadding - arrowSide, coordinates.y + legendPadding)\n        ctx.lineTo(coordinates.toX - legendPadding, coordinates.y + legendPadding + arrowSide)\n        ctx.lineTo(coordinates.toX - legendPadding - arrowSide, coordinates.y + legendPadding + textSize)\n        ctx.stroke()\n    }\n\n    textOffsetH += legendPadding + textSize\n\n    let lOffset = coordinates.x\n\n    for (let lines of lineKinds) {\n        for (const line of lines) {\n\n            const label = line[0]\n\n            if (lineStates[label] || lineGrades[label] > 0) {\n\n                const value = line[closestIndex]\n                const name = lineLabels[label]\n\n                if (drawPercents) {\n                    ctx.font = 'bold ' + legendFont\n                    ctx.fillStyle = getLegendFontColor(nightGrade, alphaGrade)\n                    const percent = (value / totalValues * 100) | 0\n                    ctx.fillText(percent + '%', coordinates.x + legendPadding + (percent < 10 ? percentsWidth / 3 : 0), textOffsetH)\n                    lOffset = coordinates.x + percentsWidth + legendPadding\n                }\n\n                ctx.font = legendFont\n                ctx.fillStyle = getLegendFontColor(nightGrade, lineGrades[label] * alphaGrade)\n                ctx.fillText(name, lOffset + legendPadding, textOffsetH)\n\n                ctx.font = 'bold ' + legendFont\n                ctx.fillStyle = lineColors[label](lineGrades[label] * zoomGrade)\n                const valWidth = ctx.measureText(value).width\n                ctx.fillText(value, coordinates.x + legendPadding + contentWidth - valWidth, textOffsetH)\n\n                textOffsetH += legendPadding + textSize\n            }\n        }\n    }\n\n    if (drawAll) {\n\n        const color = getLegendFontColor(nightGrade, alphaGrade)\n\n        ctx.font = legendFont\n        ctx.fillStyle = color\n        ctx.fillText('All', coordinates.x + legendPadding, textOffsetH)\n\n        ctx.font = 'bold ' + legendFont\n        ctx.fillStyle = color\n        const valWidth = ctx.measureText(totalValues).width\n        ctx.fillText(totalValues, coordinates.x + legendPadding + contentWidth - valWidth, textOffsetH)\n    }\n\n    ctx.font = ctxFont\n}\n\nexport function drawLinesCross (ctx, x, line, lineLabels, lineStates, lineGrades, lineColors, lineWidth,\n    position, closestIndex, offsetW, offsetH, left, right, range, width, height, xDiff,\n    topGraphOffsetH, bottomGraphOffsetH, currentMaxHeight, currentMinHeight,\n    getBackgroundColor, nightGrade, zoomGrade) {\n\n    if (zoomGrade < 1) { return }\n\n    if (currentMinHeight >= currentMaxHeight) {\n        return\n    }\n\n    const label = line[0]\n\n    const scaleY = (height - topGraphOffsetH - bottomGraphOffsetH) / (currentMaxHeight - currentMinHeight)\n    const leftOffset = offsetW + (position - left) / (range) * width\n\n    const timestamp = Math.floor(x[1] + xDiff * position)\n\n    if (lineStates[label] || lineGrades[label] > 0) {\n\n        const value = line[closestIndex]\n        ctx.strokeStyle = lineColors[label](lineGrades[label] * zoomGrade)\n\n        let approxValue = value\n\n        if (x[closestIndex] > timestamp) {\n            const lowerIndex = Math.max(1, closestIndex - 1)\n            approxValue = approximateHeight(x, line, timestamp, lowerIndex, closestIndex)\n        } else if (x[closestIndex] < timestamp) {\n            const upperIndex = Math.min(x.length - 1, closestIndex + 1)\n            approxValue = approximateHeight(x, line, timestamp, closestIndex, upperIndex)\n        }\n\n        const topOffset = offsetH + height - bottomGraphOffsetH - (approxValue - currentMinHeight) * scaleY\n\n        ctx.fillStyle = getBackgroundColor(nightGrade)\n        ctx.lineWidth = lineWidth\n        ctx.beginPath()\n        ctx.arc(leftOffset, topOffset, crossRadius, 0, 2 * Math.PI)\n        ctx.fill()\n        ctx.stroke()\n    }\n}\n\nfunction approximateHeight (x, line, timestamp, lowerIndex, upperIndex) {\n    const affinity = (timestamp - x[lowerIndex]) / (x[upperIndex] - x[lowerIndex])\n    return line[lowerIndex] + (line[upperIndex] - line[lowerIndex]) * affinity\n}\n\nexport function drawHeader (ctx, offsetW, offsetH, headerHeight, fontSize, font, text, getColor, nightGrade, zoomGrade) {\n\n    let ctxFont = ctx.font\n\n    ctx.fillStyle = getColor(nightGrade, zoomGrade)\n    ctx.font = 'bold ' + fontSize + 'px ' + font\n\n    ctx.fillText(text, offsetW, offsetH + (headerHeight + fontSize) / 2)\n\n    ctx.font = ctxFont\n}\n\nconst magnifierLineWidth = fromCssSize(2)\n\nexport function drawZoomOutControl (ctx, offsetW, offsetH, headerHeight, fontSize, font, getColor, nightGrade, zoomGrade, coords) {\n\n    let ctxFont = ctx.font\n\n    ctx.fillStyle = getColor(nightGrade, zoomGrade)\n    ctx.strokeStyle = ctx.fillStyle\n    ctx.font = 'bold ' + fontSize + 'px ' + font\n\n    const magnifierHeight = fontSize + 2 * magnifierLineWidth\n    const magnifierRadius = (fontSize - 2 * magnifierLineWidth) / 2\n\n    ctx.lineWidth = magnifierLineWidth\n    ctx.beginPath()\n\n    ctx.arc(offsetW + magnifierRadius, headerHeight / 2, magnifierRadius, 0, 2 * Math.PI)\n    ctx.moveTo(offsetW + magnifierRadius - 1.5 * magnifierLineWidth, headerHeight / 2)\n    ctx.lineTo(offsetW + magnifierRadius + 1.5 * magnifierLineWidth, headerHeight / 2)\n    ctx.moveTo(offsetW + 1.5 * magnifierRadius, headerHeight / 2 + 0.5 * magnifierRadius)\n    ctx.lineTo(offsetW + 2.5 * magnifierRadius, headerHeight / 2 + 1.5 * magnifierRadius)\n\n    ctx.stroke()\n\n    const zoomOutText = 'Zoom Out'\n\n    coords.x = offsetW\n    coords.toX = offsetW + ctx.measureText(zoomOutText).width + magnifierHeight\n    coords.y = offsetH\n    coords.toY = coords.y + headerHeight\n\n    ctx.fillText(zoomOutText, offsetW + magnifierHeight, offsetH + (headerHeight + fontSize) / 2)\n\n    ctx.font = ctxFont\n}\n\nexport function drawDateRangeSummary (ctx, offsetW, offsetH, width, headerHeight, headerFontSize, baseDate, xDiff, left, right, isRange, fontSize, font, getColor, nightGrade, zoomGrade) {\n\n    let ctxFont = ctx.font\n\n    ctx.fillStyle = getColor(nightGrade, zoomGrade)\n    ctx.font = 'bold ' + fontSize + 'px ' + font\n\n    const leftTimestamp = baseDate + xDiff * left\n    const rightTimestamp = baseDate + xDiff * right\n\n    let text\n\n    if (isRange) {\n        text = formatDate(leftTimestamp, 'date') + ' - ' + formatDate(rightTimestamp, 'date')\n    } else {\n        text = formatDate((leftTimestamp + rightTimestamp) / 2, 'weekdate')\n    }\n\n    ctx.fillText(text, offsetW + width - ctx.measureText(text).width, offsetH + (headerHeight + fontSize) / 2 + (headerFontSize - fontSize) / 2)\n\n    ctx.font = ctxFont\n}\n\nexport function drawStackedBars(ctx, x, bars, summedBars, lineGrades, lineColors,\n        width, height, offsetW, offsetH, pickedIndex,\n        left, right, maxHeight, zoomGrade, nightGrade, shrink) {\n\n    const scaleX = width / (right - left) / (x.length - 1)\n    const scaleY = height / maxHeight\n    const offsetLeft = -left * width / (right - left) + offsetW - scaleX\n    const offsetTop = offsetH + height\n\n    const fromIndex = getLowerIndex(x, left - offsetW / width)\n    const toIndex = getUpperIndex(x, right + offsetW / width)\n\n    let values = new Array(toIndex - fromIndex + 1)\n\n    let pickedAlpha = pickedIndex > 0 ? 1 : 0\n\n    let pickedVal = summedBars[pickedIndex - fromIndex + 1]\n\n    for (let j = bars.length - 1; j >= 0; j--) {\n\n        const bar = bars[j]\n\n        const label = bar[0]\n\n        ctx.beginPath()\n        ctx.fillStyle = lineColors[label](zoomGrade, pickedAlpha, nightGrade)\n\n        const dY = bar[fromIndex] * lineGrades[label]\n\n        let prevX = offsetLeft + scaleX * fromIndex\n        let prevY = offsetTop - summedBars[1] * scaleY\n\n        summedBars[1] -= dY\n\n        ctx.moveTo(prevX, prevY)\n        prevX += scaleX\n        ctx.lineTo(prevX, prevY)\n\n        for (let i = fromIndex + 1; i <= toIndex; i++) {\n\n            const dY = bar[i] * lineGrades[label]\n            let prevY = offsetTop - summedBars[i - fromIndex + 1] * scaleY\n            summedBars[i - fromIndex + 1] -= dY\n\n            ctx.lineTo(prevX, prevY)\n            prevX = prevX + scaleX\n            ctx.lineTo(prevX, prevY)\n        }\n\n        ctx.lineTo(prevX, offsetTop)\n        ctx.lineTo(offsetLeft + scaleX, offsetTop)\n        ctx.closePath()\n        ctx.fill()\n    }\n\n    if (pickedIndex >= fromIndex && pickedIndex <= toIndex) {\n\n        for (let j = bars.length - 1; j >= 0; j--) {\n\n            const bar = bars[j]\n\n            const label = bar[0]\n\n            ctx.beginPath()\n            ctx.fillStyle = lineColors[label](zoomGrade, 0, nightGrade)\n\n            const dY = bar[pickedIndex] * lineGrades[label]\n\n            let prevX = offsetLeft + scaleX * pickedIndex\n            let prevY = offsetTop - pickedVal * scaleY\n\n            pickedVal -= dY\n\n            ctx.moveTo(prevX, prevY)\n            prevX += scaleX\n            ctx.lineTo(prevX, prevY)\n\n            ctx.lineTo(prevX, offsetTop)\n            ctx.lineTo(prevX - scaleX, offsetTop)\n            ctx.closePath()\n            ctx.fill()\n        }\n    }\n}\n\nexport function drawArea (ctx, x, areas, summedAreas, referenceSummedAreas, lineGrades, lineColors,\n    width, height, offsetW, offsetH, fromIndex, toIndex,\n    left, right, zoomGrade, nightGrade, shrink) {\n\n    const fullWidth = width / (right - left)\n\n    const leftOffset = -fullWidth * left + offsetW\n    const topOffset = offsetH + height\n\n    const scaleX = fullWidth / (x.length - 2)\n\n    for (let j = areas.length - 1; j >= 0; j--) {\n\n        const area = areas[j]\n\n        ctx.fillStyle = lineColors[area[0]](zoomGrade)\n        ctx.beginPath()\n\n        const fullSum = referenceSummedAreas[1]\n        const currentSum = summedAreas[1]\n\n        let prevX = leftOffset + (fromIndex - 1) * scaleX\n\n        ctx.moveTo(prevX, topOffset - height * currentSum / fullSum)\n\n        summedAreas[1] -= area[fromIndex] * lineGrades[area[0]]\n\n        for (let i = fromIndex; i < toIndex; i++) {\n            const idx = i - fromIndex + 2\n            const fullSum = referenceSummedAreas[idx]\n            const currentSum = summedAreas[idx]\n            prevX = leftOffset + i * scaleX\n            ctx.lineTo(prevX, topOffset - height * currentSum / fullSum)\n            summedAreas[idx] -= area[i + 1] * lineGrades[area[0]]\n        }\n\n        ctx.lineTo(prevX, topOffset)\n        ctx.lineTo(leftOffset + (fromIndex - 1) * scaleX, topOffset)\n        ctx.closePath()\n\n        ctx.fill()\n    }\n}\n\nexport function drawPie (ctx, lineLabels, lineGrades, lineColors, offsetW, offsetH, width, radius, shares, zoomGrade, coords,\n     getLegendColor, getLegendBorderColor, getLegendFontColor, nightGrade, textSize, textFont) {\n\n    const centerX = offsetW + width / 2\n    const centerY = offsetH + radius\n\n    coords.centerX = centerX\n    coords.centerY = centerY\n\n    const startAngle = Math.PI * 7 / 6\n\n    let lastAngle = startAngle\n\n    for (let label in shares) {\n        const share = shares[label]\n        const angle = share.procent * 2 * Math.PI\n\n        const from = lastAngle\n        const to = lastAngle + angle\n\n        let xOffset = 0, yOffset = 0\n\n        if (share.grade > 0) {\n            const middle = (to + from) / 2\n            xOffset = Math.cos(middle) * 30 * share.grade\n            yOffset = Math.sin(middle) * 30 * share.grade\n\n\n        }\n\n        ctx.fillStyle = lineColors[label](zoomGrade)\n        ctx.beginPath()\n        ctx.arc(centerX + xOffset, centerY + yOffset, radius, from, to)\n        ctx.lineTo(centerX + xOffset, centerY + yOffset)\n        ctx.closePath()\n        ctx.fill()\n\n        if (share.grade > 0) {\n\n            const middle = (to + from) / 2\n            const offsetLeft = Math.cos(middle) * radius / 2\n            const offsetTop = Math.sin(middle) * radius / 2\n            drawPieLegend(ctx, lineLabels[label], share.sum, centerX + offsetLeft, centerY + offsetTop, getLegendColor, getLegendBorderColor, getLegendFontColor, nightGrade, zoomGrade, textSize, textFont, lineColors[label])\n        }\n\n        coords.angles[label] = { from: from, to: to }\n\n        lastAngle = to\n    }\n}\n\nexport function drawPieLegend (ctx, text, value, offsetLeft, offsetTop, getLegendColor, getLegendBorderColor, getLegendFontColor, nightGrade, zoomGrade, textSize, textFont, getColor) {\n    console.log(text, value, offsetLeft, offsetTop, getLegendColor, getLegendBorderColor, nightGrade, zoomGrade, textSize, textFont)\n\n    const ctxFont = ctx.font\n    const legendFont = textSize + 'px ' + textFont\n\n    ctx.fillStyle = getLegendColor(nightGrade, zoomGrade)\n    ctx.strokeStyle = getLegendBorderColor(zoomGrade)\n    ctx.lineWidth = 1\n    ctx.beginPath()\n    const width = ctx.measureText(text + value).width + 5 * legendPadding\n    drawRoundedRect(ctx, offsetLeft, offsetLeft + width, offsetTop, offsetTop + 2 * legendPadding + textSize, controlRadius, controlRadius)\n    ctx.closePath()\n    ctx.fill()\n    ctx.stroke()\n\n    ctx.font = legendFont\n    ctx.fillStyle = getLegendFontColor(nightGrade, zoomGrade)\n    ctx.fillText(text, offsetLeft + legendPadding,  offsetTop + legendPadding + textSize)\n\n\n    ctx.font = 'bold ' + legendFont\n    ctx.fillStyle = getColor(zoomGrade)\n    ctx.fillText(value, offsetLeft + width - legendPadding - ctx.measureText(value).width, offsetTop + legendPadding + textSize)\n\n    ctx.font = ctxFont\n}\n\nexport function getLowerIndex (x, procent) {\n    const val = x[1] + (x[x.length - 1] - x[1]) * procent\n    const idx = binarySearch(x, val, 1)\n    return x[idx] > val ? Math.max(idx - 1, 1) : idx\n}\n\nexport function getUpperIndex (x, procent) {\n    const val = x[1] + (x[x.length - 1] - x[1]) * procent\n    const idx = binarySearch(x, val, 1)\n    return x[idx] < val ? Math.min(idx + 1, x.length - 1) : idx\n}\n\n\nexport function getClosestIndex (x, procent) {\n    const val = x[1] + (x[x.length - 1] - x[1]) * procent\n    return binarySearch(x, val, 1)\n}\n\nfunction binarySearch (arr, val, i = 0) {\n\n    const len = arr.length\n\n    let j = len - 1\n\n    while (i < j) {\n        const m = (j + i) >>> 1\n        const v = arr[m]\n        if (v > val) {\n            j = m - 1\n        } else if (v < val) {\n            i = m + 1\n        } else {\n            return m\n        }\n    }\n\n    const diff = val - arr[i]\n\n    if (diff > 0) {\n        return i < len - 1 && diff > arr[i+1] - val ? i + 1 : i\n    } else {\n        return i > 0 && diff < arr[i-1] - val ? i - 1 : i\n    }\n}\n\nexport function getMaxY (x, lines, lineStates, left, right) {\n\n    let max = 0\n\n    const from = getLowerIndex(x, left)\n    const to = getUpperIndex(x, right)\n\n    for (const line of lines) {\n\n        if (!lineStates[line[0]]) {\n            continue\n        }\n\n        for (let i = from; i < to; i++) {\n            if (line[i] > max) {\n                max = line[i]\n            }\n        }\n    }\n\n    return max\n}\n\nexport function getMinY (x, lines, lineStates, left, right) {\n\n    let min = Infinity\n\n    const from = getLowerIndex(x, left)\n    const to = getUpperIndex(x, right)\n\n    for (const line of lines) {\n\n        if (!lineStates[line[0]]) {\n            continue\n        }\n\n        for (let i = from; i < to; i++) {\n            if (line[i] < min) {\n                min = line[i]\n            }\n        }\n    }\n\n    return min\n}\n\nexport function sumBars (x, bars, barGrades, left, right) {\n\n    const from = getLowerIndex(x, left)\n    const to = getUpperIndex(x, right)\n\n    const result = new Array(to - from + 2)\n\n    result[0] = 0\n\n    for (let i = from; i <= to; i++) {\n        let sum = 0\n        for (let j = 0; j < bars.length; j++) {\n            sum += bars[j][i] * barGrades[bars[j][0]]\n        }\n        result[i - from + 1] = sum\n        if (sum > result[0]) {\n            result[0] = sum\n        }\n    }\n\n    return result\n}\n\nfunction getDataType (data, type) {\n    const result = []\n    for (let column of data.columns) {\n        if (data.types[column[0]] === type) {\n            result.push(column)\n        }\n    }\n    return result\n}\n\nexport function getLines (data) {\n    return getDataType(data, 'line')\n}\n\nexport function getBars (data) {\n    return getDataType(data, 'bar')\n}\n\nexport function getAreas (data) {\n    return getDataType(data, 'area')\n}\n\nexport function getX (data) {\n    for (let column of data.columns) {\n        if (data.types[column[0]] === 'x') {\n            return column\n        }\n    }\n}\n\nfunction colorFromRGBA (r, g, b, a) {\n    return 'rgba(' + (r | 0) + ',' + (g | 0) + ',' + (b | 0) + ',' + a + ')'\n}\n\nexport function animatableAlphaHEXcolor (hex, alpha) {\n\n    const R = getR(hex)\n    const G = getG(hex)\n    const B = getB(hex)\n\n    return function (grade) {\n        return colorFromRGBA(R, G, B, alpha * grade)\n    }\n}\n\nexport function animatableHexColor (fromHex, fromAlpha, toHex, toAlpha) {\n\n    const fromR = getR(fromHex)\n    const fromG = getG(fromHex)\n    const fromB = getB(fromHex)\n    const dR = getR(toHex) - fromR\n    const dG = getG(toHex) - fromG\n    const dB = getB(toHex) - fromB\n    const dAlpha = toAlpha - fromAlpha\n\n    return function (grade, alphaGrade = 1) {\n        return colorFromRGBA(\n            fromR + dR * grade,\n            fromG + dG * grade,\n            fromB + dB * grade,\n            (fromAlpha + dAlpha * grade) * alphaGrade\n        )\n    }\n}\n\nexport function dynamicHexColor (fromHex, fromAlpha, toHex, toAlpha, toAltHex, toAltAlpha) {\n\n    const fromR = getR(fromHex)\n    const fromG = getG(fromHex)\n    const fromB = getB(fromHex)\n    const toDR = getR(toHex) - fromR\n    const toDG = getG(toHex) - fromG\n    const toDB = getB(toHex) - fromB\n    const toAltDR = getR(toAltHex) - fromR\n    const toAltDG = getG(toAltHex) - fromG\n    const toAltDB = getB(toAltHex) - fromB\n    const toDAlpha = toAlpha - fromAlpha\n    const toDAltAlpha = toAltAlpha - fromAlpha\n\n    return function (alpha, grade = 0, pickGrade = 0) {\n        const notPickGrade = 1 - pickGrade\n        return colorFromRGBA(\n            (fromR + toDR * grade) * notPickGrade +\n            (fromR + toAltDR * grade) * pickGrade,\n            (fromG + toDG * grade) * notPickGrade +\n            (fromG + toAltDG * grade) * pickGrade,\n            (fromB + toDB * grade) * notPickGrade +\n            (fromB + toAltDB * grade) * pickGrade,\n            ((fromAlpha + toDAlpha * grade) * notPickGrade +\n            (fromAlpha + toDAltAlpha * grade) * pickGrade) * alpha\n        )\n    }\n}\n\nfunction getR (hex) {\n    return parseInt(hex.slice(1, 3), 16)\n}\n\nfunction getG (hex) {\n    return parseInt(hex.slice(3, 5), 16)\n}\n\nfunction getB (hex) {\n    return parseInt(hex.slice(5), 16)\n}\n\nexport function dynamicHexColorWithBlending (fromHex, fromAlpha, mask1, alpha1, mask2, alpha2) {\n\n    const [ toHex, toAlpha ] = blendColors(fromHex, fromAlpha, mask1, alpha1)\n    const [ toAltHex, toAltAlpha ] = blendColors(fromHex, fromAlpha, mask2, alpha2)\n\n    return dynamicHexColor(fromHex, fromAlpha, toHex, toAlpha, toAltHex, toAltAlpha)\n}\n\n\nfunction blendColors (hex, a1, mask, a2) {\n\n    const r1 = getR(hex)\n    const g1 = getG(hex)\n    const b1 = getB(hex)\n    const r2 = getR(mask)\n    const g2 = getG(mask)\n    const b2 = getB(mask)\n\n    const a = 1 - (1 - a1) * (1 - a2)\n    const da2 = a2 / a\n    const da1 = a1 * (1 - a2) / a\n\n    const r = (r2 * da2 + r1 * da1) | 0\n    const g = (g2 * da2 + g1 * da1) | 0\n    const b = (b2 * da2 + b1 * da1) | 0\n\n    return [toHex(r, g, b), a]\n}\n\nfunction toHex (r, g, b) {\n    return [\n        '#',\n        padHexComponent(r.toString(16)),\n        padHexComponent(g.toString(16)),\n        padHexComponent(b.toString(16)),\n    ].join('')\n}\n\nfunction padHexComponent (c) {\n    return c.length > 1 ? c : '0' + c\n}\n","import {\n\n    getX,\n\n    controlWidth,\n    previewPadding,\n    calcYAlignment,\n\n    animatableAlphaHEXcolor,\n    animatableHexColor,\n    dynamicHexColor,\n\n    fromCssSize,\n    toCssSize,\n    getMaxY,\n    getMinY,\n    getClosestIndex,\n    getLowerIndex,\n    getUpperIndex,\n    drawLines,\n    drawScrollControlls,\n    drawGrid,\n    drawTranslateYLabels,\n    drawDates,\n    drawCheckboxes,\n    drawLinesLegend,\n    drawHeader,\n    drawZoomOutControl,\n    drawDateRangeSummary,\n    drawRuller,\n    drawLinesCross,\n} from './utils'\n\nexport default class AnimatedCanvas {\n\n    constructor (data, options) {\n\n        this.animations = {}\n        this.running = false\n        this.prevMs = undefined\n\n        this.el = document.createElement('div')\n        this.el.className = 'chart'\n\n        this.canvasEl = document.createElement('canvas')\n        this.ctx = this.canvasEl.getContext('2d')\n\n        this.el.appendChild(this.canvasEl)\n\n        this.setFont(options)\n        this.setSize(options)\n\n        this.headerText = options.header\n\n        this.details = data.details\n\n        data = data.overview\n\n        this.x = getX(data)\n\n        this.xDiff = this.x[this.x.length - 1] - this.x[1]\n\n        this.lineStates = {}\n        this.lineGrades = {}\n        this.lineColors = {}\n        this.lineLabels = data.names\n        this.checkboxes = []\n        this.checkboxLabelToIndex = {}\n        let i = 0\n        for (let label in data.names) {\n            this.lineStates[label] = true\n            this.lineGrades[label] = 1\n            this.lineColors[label] = animatableAlphaHEXcolor(data.colors[label], 1)\n            this.checkboxLabelToIndex[label] = i++\n            this.checkboxes.push({\n                id: label,\n                label: data.names[label],\n                getColor: dynamicHexColor(data.colors[label], 1, '#FFFFFF', 1, '#26333F', 1),\n                grade: 1,\n                x: 0,\n                y: 0,\n                toX: 0,\n                toY: 0,\n            })\n        }\n\n        this.currentLeft = this.scrollLeft = options.from\n        this.currentRight = this.scrollRight = options.to\n        this.currentRange = options.to - options.from\n\n        this.currentMaxHeight = this.fromMaxHeight = this.toMaxHeight = 0\n        this.maxHeight = 0\n\n        this.currentMinHeight = this.fromMinHeight = this.toMinHeight = 0\n        this.minHeight = 0\n\n        this.fromPeriod = this.toPeriod = 0\n        this.datesGrade = 1\n\n        this.moveDir = 'no'\n\n        this.legendShown = false\n        this.legendMoving = false\n        this.legendPosition = 0\n        this.pickedIndex = 0\n        this.legendCoordinates = {}\n\n        this.nightGrade = 0\n\n        this.zoomFromGrade = 1\n        this.zoomToGrade = 0\n        this.zoomedIndex = -1\n        this.zoomedData = null\n        this.ref = this\n        this.zoomState = 'overview'\n        this.zoomOutCoords = {}\n\n        this.yAlign = { top: 0, bottom: 0 }\n\n        this.longTapTime = 0\n        this.longTapTout = null\n\n        this.el.addEventListener('mousedown', e => this.onMouseDown(e))\n        this.el.addEventListener('mousemove', e => this.onMouseMove(e))\n        this.el.addEventListener('mouseup', e => this.onMouseUp(e))\n        this.el.addEventListener('mouseleave', e => this.onMouseLeave(e))\n\n        this.el.addEventListener('touchstart', e => this.onTouchStart(e))\n        this.el.addEventListener('touchmove', e => this.onTouchMove(e))\n        this.el.addEventListener('touchend', e => this.onTouchEnd(e))\n\n        this.animationDurationMs = 250\n\n        this.getGridColor = animatableHexColor('#182D3B', 0.1, '#FFFFFF', 0.1)\n        this.getAxisColor = animatableHexColor('#8E8E93', 1, '#A3B1C2', 0.6)\n        this.getRullerColor = animatableHexColor('#182D3B', 0.1, '#FFFFFF', 0.1)\n        this.getLegendBorderColor = animatableAlphaHEXcolor('#1E1E1E', 0.2)\n        this.getLegendFontColor = animatableHexColor('#000000', 1, '#FFFFFF', 1)\n        this.getLegendColor = animatableHexColor('#FFFFFF', 1, '#1F2A35', 1)\n        this.getBackgroundColor = animatableHexColor('#FFFFFF', 1, '#26333F', 1)\n        this.getPreviewBlurColor = animatableHexColor('#E2EEF9', 0.6, '#304259', 0.6)\n        this.getPreviewControlColor = animatableHexColor('#C0D1E1', 1, '#56626D', 1)\n        this.getZoomOutColor = animatableHexColor('#108BE3', 1, '#48AAF0', 1)\n    }\n\n    animate () {\n\n        if (this.running) {\n            return\n        }\n\n        this.running = true\n\n        const step = (ms) => {\n\n            if (!this.prevMs) {\n                this.prevMs = ms\n                requestAnimationFrame(step)\n                return\n            }\n\n            const diffMs = ms - this.prevMs\n            this.prevMs = ms\n\n            if (diffMs === 0) {\n                requestAnimationFrame(step)\n                return\n            }\n\n            let hasAnimations = false\n\n            for (const uniqName in this.animations) {\n                const anim = this.animations[uniqName]\n                if (!anim || anim.from === anim.to || anim.from === Infinity || anim.to === Infinity) {\n                    this.animations[uniqName] = null\n                    continue\n                }\n                hasAnimations = true\n                anim.container[anim.prop] += (anim.to - anim.from) * diffMs / anim.duration\n                if ((anim.container[anim.prop] - anim.from) / (anim.to - anim.from) >= 1) {\n                    anim.container[anim.prop] = anim.to\n                    anim.from = anim.to\n                }\n            }\n\n            if (hasAnimations) {\n                requestAnimationFrame(step)\n            } else {\n                this.prevMs = undefined\n                this.running = false\n            }\n\n            this.render()\n        }\n\n        requestAnimationFrame(step)\n    }\n\n    addAnimation (container, prop, to, duration, uniqName) {\n        this.animations[uniqName || prop] = {\n            container,\n            prop,\n            from: container[prop],\n            to,\n            duration\n        }\n    }\n\n    cancelAnimation (uniqName) {\n        delete this.animations[uniqName]\n    }\n\n    setSize (options) {\n\n        this.setBasicSizes(options)\n        this.setWidth(options.width)\n\n        this.height = fromCssSize(options.height)\n        this.canvasEl.height = this.height\n        this.canvasEl.style.height = options.height + 'px'\n\n        const previewOffsetH = options.headerHeight + options.height + options.fontSize * 2\n        const checkboxesOffsetH = previewOffsetH + options.previewHeight + options.padH\n        const height = checkboxesOffsetH + options.checkboxesAreaHeight\n\n        this.height = fromCssSize(height)\n        this.canvasEl.height = fromCssSize(height)\n        this.canvasEl.style.height = height + 'px'\n\n        this.chartHeight = fromCssSize(options.height - 2 * options.padH)\n        this.mainLinesOffsetH = this.headerHeight + this.padH\n        this.datesOffsetH = this.headerHeight + this.chartHeight + this.padH + 1.5 * this.textSize\n        this.previewOffsetH = fromCssSize(previewOffsetH)\n        this.checkboxesOffsetH = fromCssSize(checkboxesOffsetH)\n\n        this.border = null\n    }\n\n    setFont (options) {\n        this.textSize = fromCssSize(options.fontSize)\n        this.textFont = options.fontFamily\n        this.ctxFont = this.textSize + 'px ' + options.fontFamily\n        this.ctx.font = this.ctxFont\n    }\n\n    setWidth (width, resize) {\n\n        this.width = fromCssSize(width)\n        this.canvasEl.width = this.width\n        this.canvasEl.style.width = width + 'px'\n\n        this.chartWidth = this.width - 2 * this.padW\n\n        this.ctx.font = this.ctxFont\n        this.ctx.lineJoin = 'bevel'\n\n        if (resize) {\n            this.border = null\n            this.render()\n        }\n    }\n\n    setBasicSizes (options) {\n        this.padW = fromCssSize(options.padW)\n        this.padH = fromCssSize(options.padH)\n        this.datesDiff = fromCssSize(options.datesDiff)\n        this.previewPadW = fromCssSize(options.previewPadW)\n        this.previewPadH = fromCssSize(options.previewPadH)\n        this.previewHeight = fromCssSize(options.previewHeight)\n        this.checkboxHeight = fromCssSize(options.checkboxHeight)\n        this.checkboxRadius = fromCssSize(options.checkboxRadius)\n        this.checkboxMargin = fromCssSize(options.checkboxMargin)\n        this.lineWidth = fromCssSize(options.lineWidth)\n        this.rullerWidth = fromCssSize(options.rullerWidth)\n        this.previewLineWidth = fromCssSize(options.previewLineWidth)\n        this.gridLineWidth = fromCssSize(options.gridLineWidth)\n        this.legendTextSize = fromCssSize(options.legendFontSize)\n        this.headerFontSize = fromCssSize(options.headerFontSize)\n        this.dateRangeFontSize = fromCssSize(options.dateRangeFontSize)\n        this.headerHeight = fromCssSize(options.headerHeight)\n    }\n\n    move (ref, left, right) {\n        ref.currentLeft = left\n        ref.currentRight = right\n        ref.currentRange = right - left\n        this.animate()\n    }\n\n    toggle (ref, label) {\n        let isLast = true\n        for (let checkbox of this.checkboxes) {\n            if (checkbox.id !== label && this.lineStates[checkbox.id]) {\n                isLast = false\n            }\n        }\n        if (isLast) {\n            return\n        }\n        ref.lineStates[label] = !ref.lineStates[label]\n        const to = +ref.lineStates[label]\n        this.addAnimation(ref.lineGrades, label, to, this.animationDurationMs)\n        this.addAnimation(ref.checkboxes[ref.checkboxLabelToIndex[label]], 'grade', to, this.animationDurationMs, 'checkbox_' + label)\n        this.animate()\n    }\n\n    zoom (index, direction) {\n\n        if (direction) {\n            this.addAnimation(this, 'zoomFromGrade', 0, this.animationDurationMs)\n            if (index !== this.zoomedIndex) {\n                this.zoomedData = this.getDetails(index)\n                this.zoomedIndex = index\n            }\n            this.ref = this.zoomedData\n            this.addAnimation(this, 'zoomToGrade', 1, this.animationDurationMs)\n            this.zoomState = 'details'\n        } else {\n            this.ref = this\n            this.addAnimation(this, 'zoomFromGrade', 1, this.animationDurationMs)\n            this.addAnimation(this, 'zoomToGrade', 0, this.animationDurationMs)\n            this.zoomState = 'overview'\n        }\n\n        this.animate()\n    }\n\n    render () {\n\n        this.ctx.clearRect(0, 0, this.width, this.height)\n\n        if (this.zoomFromGrade > 0) {\n            this.calc(this)\n\n            drawHeader(this.ctx, this.padW, 0, this.headerHeight, this.headerFontSize, this.textFont, this.headerText, this.getLegendFontColor, this.nightGrade, this.zoomFromGrade)\n            drawDateRangeSummary(this.ctx, this.padW, 0, this.chartWidth, this.headerHeight, this.headerFontSize, this.x[1], this.xDiff, this.currentLeft, this.currentRight, true, this.dateRangeFontSize, this.textFont, this.getLegendFontColor, this.nightGrade, this.zoomFromGrade)\n\n            this.drawView(this, false, 'monthdate', 'shortweekdate', this.zoomFromGrade)\n        }\n\n        if (this.zoomToGrade > 0) {\n            const details = this.zoomedData\n            this.calc(details)\n\n            drawZoomOutControl(this.ctx, this.padW, 0, this.headerHeight, this.headerFontSize, this.textFont, this.getZoomOutColor, this.nightGrade, this.zoomToGrade, this.zoomOutCoords)\n            drawDateRangeSummary(this.ctx, this.padW, 0, this.chartWidth, this.headerHeight, this.headerFontSize, details.x[1], details.xDiff, details.currentLeft, details.currentRight, false, this.dateRangeFontSize, this.textFont, this.getLegendFontColor, this.nightGrade, this.zoomToGrade)\n\n            this.drawView(details, true, 'hours', 'hours', this.zoomToGrade)\n        }\n\n        this.drawCheckboxes(this.ref, true, 'hours', 'hours', this.zoomToGrade)\n    }\n\n    drawView (ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade) {\n\n        this.drawGrid(ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade)\n\n        this.drawChart(ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade)\n\n        this.drawDates(ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade)\n\n        this.drawPreview(ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade)\n\n        this.drawScroll(ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade)\n\n        if (ref.legendShown && (zoomGrade < 1 || (ref.legendPosition >= ref.currentLeft && ref.legendPosition <= ref.currentRight))) {\n            this.drawLegend(ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade)\n        }\n    }\n\n    drawGrid (ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade) {\n\n        drawGrid(this.ctx, this.padW, this.headerHeight, this.chartWidth, this.chartHeight + this.padH, 5,\n            ref.fromMaxHeight, ref.toMaxHeight, ref.currentMaxHeight,\n            ref.fromMinHeight, ref.toMinHeight, ref.currentMinHeight,\n            ref.yAlign.max, ref.yAlign.min, ref.yAlign.top, ref.yAlign.bottom,\n            this.getGridColor, this.getAxisColor, false, 1, this.gridLineWidth, this.textSize, this.nightGrade, zoomGrade)\n    }\n\n    drawChart (ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade) {}\n\n    drawDates (ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade) {\n\n        // redraw only if moving\n        drawDates(this.ctx, this.padW, this.datesOffsetH,\n            this.chartWidth / ref.currentRange, ref.x[1], ref.xDiff, yAxisdateFormat, ref.currentLeft, ref.currentRight,\n            ref.fromPeriod, ref.toPeriod, ref.datesGrade, this.getAxisColor, this.nightGrade, zoomGrade)\n    }\n\n    drawPreview (ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade) {}\n\n    drawScroll (ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade) {\n\n        // redraw only if moving or checked\n        drawScrollControlls(this.ctx, this.padW, this.previewOffsetH, this.chartWidth, this.previewHeight,\n            ref.currentLeft, ref.currentRight, this.getPreviewBlurColor, this.getPreviewControlColor, this.nightGrade, zoomGrade)\n    }\n\n    drawLegend (ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade) {}\n\n    drawCheckboxes (ref) {\n\n        // redraw only if checked\n        drawCheckboxes(this.ctx, this.padW, ref.checkboxesOffsetH, this.chartWidth,\n            ref.checkboxes, this.checkboxHeight, this.checkboxRadius, this.checkboxMargin, this.textFont, this.nightGrade, 1)\n    }\n\n    calc (ref) {\n        this.calcDates(ref)\n    }\n\n    calcDates (ref) {\n\n        if (ref.currentRange < (1 / ref.x.length)) {\n            ref.fromPeriod = 0\n            return\n        }\n\n        if (ref.fromPeriod === 0) {\n            ref.fromPeriod = ref.toPeriod =\n                this.datesDiff * (ref.currentRange) / this.chartWidth\n        }\n\n        const currentDiff = ref.toPeriod * this.chartWidth / ref.currentRange\n\n        if (currentDiff >= 2 * this.datesDiff) {\n            ref.fromPeriod = ref.toPeriod\n            ref.toPeriod = ref.toPeriod / 2\n            ref.datesGrade = 0\n            const uniqName = this.zoomState + 'datesGrade'\n            this.addAnimation(ref, 'datesGrade', 1, this.animationDurationMs, uniqName)\n            this.animate()\n        } else if (currentDiff < this.datesDiff) {\n            ref.fromPeriod = ref.toPeriod\n            ref.toPeriod = ref.toPeriod * 2\n            ref.datesGrade = 0\n            const uniqName = this.zoomState + 'datesGrade'\n            this.addAnimation(ref, 'datesGrade', 1, this.animationDurationMs, uniqName)\n            this.animate()\n        }\n    }\n\n    mergeZoomedColumns (from, to) {\n\n        const columns = [], lineIdToIndexMap = {}\n\n        for (let i = from; i <= to; i++) {\n            const timestamp = this.x[i]\n            const details = this.details[timestamp]\n            for (const column of details.columns) {\n                if (lineIdToIndexMap[column[0]] === undefined) {\n                    lineIdToIndexMap[column[0]] = columns.length\n                    columns.push(column.slice())\n                } else {\n                    let k = column.length\n                    const to = columns[lineIdToIndexMap[column[0]]]\n                    const offset = to.length - 1\n                    while (k-- > 1) {\n                        to[offset + k] = column[k]\n                    }\n                }\n            }\n        }\n\n        return columns\n    }\n\n    getDetails (index) {\n\n        let fromLeft = index - 3\n        let toRight = index + 3\n\n        if (fromLeft < 1) {\n            toRight += 1 - fromLeft\n            fromLeft = 1\n        } else if (toRight >= this.x.length) {\n            fromLeft -= toRight - this.x.length + 1\n            toRight = this.x.length - 1\n        }\n\n        let scrollLeft, scrollRight\n        const currentLeft = scrollLeft = (index - fromLeft) / 7\n        const currentRight = scrollRight = currentLeft + 1 / 7\n        const currentRange = currentRight - currentLeft\n\n        return {\n\n            x: this.x,\n            xDiff: this.x[this.x.length - 1] - this.x[1],\n\n            fromLeft, toRight,\n            currentLeft, currentRight, currentRange,\n\n            lineStates: this.lineStates,\n            lineGrades: this.lineGrades,\n            lineColors: this.lineColors,\n            lineLabels: this.lineLabels,\n\n            checkboxesOffsetH: this.checkboxesOffsetH,\n            checkboxes: this.checkboxes,\n            checkboxLabelToIndex: this.checkboxLabelToIndex,\n\n            fromPeriod: 0,\n            toPeriod: 0,\n            datesGrade: 1,\n\n            moveDir: 'no',\n            scrollStart: 0,\n            scrollLeft, scrollRight,\n\n            legendShown: false,\n            legendMoving: false,\n            legendCoordinates: {},\n            pickedIndex: -1,\n            legendPosition: 0,\n            yAlign: {},\n        }\n    }\n\n    setNoMove (ref) {\n        ref.moveDir = 'no'\n        ref.scrollLeft = ref.currentLeft\n        ref.scrollRight = ref.currentRight\n    }\n\n    setMoveDir (ref, dir, position) {\n        ref.moveDir = dir\n        ref.scrollStart = position\n        ref.scrollLeft = ref.currentLeft\n        ref.scrollRight = ref.currentRight\n    }\n\n    setMove (ref, movePosition) {\n\n        if (ref.moveDir === 'no') {\n            return\n        }\n\n        let from = ref.scrollLeft, to = ref.scrollRight\n\n        const offsetDiff = fromCssSize(movePosition - ref.scrollStart)\n        const dOffset = offsetDiff / this.chartWidth\n        const bound = 2 * controlWidth / this.chartWidth\n\n        if (ref.moveDir === 'left') {\n            from += dOffset\n            if (from + bound > to) {\n                from = to - bound\n            }\n            if (from < 0) {\n                from = 0\n            }\n        } else if (ref.moveDir === 'right') {\n            to += dOffset\n            if (from + bound > to) {\n                to = from + bound\n            }\n            if (to > 1) {\n                to = 1\n            }\n        } else {\n            from += dOffset\n            to += dOffset\n            if (from < 0) {\n                to = to - from\n                from = 0\n            }\n            if (to > 1) {\n                from = from - (to - 1)\n                to = 1\n            }\n        }\n\n        this.move(ref, from, to)\n    }\n\n    getDir (ref, x, y) {\n\n        const border = this.getBoundingClientRect()\n\n        const canvasX = fromCssSize(x - border.left)\n        const canvasY = fromCssSize(y - border.top)\n\n        const fromW = this.padW + ref.currentLeft * this.chartWidth - controlWidth\n        const toW = this.padW + ref.currentRight * this.chartWidth + controlWidth\n        const fromH = this.previewOffsetH - previewPadding\n        const toH = this.previewOffsetH + this.previewHeight + previewPadding\n\n        if (canvasX < fromW || canvasX > toW || canvasY < fromH || canvasY > toH) {\n            return 'no'\n        }\n\n        if (canvasX < fromW + 2 * controlWidth) {\n            return 'left'\n        } else if (canvasX > toW - 2 * controlWidth) {\n            return 'right'\n        } else {\n            return 'both'\n        }\n    }\n\n    getLabel (ref, x, y) {\n\n        const border = this.getBoundingClientRect()\n\n        const canvasX = fromCssSize(x - border.left)\n        const canvasY = fromCssSize(y - border.top)\n\n        if (canvasY < ref.checkboxesOffsetH) {\n            return\n        }\n        for (const c of ref.checkboxes) {\n            if (c.x <= canvasX && c.toX >= canvasX && c.y <= canvasY && c.toY >= canvasY ) {\n                return c.id\n            }\n        }\n\n        return\n    }\n\n    setScroll (ref, e) {\n        const dir = this.getDir(ref, e.clientX, e.clientY)\n        if (dir === 'no') {\n            return\n        }\n        this.setMoveDir(ref, dir, e.clientX)\n    }\n\n    clickCheckbox (e) {\n        const label = this.getLabel(this.ref, e.clientX, e.clientY)\n        if (label) {\n            this.toggle(this.ref, label)\n        }\n    }\n\n    unclickCheckbox (e) {\n        const label = this.getLabel(this.ref, e.clientX, e.clientY)\n        if (label) {\n            if (!this.lineStates[label]) {\n                this.toggle(this.ref, label)\n            }\n            for (const checkbox of this.checkboxes) {\n                if (checkbox.id !== label && this.lineStates[checkbox.id]) {\n                    this.toggle(this.ref, checkbox.id)\n                }\n            }\n        }\n    }\n\n    clickZoomOut (e) {\n\n        const border = this.getBoundingClientRect()\n\n        const canvasX = fromCssSize(e.clientX - border.left)\n        const canvasY = fromCssSize(e.clientY - border.top)\n\n        const c = this.zoomOutCoords\n\n        if (c.x <= canvasX && c.toX >= canvasX && c.y <= canvasY && c.toY >= canvasY ) {\n            this.zoom(this.pickedIndex, false)\n        }\n    }\n\n    clickLegend (ref, e) {\n\n        if (!ref.legendShown) {\n            return false\n        }\n\n        const border = this.getBoundingClientRect()\n\n        const canvasX = fromCssSize(e.clientX - border.left)\n        const canvasY = fromCssSize(e.clientY - border.top)\n\n        const c = ref.legendCoordinates\n\n        if (canvasX >= c.x && canvasX <= c.toX && canvasY >= c.y && canvasY <= c.toY) {\n            if (ref === this) {\n                this.zoom(this.pickedIndex, true)\n            }\n            return true\n        }\n\n        return false\n    }\n\n    showLegend (ref, e) {\n\n        if (ref.moveDir !== 'no') {\n            return\n        }\n\n        const bound = this.el.getBoundingClientRect()\n\n        const canvasY = fromCssSize(e.clientY - bound.top)\n\n        if (canvasY > this.padH + this.chartHeight || canvasY < this.legendCoordinates.y) {\n            return\n        }\n\n        const offsetLeft = fromCssSize(e.clientX - bound.left)\n\n        this.setPickedIndex(ref, offsetLeft)\n\n        this.cancelAnimation('legendPosition')\n\n        ref.legendMoving = true\n        ref.legendShown = true\n\n        this.render()\n    }\n\n    moveLegend (ref, e) {\n\n        if (!ref.legendMoving) {\n            return\n        }\n\n        const bound = this.el.getBoundingClientRect()\n\n        const canvasY = fromCssSize(e.clientY - bound.top)\n\n        if (canvasY > this.padH + this.chartHeight || canvasY <= this.headerHeight) {\n            return\n        }\n\n        const offsetLeft = fromCssSize(e.clientX - bound.left)\n\n        this.setPickedIndex(ref, offsetLeft)\n\n        this.render()\n    }\n\n    setPickedIndex (ref, offsetLeft) {\n\n        let position = ref.currentLeft + (offsetLeft - this.padW) / this.chartWidth * ref.currentRange\n\n        if (position < ref.currentLeft) {\n            position = ref.currentLeft\n        } else if (position > ref.currentRight) {\n            position = ref.currentRight\n        }\n\n        ref.legendPosition = position\n        ref.pickedIndex = getClosestIndex(ref.x, position)\n    }\n\n    stopMovingLegend (ref) {\n        if (!ref.legendMoving) { return }\n        ref.legendMoving = false\n        const destinationPosition = (ref.x[ref.pickedIndex] - ref.x[1]) / ref.xDiff\n        const uniqName = this.zoomState + 'legendPosition'\n        this.addAnimation(ref, 'legendPosition', destinationPosition, this.animationDurationMs, uniqName)\n        this.animate()\n    }\n\n    onMouseDown (e) {\n        e.stopPropagation()\n        this.setScroll(this.ref, e)\n        if (!this.clickLegend(this.ref, e)) {\n            this.showLegend(this.ref, e)\n        }\n        this.longTapTout = setTimeout(() => {\n            this.unclickCheckbox(e)\n        }, 500)\n    }\n\n    onMouseMove (e) {\n        e.stopPropagation()\n        this.setMove(this.ref, e.clientX)\n        this.moveLegend(this.ref, e)\n        clearTimeout(this.longTapTout)\n    }\n\n    onMouseUp (e) {\n        e.stopPropagation()\n        this.setNoMove(this.ref)\n        this.stopMovingLegend(this.ref)\n        this.clickCheckbox(e)\n        this.clickZoomOut(e)\n        clearTimeout(this.longTapTout)\n    }\n\n    onMouseLeave (e) {\n        e.stopPropagation()\n        this.setNoMove(this.ref)\n        clearTimeout(this.longTapTout)\n    }\n\n    onTouchStart (e) {\n        e.stopPropagation()\n        const ev = e.targetTouches[0]\n        this.setScroll(this.ref, ev)\n        if (!this.clickLegend(this.ref, ev)) {\n            this.showLegend(this.ref, ev)\n        }\n        this.longTapTout = setTimeout(() => {\n            this.unclickCheckbox(ev)\n        }, 500)\n    }\n\n    onTouchMove (e) {\n        e.stopPropagation()\n        const ev = e.targetTouches[0]\n        this.setMove(this.ref, ev.clientX)\n        this.moveLegend(this.ref, ev)\n        clearTimeout(this.longTapTout)\n    }\n\n    onTouchEnd (e) {\n        e.stopPropagation()\n        e.preventDefault()\n        const ev = e.changedTouches[0]\n        this.setNoMove(this.ref)\n        this.stopMovingLegend(this.ref)\n        this.clickCheckbox(ev)\n        this.clickZoomOut(ev)\n        clearTimeout(this.longTapTout)\n    }\n\n    nightMode (enable) {\n        if (enable) {\n            this.addAnimation(this, 'nightGrade', 1, this.animationDurationMs)\n        } else {\n            this.addAnimation(this, 'nightGrade', 0, this.animationDurationMs)\n        }\n        this.animate()\n    }\n\n    getBoundingClientRect () {\n        return this.canvasEl.getBoundingClientRect()\n    }\n}\n","import AnimatableChart from '../animatable_chart'\nimport {\n\n    getX,\n    getLines,\n\n    controlWidth,\n    previewPadding,\n    calcYAlignment,\n\n    animatableAlphaHEXcolor,\n    animatableHexColor,\n    dynamicHexColor,\n\n    fromCssSize,\n    toCssSize,\n    getMaxY,\n    getMinY,\n    getClosestIndex,\n    getLowerIndex,\n    getUpperIndex,\n    drawLines,\n    drawScrollControlls,\n    drawGrid,\n    drawTranslateYLabels,\n    drawDates,\n    drawCheckboxes,\n    drawLinesLegend,\n    drawHeader,\n    drawZoomOutControl,\n    drawDateRangeSummary,\n    drawRuller,\n    drawLinesCross,\n} from '../utils'\n\nexport default class LineChart extends AnimatableChart {\n\n    constructor (data, options) {\n        super(data, options)\n\n        this.lines = getLines(data.overview)\n\n        this.currentMaxHeight = this.fromMaxHeight = this.toMaxHeight =\n            getMaxY(this.x, this.lines, this.lineStates, this.currentLeft, this.currentRight)\n        this.maxHeight = getMaxY(this.x, this.lines, this.lineStates, 0, 1)\n\n        this.currentMinHeight = this.fromMinHeight = this.toMinHeight =\n            getMinY(this.x, this.lines, this.lineStates, this.currentLeft, this.currentRight)\n        this.minHeight = getMinY(this.x, this.lines, this.lineStates, 0, 1)\n    }\n\n    drawChart (ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade) {\n\n        drawLines(this.ctx, ref.x, ref.lines, this.lineStates, this.lineGrades, this.lineColors,\n            this.chartWidth, this.chartHeight + this.padH - ref.yAlign.top, this.padW, this.headerHeight + ref.yAlign.top, ref.yAlign.bottom,\n            ref.currentLeft, ref.currentRight, ref.xDiff * ref.currentRange, ref.currentMaxHeight, ref.currentMinHeight, this.lineWidth, zoomGrade, shrink)\n    }\n\n    drawPreview (ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade) {\n\n        drawLines(this.ctx, ref.x, ref.lines, this.lineStates, this.lineGrades, this.lineColors,\n            this.chartWidth, this.previewHeight, this.padW, this.previewOffsetH, 0,\n            0, 1, ref.xDiff, ref.maxHeight, ref.minHeight, this.previewLineWidth, zoomGrade, shrink)\n    }\n\n    drawLegend (ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade) {\n\n        drawRuller(this.ctx, this.padW, this.headerHeight + this.padH, this.rullerWidth, this.chartHeight, this.chartWidth,\n            ref.currentLeft, ref.currentRight, ref.currentRange, ref.legendPosition, this.getRullerColor, zoomGrade, this.nightGrade)\n\n        for (let line of ref.lines) {\n            drawLinesCross(this.ctx, ref.x, line, this.lineLabels, this.lineStates, this.lineGrades, this.lineColors, this.lineWidth,\n                ref.legendPosition, ref.pickedIndex, this.padW, this.headerHeight, ref.currentLeft, ref.currentRight, ref.currentRange,\n                this.chartWidth, this.chartHeight + this.padH, ref.xDiff,\n                ref.yAlign.top, ref.yAlign.bottom, ref.currentMaxHeight, ref.currentMinHeight,\n                this.getBackgroundColor, this.nightGrade, zoomGrade)\n        }\n\n        drawLinesLegend(this.ctx, ref.x, [ref.lines], this.lineLabels, this.lineStates, this.lineGrades, this.lineColors, this.lineWidth,\n            ref.legendPosition, ref.pickedIndex, this.padW, this.headerHeight + this.padH, ref.currentLeft, ref.currentRight, ref.currentRange,\n            this.chartWidth, this.chartHeight + this.padH, ref.xDiff,\n            [[ref.yAlign.top, ref.yAlign.bottom, ref.currentMaxHeight, ref.currentMinHeight]],\n            this.legendTextSize, this.textFont, this.getLegendColor, this.getLegendBorderColor, this.getLegendFontColor, this.getBackgroundColor,\n            zoomGrade, this.nightGrade, ref.legendCoordinates, zoomGrade, legendDateFormat, ref === this)\n    }\n\n    calc (ref) {\n        super.calc(ref)\n        this.calcHeight(ref)\n        this.calcYAlignment(ref)\n    }\n\n    calcYAlignment(ref) {\n\n        const chartHeight = this.chartHeight + this.padH\n        const linesDiff = chartHeight / 6\n\n        calcYAlignment(ref.toMaxHeight, ref.toMinHeight,\n            chartHeight - this.padH, this.padH, chartHeight - linesDiff, linesDiff, chartHeight, ref.yAlign)\n    }\n\n    calcHeight (ref) {\n\n        const visibleMaxHeight = getMaxY(ref.x, ref.lines, ref.lineStates, ref.currentLeft, ref.currentRight)\n\n        if (visibleMaxHeight !== ref.toMaxHeight) {\n            const uniqName = this.zoomState + 'currentMaxHeight'\n            this.addAnimation(ref, 'currentMaxHeight', visibleMaxHeight, this.animationDurationMs, uniqName)\n            this.animate()\n        }\n\n        const visibleMinHeight = getMinY(ref.x, ref.lines, ref.lineStates, ref.currentLeft, ref.currentRight)\n\n        if (visibleMinHeight !== ref.toMinHeight) {\n            const uniqName = this.zoomState + 'currentMinHeight'\n            this.addAnimation(ref, 'currentMinHeight', visibleMinHeight, this.animationDurationMs, uniqName)\n            this.animate()\n        }\n\n        const maxAnim = this.animations[this.zoomState + 'currentMaxHeight']\n\n        if (maxAnim) {\n            ref.fromMaxHeight = maxAnim.from\n            ref.toMaxHeight = maxAnim.to\n        }\n\n        const minAnim = this.animations[this.zoomState + 'currentMinHeight']\n\n        if (minAnim) {\n            ref.fromMinHeight = minAnim.from\n            ref.toMinHeight = minAnim.to\n        }\n    }\n\n    getDetails (index) {\n\n        const details = super.getDetails(index)\n\n        const columns = this.mergeZoomedColumns(details.fromLeft, details.toRight)\n\n        const data = { columns, types: this.details[this.x[1]].types }\n        const x = getX(data)\n        const lines = getLines(data)\n        const rangeMaxHeight = getMaxY(x, lines, this.lineStates, details.currentLeft, details.currentRight)\n        const rangeMinHeight = getMinY(x, lines, this.lineStates, details.currentLeft, details.currentRight)\n\n        const maxHeight = getMaxY(x, lines, this.lineStates, 0, 1)\n        const minHeight = getMinY(x, lines, this.lineStates, 0, 1)\n\n        let fromMaxHeight, toMaxHeight, currentMaxHeight,\n            fromMinHeight, toMinHeight, currentMinHeight\n\n        fromMaxHeight = toMaxHeight = currentMaxHeight = rangeMaxHeight\n        fromMinHeight = toMinHeight = currentMinHeight = rangeMinHeight\n\n        const xDiff = x[x.length - 1] - x[1]\n\n        details.x = x\n        details.xDiff = xDiff\n        details.lines = lines\n        details.maxHeight = maxHeight\n        details.minHeight = minHeight\n        details.fromMaxHeight = fromMaxHeight\n        details.toMaxHeight = toMaxHeight\n        details.currentMaxHeight = currentMaxHeight\n        details.fromMinHeight = fromMinHeight\n        details.toMinHeight = toMinHeight\n        details.currentMinHeight = currentMinHeight\n\n        return details\n    }\n}\n","import LineChart from './line'\nimport {\n\n    calcYAlignment,\n    animatableHexColor,\n\n    fromCssSize,\n    toCssSize,\n    getMaxY,\n    getMinY,\n    getClosestIndex,\n    getLowerIndex,\n    getUpperIndex,\n    drawLines,\n    drawScrollControlls,\n    drawGrid,\n    drawTranslateYLabels,\n    drawDates,\n    drawCheckboxes,\n    drawLinesLegend,\n    drawHeader,\n    drawZoomOutControl,\n    drawDateRangeSummary,\n    drawRuller,\n    drawLinesCross,\n} from '../utils'\n\nconst animationDurationMs = 250\n\nexport default class LineYScaled extends LineChart {\n\n    constructor (data, options) {\n\n        const lines2 = data.overview.columns.splice(2, 1)\n\n        const details2 = {}\n\n        for (let timestamp in data.details) {\n            details2[timestamp] = data.details[timestamp].columns.splice(2, 1)[0]\n        }\n\n        super(data, options)\n\n        this.lines2 = lines2\n        this.details2 = details2\n\n        this.currentMaxHeight2 = this.fromMaxHeight2 = this.toMaxHeight2 =\n            getMaxY(this.x, lines2, this.lineStates, this.currentLeft, this.currentRight)\n        this.maxHeight2 = getMaxY(this.x, lines2, this.lineStates, 0, 1)\n\n        this.currentMinHeight2 = this.fromMinHeight2 = this.toMinHeight2 =\n            getMinY(this.x, lines2, this.lineStates, this.currentLeft, this.currentRight)\n        this.minHeight2 = getMinY(this.x, lines2, this.lineStates, 0, 1)\n\n        this.yAlign2 = {}\n\n        this.getAxisColor1 = animatableHexColor(data.overview.colors['y0'], 1, data.overview.colors['y0'], 1)\n        this.getAxisColor2 = animatableHexColor(data.overview.colors['y1'], 1, data.overview.colors['y0'], 1)\n    }\n\n    drawGrid (ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade) {\n\n        drawGrid(this.ctx, this.padW, this.headerHeight, this.chartWidth, this.chartHeight + this.padH, 5,\n            ref.fromMaxHeight, ref.toMaxHeight, ref.currentMaxHeight,\n            ref.fromMinHeight, ref.toMinHeight, ref.currentMinHeight,\n            ref.yAlign.max, ref.yAlign.min, ref.yAlign.top, ref.yAlign.bottom,\n            this.getGridColor, this.getAxisColor1, false, this.lineGrades['y0'], this.gridLineWidth, this.textSize, this.nightGrade, zoomGrade)\n\n        drawGrid(this.ctx, this.padW, this.headerHeight, this.chartWidth, this.chartHeight + this.padH, 5,\n            ref.fromMaxHeight2, ref.toMaxHeight2, ref.currentMaxHeight2,\n            ref.fromMinHeight2, ref.toMinHeight2, ref.currentMinHeight2,\n            ref.yAlign2.max, ref.yAlign2.min, ref.yAlign2.top, ref.yAlign2.bottom,\n            this.getGridColor, this.getAxisColor2, true, this.lineGrades['y1'], this.gridLineWidth, this.textSize, this.nightGrade, zoomGrade)\n    }\n\n    drawChart (ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade) {\n\n        drawLines(this.ctx, ref.x, ref.lines2, this.lineStates, this.lineGrades, this.lineColors,\n            this.chartWidth, this.chartHeight + this.padH - ref.yAlign2.top, this.padW, this.headerHeight + ref.yAlign2.top, ref.yAlign2.bottom,\n            ref.currentLeft, ref.currentRight, ref.xDiff * ref.currentRange,\n            ref.currentMaxHeight2, ref.currentMinHeight2, this.lineWidth, zoomGrade, shrink)\n\n        drawLines(this.ctx, ref.x, ref.lines, this.lineStates, this.lineGrades, this.lineColors,\n            this.chartWidth, this.chartHeight + this.padH - ref.yAlign.top, this.padW, this.headerHeight + ref.yAlign.top, ref.yAlign.bottom,\n            ref.currentLeft, ref.currentRight, ref.xDiff * ref.currentRange, ref.currentMaxHeight, ref.currentMinHeight, this.lineWidth, zoomGrade, shrink)\n    }\n\n    drawPreview (ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade) {\n\n        drawLines(this.ctx, ref.x, ref.lines2, this.lineStates, this.lineGrades, this.lineColors,\n            this.chartWidth, this.previewHeight, this.padW, this.previewOffsetH, 0,\n            0, 1, ref.xDiff, ref.maxHeight2, ref.minHeight2, this.previewLineWidth, zoomGrade, shrink)\n\n        drawLines(this.ctx, ref.x, ref.lines, this.lineStates, this.lineGrades, this.lineColors,\n            this.chartWidth, this.previewHeight, this.padW, this.previewOffsetH, 0,\n            0, 1, ref.xDiff, ref.maxHeight, ref.minHeight, this.previewLineWidth, zoomGrade, shrink)\n    }\n\n    drawLegend (ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade) {\n\n        drawRuller(this.ctx, this.padW, this.headerHeight + this.padH, this.rullerWidth, this.chartHeight, this.chartWidth,\n            ref.currentLeft, ref.currentRight, ref.currentRange, ref.legendPosition, this.getRullerColor, zoomGrade, this.nightGrade)\n\n        for (let line of ref.lines) {\n            drawLinesCross(this.ctx, ref.x, line, this.lineLabels, this.lineStates, this.lineGrades, this.lineColors, this.lineWidth,\n                ref.legendPosition, ref.pickedIndex, this.padW, this.headerHeight, ref.currentLeft, ref.currentRight, ref.currentRange,\n                this.chartWidth, this.chartHeight + this.padH, ref.xDiff,\n                ref.yAlign.top, ref.yAlign.bottom, ref.currentMaxHeight, ref.currentMinHeight,\n                this.getBackgroundColor, this.nightGrade, zoomGrade)\n        }\n\n        for (let line of ref.lines2) {\n            drawLinesCross(this.ctx, ref.x, line, this.lineLabels, this.lineStates, this.lineGrades, this.lineColors, this.lineWidth,\n                ref.legendPosition, ref.pickedIndex, this.padW, this.headerHeight, ref.currentLeft, ref.currentRight, ref.currentRange,\n                this.chartWidth, this.chartHeight + this.padH, ref.xDiff,\n                ref.yAlign2.top, ref.yAlign2.bottom, ref.currentMaxHeight2, ref.currentMinHeight2,\n                this.getBackgroundColor, this.nightGrade, zoomGrade)\n        }\n\n        drawLinesLegend(this.ctx, ref.x, [ref.lines, ref.lines2], this.lineLabels, this.lineStates, this.lineGrades, this.lineColors, this.lineWidth,\n            ref.legendPosition, ref.pickedIndex, this.padW, this.headerHeight + this.padH, ref.currentLeft, ref.currentRight, ref.currentRange,\n            this.chartWidth, this.chartHeight + this.padH, ref.xDiff,\n            [\n                [ref.yAlign.top, ref.yAlign.bottom, ref.currentMaxHeight, ref.currentMinHeight,],\n                [ref.yAlign2.top, ref.yAlign2.bottom, ref.currentMaxHeight2, ref.currentMinHeight2,]\n            ],\n            this.legendTextSize, this.textFont, this.getLegendColor, this.getLegendBorderColor, this.getLegendFontColor, this.getBackgroundColor,\n            zoomGrade, this.nightGrade, ref.legendCoordinates, zoomGrade, legendDateFormat, ref === this)\n    }\n\n    calcYAlignment (ref) {\n\n        super.calcYAlignment(ref)\n\n        const chartHeight = this.chartHeight + this.padH\n        const linesDiff = chartHeight / 6\n\n        calcYAlignment(ref.toMaxHeight2, ref.toMinHeight2,\n            chartHeight - this.padH, this.padH, chartHeight - linesDiff, linesDiff, chartHeight, ref.yAlign2)\n    }\n\n    calcHeight (ref) {\n\n        super.calcHeight(ref)\n\n        const visibleMaxHeight = getMaxY(ref.x, ref.lines2, ref.lineStates, ref.currentLeft, ref.currentRight)\n\n        if (visibleMaxHeight !== ref.toMaxHeight2) {\n            const uniqName = this.zoomState + 'currentMaxHeight2'\n            this.addAnimation(ref, 'currentMaxHeight2', visibleMaxHeight, animationDurationMs, uniqName)\n            this.animate()\n        }\n\n        const visibleMinHeight = getMinY(ref.x, ref.lines2, ref.lineStates, ref.currentLeft, ref.currentRight)\n\n        if (visibleMinHeight !== ref.toMinHeight2) {\n            const uniqName = this.zoomState + 'currentMinHeight2'\n            this.addAnimation(ref, 'currentMinHeight2', visibleMinHeight, animationDurationMs, uniqName)\n            this.animate()\n        }\n\n        const maxAnim = this.animations[this.zoomState + 'currentMaxHeight2']\n\n        if (maxAnim) {\n            ref.fromMaxHeight2 = maxAnim.from\n            ref.toMaxHeight2 = maxAnim.to\n        }\n\n        const minAnim = this.animations[this.zoomState + 'currentMinHeight2']\n\n        if (minAnim) {\n            ref.fromMinHeight2 = minAnim.from\n            ref.toMinHeight2 = minAnim.to\n        }\n    }\n\n    getDetails (index) {\n\n        const details = super.getDetails(index)\n\n        let fromLeft = index - 3\n        let toRight = index + 3\n\n        if (fromLeft < 1) {\n            toRight += 1 - fromLeft\n            fromLeft = 1\n        } else if (toRight >= this.x.length) {\n            fromLeft -= toRight - this.x.length + 1\n            toRight = this.x.length - 1\n        }\n\n        let lines2 = []\n\n        for (let i = fromLeft; i <= toRight; i++) {\n            const timestamp = this.x[i]\n            const details2 = this.details2[timestamp]\n            if (!lines2.length) {\n                lines2[0] = details2[0]\n            }\n            let k = details2.length\n            const offset = lines2.length - 1\n            while (k-- > 1) {\n                lines2[offset + k] = details2[k]\n            }\n        }\n\n        lines2 = [lines2]\n\n        const rangeMaxHeight2 = getMaxY(details.x, lines2, this.lineStates, details.currentLeft, details.currentRight)\n        const rangeMinHeight2 = getMinY(details.x, lines2, this.lineStates, details.currentLeft, details.currentRight)\n\n        const maxHeight2 = getMaxY(details.x, lines2, this.lineStates, 0, 1)\n        const minHeight2 = getMinY(details.x, lines2, this.lineStates, 0, 1)\n\n        let fromMaxHeight2, toMaxHeight2, currentMaxHeight2,\n            fromMinHeight2, toMinHeight2, currentMinHeight2\n\n        fromMaxHeight2 = toMaxHeight2 = currentMaxHeight2 = rangeMaxHeight2\n        fromMinHeight2 = toMinHeight2 = currentMinHeight2 = rangeMinHeight2\n\n        details.lines2 = lines2\n        details.maxHeight2 = maxHeight2\n        details.minHeight2 = minHeight2\n        details.fromMaxHeight2 = fromMaxHeight2\n        details.toMaxHeight2 = toMaxHeight2\n        details.currentMaxHeight2 = currentMaxHeight2\n        details.fromMinHeight2 = fromMinHeight2\n        details.toMinHeight2 = toMinHeight2\n        details.currentMinHeight2 = currentMinHeight2\n        details.yAlign2 = {}\n\n        return details\n    }\n}\n","import AnimatableChart from '../animatable_chart'\nimport {\n    getX,\n    sumBars,\n    getBars,\n    drawStackedBars,\n    calcTopYAlignment,\n    dynamicHexColorWithBlending,\n    drawLinesLegend,\n} from '../utils'\n\nexport default class StackedBarChart extends AnimatableChart {\n\n    constructor (data, options) {\n        super(data, options)\n\n        this.bars = getBars(data.overview)\n\n        this.lineColors = {}\n        for (let label in this.lineLabels) {\n            this.lineColors[label] =\n                dynamicHexColorWithBlending(data.overview.colors[label], 1, '#FFFFFF', 0.5, '#242F3E', 0.5)\n        }\n\n        this.summedBars = sumBars(this.x, this.bars, this.lineGrades,\n            this.currentLeft - this.padW / this.chartWidth, this.currentRight + this.padW / this.chartWidth)\n        this.fullSummedBars = sumBars(this.x, this.bars, this.lineGrades, 0, 1)\n\n        this.currentMaxHeight = this.fromMaxHeight = this.toMaxHeight =\n            this.summedBars[0]\n        this.maxHeight = this.fullSummedBars[0]\n\n        this.currentMinHeight = this.fromMinHeight = this.toMinHeight = 0\n        this.minHeight = 0\n    }\n\n    drawView (ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade) {\n\n        this.drawChart(ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade)\n\n        this.drawGrid(ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade)\n\n        this.drawDates(ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade)\n\n        this.drawPreview(ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade)\n\n        this.drawScroll(ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade)\n\n        if (ref.legendShown && (zoomGrade < 1 || (ref.legendPosition >= ref.currentLeft && ref.legendPosition <= ref.currentRight))) {\n            this.drawLegend(ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade)\n        }\n    }\n\n    drawChart (ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade) {\n\n        drawStackedBars(this.ctx, ref.x, ref.bars, ref.summedBars, this.lineGrades, this.lineColors,\n            this.chartWidth, this.chartHeight + this.padH, this.padW, this.headerHeight, ref.pickedIndex,\n            ref.currentLeft, ref.currentRight, ref.currentMaxHeight, zoomGrade, this.nightGrade, shrink)\n    }\n\n    drawPreview (ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade) {\n\n        drawStackedBars(this.ctx, ref.x, ref.bars, ref.fullSummedBars, this.lineGrades, this.lineColors,\n            this.chartWidth, this.previewHeight, this.padW, this.previewOffsetH, 0,\n            0, 1, ref.maxHeight, zoomGrade, shrink)\n    }\n\n    drawLegend (ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade, showAll = true) {\n\n        drawLinesLegend(this.ctx, ref.x, [ref.bars], this.lineLabels, this.lineStates, this.lineGrades, this.lineColors, this.lineWidth,\n            ref.legendPosition, ref.pickedIndex, this.padW, this.headerHeight + this.padH, ref.currentLeft, ref.currentRight, ref.currentRange,\n            this.chartWidth, this.chartHeight + this.padH, ref.xDiff,\n            [[0, 0, 0, 0]],\n            this.legendTextSize, this.textFont, this.getLegendColor, this.getLegendBorderColor, this.getLegendFontColor, this.getBackgroundColor,\n            zoomGrade, this.nightGrade, ref.legendCoordinates, zoomGrade, legendDateFormat, ref === this, showAll)\n    }\n\n    calc (ref) {\n        super.calc(ref)\n        this.calcHeight(ref)\n        this.calcYAlignment(ref)\n    }\n\n    calcYAlignment(ref) {\n\n        const chartHeight = this.chartHeight + this.padH\n        const linesDiff = chartHeight / 6\n\n        calcTopYAlignment(ref.toMaxHeight, chartHeight - this.padH,\n            chartHeight - linesDiff, linesDiff, chartHeight, ref.yAlign)\n    }\n\n    calcHeight (ref) {\n\n        ref.summedBars = sumBars(ref.x, ref.bars, this.lineGrades,\n            ref.currentLeft - this.padW / this.chartWidth, ref.currentRight + this.padW / this.chartWidth)\n        ref.fullSummedBars = sumBars(ref.x, ref.bars, this.lineGrades, 0, 1)\n        ref.maxHeight = ref.fullSummedBars[0]\n\n        const newMaxHeight = ref.summedBars[0]\n\n        if (newMaxHeight !== this.toMaxHeight) {\n            const uniqName = this.zoomState + 'currentMaxHeight'\n            this.addAnimation(ref, 'currentMaxHeight', newMaxHeight, this.animationDurationMs, uniqName)\n            this.animate()\n        }\n\n        const maxAnim = this.animations[this.zoomState + 'currentMaxHeight']\n\n        if (maxAnim) {\n            ref.fromMaxHeight = maxAnim.from\n            ref.toMaxHeight = maxAnim.to\n        }\n    }\n\n    getDetails (index, skip) {\n\n        const details = super.getDetails(index)\n\n        if (skip) {\n            return details\n        }\n\n        const columns = this.mergeZoomedColumns(details.fromLeft, details.toRight)\n\n        const data = { columns, types: this.details[this.x[1]].types }\n        const x = getX(data)\n        const bars = getBars(data)\n\n        const summedBars = sumBars(x, bars, this.lineGrades,\n            details.currentLeft - this.padW / this.chartWidth, details.currentRight + this.padW / this.chartWidth)\n        const rangeMaxHeight = summedBars[0]\n        const rangeMinHeight = 0\n\n        const fullSummedBars = sumBars(x, bars, this.lineGrades, 0, 1)\n        const maxHeight = fullSummedBars[0]\n        const minHeight = 0\n\n        let fromMaxHeight, toMaxHeight, currentMaxHeight,\n            fromMinHeight, toMinHeight, currentMinHeight\n\n        fromMaxHeight = toMaxHeight = currentMaxHeight = rangeMaxHeight\n        fromMinHeight = toMinHeight = currentMinHeight = rangeMinHeight\n\n        const xDiff = x[x.length - 1] - x[1]\n\n        details.x = x\n        details.xDiff = xDiff\n        details.bars = bars\n        details.summedBars = summedBars\n        details.fullSummedBars = fullSummedBars\n        details.maxHeight = maxHeight\n        details.minHeight = minHeight\n        details.fromMaxHeight = fromMaxHeight\n        details.toMaxHeight = toMaxHeight\n        details.currentMaxHeight = currentMaxHeight\n        details.fromMinHeight = fromMinHeight\n        details.toMinHeight = toMinHeight\n        details.currentMinHeight = currentMinHeight\n\n        return details\n    }\n}\n","import StackedBarChart from './bar-stacked'\nimport {\n\n    getX,\n    getLines,\n    getMaxY,\n    getMinY,\n    calcYAlignment,\n\n    formatDate,\n    animatableAlphaHEXcolor,\n    dynamicHexColor,\n    drawCheckboxes,\n    drawLines,\n    drawRuller,\n    drawLinesCross,\n    drawLinesLegend,\n} from '../utils'\n\nexport default class BarChart extends StackedBarChart {\n\n    constructor (data, options) {\n        super(data, options)\n\n        this.detailsColors = [ '#4681BB', '#466FB3', '#479FC4' ]\n    }\n\n    drawChart (ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade) {\n\n        if (ref === this) {\n            return super.drawChart(ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade)\n        }\n\n        drawLines(this.ctx, ref.x, ref.lines, ref.lineStates, ref.lineGrades, ref.lineColors,\n            this.chartWidth, this.chartHeight + this.padH - ref.yAlign.top, this.padW, this.headerHeight + ref.yAlign.top, ref.yAlign.bottom,\n            ref.currentLeft, ref.currentRight, ref.xDiff * ref.currentRange, ref.currentMaxHeight, ref.currentMinHeight, this.lineWidth, zoomGrade, shrink)\n    }\n\n    drawPreview (ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade) {\n\n        if (ref === this) {\n            return super.drawPreview(ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade)\n        }\n    }\n\n    drawScroll (ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade) {\n\n        if (ref === this) {\n            return super.drawScroll(ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade)\n        }\n    }\n\n    drawLegend (ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade) {\n\n        if (ref === this) {\n            return super.drawLegend(ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade, false)\n        }\n\n        drawRuller(this.ctx, this.padW, this.headerHeight + this.padH, this.rullerWidth, this.chartHeight, this.chartWidth,\n            ref.currentLeft, ref.currentRight, ref.currentRange, ref.legendPosition, this.getRullerColor, zoomGrade, this.nightGrade)\n\n        for (let line of ref.lines) {\n            drawLinesCross(this.ctx, ref.x, line, ref.lineLabels, ref.lineStates, ref.lineGrades, ref.lineColors, this.lineWidth,\n                ref.legendPosition, ref.pickedIndex, this.padW, this.headerHeight, ref.currentLeft, ref.currentRight, ref.currentRange,\n                this.chartWidth, this.chartHeight + this.padH, ref.xDiff,\n                ref.yAlign.top, ref.yAlign.bottom, ref.currentMaxHeight, ref.currentMinHeight,\n                this.getBackgroundColor, this.nightGrade, zoomGrade)\n        }\n\n        drawLinesLegend(this.ctx, ref.x, [ref.lines], ref.lineLabels, ref.lineStates, ref.lineGrades, ref.lineColors, this.lineWidth,\n            ref.legendPosition, ref.pickedIndex, this.padW, this.headerHeight + this.padH, ref.currentLeft, ref.currentRight, ref.currentRange,\n            this.chartWidth, this.chartHeight + this.padH, ref.xDiff,\n            [[ref.yAlign.top, ref.yAlign.bottom, ref.currentMaxHeight, ref.currentMinHeight]],\n            this.legendTextSize, this.textFont, this.getLegendColor, this.getLegendBorderColor, this.getLegendFontColor, this.getBackgroundColor,\n            zoomGrade, this.nightGrade, ref.legendCoordinates, zoomGrade, legendDateFormat, ref === this)\n    }\n\n    drawCheckboxes (ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade) {\n\n        if (ref === this) { return }\n\n        // redraw only if checked\n        drawCheckboxes(this.ctx, this.padW, ref.checkboxesOffsetH, this.chartWidth,\n            ref.checkboxes, this.checkboxHeight, this.checkboxRadius, this.checkboxMargin, this.textFont, this.nightGrade, zoomGrade)\n    }\n\n    calcHeight (ref) {\n\n        if (ref === this) {\n            return super.calcHeight(ref)\n        }\n\n        const visibleMaxHeight = getMaxY(ref.x, ref.lines, ref.lineStates, ref.currentLeft, ref.currentRight)\n\n        if (visibleMaxHeight !== ref.toMaxHeight) {\n            const uniqName = this.zoomState + 'currentMaxHeight'\n            this.addAnimation(ref, 'currentMaxHeight', visibleMaxHeight, this.animationDurationMs, uniqName)\n            this.animate()\n        }\n\n        const visibleMinHeight = getMinY(ref.x, ref.lines, ref.lineStates, ref.currentLeft, ref.currentRight)\n\n        if (visibleMinHeight !== ref.toMinHeight) {\n            const uniqName = this.zoomState + 'currentMinHeight'\n            this.addAnimation(ref, 'currentMinHeight', visibleMinHeight, this.animationDurationMs, uniqName)\n            this.animate()\n        }\n\n        const maxAnim = this.animations[this.zoomState + 'currentMaxHeight']\n\n        if (maxAnim) {\n            ref.fromMaxHeight = maxAnim.from\n            ref.toMaxHeight = maxAnim.to\n        }\n\n        const minAnim = this.animations[this.zoomState + 'currentMinHeight']\n\n        if (minAnim) {\n            ref.fromMinHeight = minAnim.from\n            ref.toMinHeight = minAnim.to\n        }\n    }\n\n    getDetails (index) {\n\n        const details = super.getDetails(index, true)\n\n        const indexes = [index]\n\n        if (index - 1 > 1) {\n            indexes.push(index - 1)\n        }\n\n        if (index - 2 > 1) {\n            indexes.push(Math.max(index - 7, 1))\n        }\n\n        const detailsAtIndex = this.details[this.x[index]]\n\n        const x = getX(detailsAtIndex)\n        const lines = []\n        const checkboxes = []\n        const checkboxLabelToIndex = {}\n\n        let i = 0\n\n        const lineStates = {}\n        const lineGrades = {}\n        const lineColors = {}\n        const lineLabels = {}\n\n        for (let idx of indexes) {\n\n            const label = 'y' + idx\n\n            const timestamp = this.x[idx]\n            const line = getLines(this.details[timestamp])[0]\n            line[0] = label\n            lines.push(line)\n\n            lineLabels[label] = formatDate(timestamp, 'day')\n\n            const color = this.detailsColors[i]\n\n            lineStates[label] = true\n            lineGrades[label] = 1\n            lineColors[label] = animatableAlphaHEXcolor(color, 1)\n            checkboxLabelToIndex[label] = i++\n            checkboxes.push({\n                id: 'y' + idx,\n                label: lineLabels[label],\n                getColor: dynamicHexColor(color, 1, '#FFFFFF', 1, '#26333F', 1),\n                grade: 1,\n                x: 0,\n                y: 0,\n                toX: 0,\n                toY: 0,\n            })\n        }\n\n        const maxHeight = getMaxY(x, lines, lineStates, 0, 1)\n        const minHeight = getMinY(x, lines, lineStates, 0, 1)\n\n        let fromMaxHeight, toMaxHeight, currentMaxHeight,\n            fromMinHeight, toMinHeight, currentMinHeight\n\n        fromMaxHeight = toMaxHeight = currentMaxHeight = maxHeight\n        fromMinHeight = toMinHeight = currentMinHeight = minHeight\n\n        const xDiff = x[x.length - 1] - x[1]\n\n        details.checkboxes = checkboxes\n        details.checkboxLabelToIndex = checkboxLabelToIndex\n        details.checkboxesOffsetH = this.previewOffsetH\n\n        details.lineStates = lineStates\n        details.lineGrades = lineGrades\n        details.lineColors = lineColors\n        details.lineLabels = lineLabels\n\n        details.currentLeft = 0\n        details.currentRight = 1\n        details.currentRange = 1\n\n        details.x = x\n        details.xDiff = xDiff\n        details.lines = lines\n        details.maxHeight = maxHeight\n        details.minHeight = minHeight\n        details.fromMaxHeight = fromMaxHeight\n        details.toMaxHeight = toMaxHeight\n        details.currentMaxHeight = currentMaxHeight\n        details.fromMinHeight = fromMinHeight\n        details.toMinHeight = toMinHeight\n        details.currentMinHeight = currentMinHeight\n\n        return details\n    }\n\n    setScroll (ref, e) {\n        if (ref === this) {\n            super.setScroll(ref, e)\n        }\n    }\n}\n","import AnimatableChart from '../animatable_chart'\nimport {\n\n    getAreas,\n    sumBars,\n    getLowerIndex,\n    getUpperIndex,\n\n    fromCssSize,\n\n    drawArea,\n    drawGrid,\n    drawLinesLegend,\n    drawRuller,\n    drawPie,\n    drawPieLegend,\n} from '../utils'\n\nexport default class PieChart extends AnimatableChart {\n\n    constructor (data, options) {\n        super(data, options)\n\n        this.areas = getAreas(data.overview)\n\n        this.calcProcents(this)\n\n        this.currentMaxHeight = this.fromMaxHeight = this.toMaxHeight = 100\n        this.maxHeight = 100\n\n        this.currentMinHeight = this.fromMinHeight = this.toMinHeight = 0\n        this.minHeight = 0\n\n        this.maxIndex = this.x.length - 1\n\n        this.yAlign = { top: 0, bottom: 0, max: 75, min: 25 }\n\n        this.shares = {}\n        this.coords = {\n            centerX: 0,\n            centerY: 0,\n            angles: {},\n        }\n\n        for (const label in this.lineLabels) {\n            this.shares[label] = {\n                procent: 0,\n                sum: 0,\n                grade: 0,\n            }\n            this.coords.angles[label] = {\n                from: 0,\n                to: 0,\n            }\n        }\n    }\n\n    drawView (ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade) {\n\n        this.drawChart(ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade)\n\n        this.drawGrid(ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade)\n\n        this.drawDates(ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade)\n\n        this.drawPreview(ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade)\n\n        this.drawScroll(ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade)\n\n        if (this.legendShown && (zoomGrade < 1 || (this.legendPosition >= this.currentLeft && this.legendPosition <= this.currentRight))) {\n            this.drawLegend(ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade)\n        }\n    }\n\n    drawGrid (ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade) {\n\n        if (ref === this) {\n\n            drawGrid(this.ctx, this.padW, this.headerHeight, this.chartWidth, this.chartHeight + this.padH, 3,\n                ref.fromMaxHeight, ref.toMaxHeight, ref.currentMaxHeight,\n                ref.fromMinHeight, ref.toMinHeight, ref.currentMinHeight,\n                ref.yAlign.max, ref.yAlign.min, ref.yAlign.top, ref.yAlign.bottom,\n                this.getGridColor, this.getAxisColor, false, 1, this.gridLineWidth, this.textSize, this.nightGrade, zoomGrade)\n        }\n    }\n\n    drawChart (ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade) {\n\n        if (ref === this) {\n\n            drawArea(this.ctx, this.x, this.areas, this.summedAreas, this.referenceSummedAreas, this.lineGrades, this.lineColors,\n                this.chartWidth, this.chartHeight + this.padH, this.padW, this.headerHeight, this.leftIndex, this.rightIndex,\n                this.currentLeft, this.currentRight, zoomGrade, this.nightGrade, shrink)\n        } else {\n\n            drawPie(this.ctx, this.lineLabels, this.lineGrades, this.lineColors,\n                this.padW, this.headerHeight + 2 * this.padW, this.chartWidth, this.chartHeight / 2, this.shares, zoomGrade, this.coords,\n                this.getLegendColor, this.getLegendBorderColor, this.getLegendFontColor, this.nightGrade, this.legendTextSize, this.textFont)\n        }\n    }\n\n    drawDates (ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade) {\n\n        if (ref === this) {\n            // redraw only if moving\n            super.drawDates(ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade)\n        }\n    }\n\n    drawPreview (ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade) {\n\n        drawArea(this.ctx, this.x, this.areas, this.fullSummedAreas, this.referenceFullSummedAreas, this.lineGrades, this.lineColors,\n            this.chartWidth, this.previewHeight, this.padW, this.previewOffsetH, 1, this.maxIndex,\n            0, 1, zoomGrade, this.nightGrade, shrink)\n    }\n\n    drawLegend (ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade) {\n\n        if (ref === this) {\n\n            drawRuller(this.ctx, this.padW, this.headerHeight, this.rullerWidth, this.chartHeight + this.padH, this.chartWidth,\n                this.currentLeft, this.currentRight, this.currentRange, this.legendPosition, this.getRullerColor, zoomGrade, this.nightGrade)\n\n            drawLinesLegend(this.ctx, this.x, [this.areas], this.lineLabels, this.lineStates, this.lineGrades, this.lineColors, this.lineWidth,\n                this.legendPosition, this.pickedIndex, this.padW, this.headerHeight + this.padH, this.currentLeft, this.currentRight, this.currentRange,\n                this.chartWidth, this.chartHeight + this.padH, this.xDiff,\n                [[0, 0, 0, 0]],\n                this.legendTextSize, this.textFont, this.getLegendColor, this.getLegendBorderColor, this.getLegendFontColor, this.getBackgroundColor,\n                zoomGrade, this.nightGrade, this.legendCoordinates, zoomGrade, legendDateFormat, ref === this, false, true)\n        }\n    }\n\n    calc (ref) {\n        super.calc(ref)\n        this.calcProcents(ref)\n    }\n\n    calcDates (ref) {\n        if (ref === this) {\n            super.calcDates(ref)\n        }\n    }\n\n    calcProcents (ref) {\n\n        ref.leftIndex = getLowerIndex(this.x, ref.currentLeft - this.padW / this.chartWidth)\n        ref.rightIndex = getUpperIndex(this.x, ref.currentRight + this.padW / this.chartWidth)\n\n        this.fullSummedAreas = sumBars(this.x, this.areas, this.lineGrades, 0, 1)\n        this.summedAreas = this.fullSummedAreas.slice(Math.max(this.leftIndex - 1, 0), this.rightIndex + 1)\n        this.referenceSummedAreas = this.summedAreas.slice(0)\n        this.referenceFullSummedAreas = this.fullSummedAreas.slice(0)\n\n        if (ref !== this) {\n            this.calcShares(ref)\n        }\n    }\n\n    calcShares (ref) {\n\n        let total = 0\n\n        for (const area of this.areas) {\n            let areaSum = 0\n            for (let i = ref.leftIndex; i <= ref.rightIndex; i++) {\n                areaSum += area[i]\n            }\n            areaSum = areaSum * this.lineGrades[area[0]]\n            total += areaSum\n            this.shares[area[0]].sum = areaSum\n        }\n\n        for (const label in this.shares) {\n            this.shares[label].procent = this.shares[label].sum / total\n        }\n    }\n\n    clickPie (e) {\n\n        if (this.zoomState === 'overview') { return }\n\n        const border = this.getBoundingClientRect()\n\n        const canvasX = fromCssSize(e.clientX - border.left)\n        const canvasY = fromCssSize(e.clientY - border.top)\n\n        if (canvasY < this.headerHeight || canvasY > this.headerHeight + this.chartHeight) {\n            return\n        }\n\n        let angle = Math.atan((canvasX - this.coords.centerX) / (canvasY - this.coords.centerY))\n\n        if (canvasY > this.coords.centerY) {\n            angle = Math.PI / 2 - angle\n        } else {\n            angle = Math.PI * 3 / 2 - angle\n        }\n\n        let found = null\n\n        for (let label in this.coords.angles) {\n            const a = this.coords.angles[label]\n            if (angle >= a.from && angle <= a.to) {\n                found = label\n            }\n        }\n\n        if (!found) {\n\n            angle = angle + 2 * Math.PI\n\n            for (let label in this.coords.angles) {\n                const a = this.coords.angles[label]\n                if (angle >= a.from && angle <= a.to) {\n                    found = label\n                }\n            }\n        }\n\n        if (found) {\n            this.addAnimation(this.shares[found], 'grade', 1, this.animationDurationMs, 'angle' + found)\n            for (let label in this.shares) {\n                if (label === found) { continue }\n                this.addAnimation(this.shares[label], 'grade', 0, this.animationDurationMs, 'angle' + label)\n            }\n            this.animate()\n        }\n    }\n\n    onMouseUp (e) {\n        super.onMouseUp(e)\n        this.clickPie(e)\n    }\n\n    onTouchEnd (e) {\n        super.onMouseUp(e)\n        this.clickPie(e)\n    }\n}\n","import LineChart from './charts/line'\nimport LineYScaled from './charts/line-y-scaled'\nimport StackedBarChart from './charts/bar-stacked'\nimport BarChart from './charts/bar'\nimport PieChart from './charts/pie'\n\nexport default function () {\n\n    return {\n\n        create: function (data, parent) {\n\n            let chart = null\n\n            const overview = data.overview\n\n            if (overview.y_scaled) {\n                chart = new LineYScaled(data, {\n                    width: parent.offsetWidth,\n                    height: 320,\n                    fontFamily: 'Helvetica, sans-serif',\n                    fontSize: 10,\n                    padW: 10,\n                    padH: 20,\n                    lineWidth: 2,\n                    previewPadW: 10,\n                    previewPadH: 4,\n                    previewHeight: 32,\n                    previewLineWidth: 1,\n                    checkboxesAreaHeight: 120,\n                    checkboxHeight: 28,\n                    checkboxRadius: 14,\n                    checkboxMargin: 8,\n                    legendFontSize: 12,\n                    rullerWidth: 1,\n                    from: 0.75,\n                    to: 1,\n                    datesDiff: 60,\n                    gridLineWidth: 1,\n                    header: 'Line Y Scaled Chart',\n                    headerFontSize: 14,\n                    dateRangeFontSize: 12,\n                    headerHeight: 20,\n                })\n            } else if (overview.stacked && overview.percentage) {\n                chart = new PieChart(data, {\n                    width: parent.offsetWidth,\n                    height: 320,\n                    fontFamily: 'Helvetica, sans-serif',\n                    fontSize: 10,\n                    padW: 10,\n                    padH: 20,\n                    lineWidth: 2,\n                    previewPadW: 10,\n                    previewPadH: 4,\n                    previewHeight: 32,\n                    previewLineWidth: 1,\n                    checkboxesAreaHeight: 120,\n                    checkboxHeight: 28,\n                    checkboxRadius: 14,\n                    checkboxMargin: 8,\n                    legendFontSize: 12,\n                    rullerWidth: 1,\n                    from: 0.75,\n                    to: 1,\n                    datesDiff: 60,\n                    gridLineWidth: 1,\n                    header: 'Pie Chart',\n                    headerFontSize: 14,\n                    dateRangeFontSize: 12,\n                    headerHeight: 20,\n                })\n            } else if (overview.stacked) {\n                chart = new StackedBarChart(data, {\n                    width: parent.offsetWidth,\n                    height: 320,\n                    fontFamily: 'Helvetica, sans-serif',\n                    fontSize: 10,\n                    padW: 10,\n                    padH: 20,\n                    lineWidth: 2,\n                    previewPadW: 10,\n                    previewPadH: 4,\n                    previewHeight: 32,\n                    previewLineWidth: 1,\n                    checkboxesAreaHeight: 120,\n                    checkboxHeight: 28,\n                    checkboxRadius: 14,\n                    checkboxMargin: 8,\n                    legendFontSize: 12,\n                    rullerWidth: 1,\n                    from: 0.75,\n                    to: 1,\n                    datesDiff: 60,\n                    gridLineWidth: 1,\n                    header: 'Stacked Bar Chart',\n                    headerFontSize: 14,\n                    dateRangeFontSize: 12,\n                    headerHeight: 20,\n                })\n            } else if (Object.keys(overview.types).some(k => overview.types[k] === 'bar')) {\n                chart = new BarChart(data, {\n                    width: parent.offsetWidth,\n                    height: 320,\n                    fontFamily: 'Helvetica, sans-serif',\n                    fontSize: 10,\n                    padW: 10,\n                    padH: 20,\n                    lineWidth: 2,\n                    previewPadW: 10,\n                    previewPadH: 4,\n                    previewHeight: 32,\n                    previewLineWidth: 1,\n                    checkboxesAreaHeight: 120,\n                    checkboxHeight: 28,\n                    checkboxRadius: 14,\n                    checkboxMargin: 8,\n                    legendFontSize: 12,\n                    rullerWidth: 1,\n                    from: 0.75,\n                    to: 1,\n                    datesDiff: 60,\n                    gridLineWidth: 1,\n                    header: 'Bar Chart',\n                    headerFontSize: 14,\n                    dateRangeFontSize: 12,\n                    headerHeight: 20,\n                })\n            } else {\n                chart = new LineChart(data, {\n                    width: parent.offsetWidth,\n                    height: 320,\n                    fontFamily: 'Helvetica, sans-serif',\n                    fontSize: 10,\n                    padW: 10,\n                    padH: 20,\n                    lineWidth: 2,\n                    previewPadW: 10,\n                    previewPadH: 4,\n                    previewHeight: 32,\n                    previewLineWidth: 1,\n                    checkboxesAreaHeight: 120,\n                    checkboxHeight: 28,\n                    checkboxRadius: 14,\n                    checkboxMargin: 8,\n                    legendFontSize: 12,\n                    rullerWidth: 1,\n                    from: 0.75,\n                    to: 1,\n                    datesDiff: 60,\n                    gridLineWidth: 1,\n                    header: 'Line Chart',\n                    headerFontSize: 14,\n                    dateRangeFontSize: 12,\n                    headerHeight: 20,\n                })\n            }\n\n            parent.appendChild(chart.el)\n            chart.render()\n\n            return chart\n        },\n    }\n}\n","class NightSwitch {\n\n    constructor (cb) {\n        this.cb = cb\n\n        this.state = false\n\n        this.el = document.createElement('div')\n        this.el.className = 'night-switch day'\n        this.textEl = document.createElement('span')\n        this.textEl.className = 'night-switch-text'\n        this.el.appendChild(this.textEl)\n\n        this.el.addEventListener('click', () => this.switch())\n\n        this.setText()\n    }\n\n    switch () {\n        this.state = !this.state\n        const bodyEl = document.getElementsByTagName('body')[0]\n        this.state ? bodyEl.className = 'night' : bodyEl.className = 'day'\n        this.state ? this.el.className = 'night-switch night' : this.el.className = 'night-switch day'\n        this.setText()\n        this.cb(this.state)\n    }\n\n    setText () {\n        this.textEl.textContent = this.state\n            ? 'Switch to Day Mode'\n            : 'Switch to Night Mode'\n    }\n}\n\nexport default NightSwitch\n","import ChartFactory from './lib/chart_factory'\nimport NightSwitch from './lib/night_switch'\n\nimport data from './generated_data'\n\nconst factory = new ChartFactory()\n\nlet charts = []\n\ndocument.addEventListener('DOMContentLoaded', function () {\n\n    const parent = document.getElementById('root')\n\n    for (let datum of data) {\n        charts.push(factory.create(datum, parent))\n    }\n\n    function switchMode (enable) {\n        charts.forEach(function (chart) {\n            chart.nightMode(enable)\n        })\n    }\n\n    const nightSwitch = new NightSwitch(switchMode)\n    parent.appendChild(nightSwitch.el)\n\n    function resize (width) {\n        charts.forEach(function (chart) {\n            chart.setWidth(width, true)\n        })\n    }\n\n    window.addEventListener('resize', function () {\n        resize(parent.offsetWidth)\n    })\n\n    resize(parent.offsetWidth)\n})\n"],"sourceRoot":""}