{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/draw-tools.js","webpack:///./lib/animatable_chart.js","webpack:///./lib/charts/line.js","webpack:///./lib/charts/line-y-scaled.js","webpack:///./lib/charts/bar-stacked.js","webpack:///./lib/charts/bar.js","webpack:///./lib/charts/pie.js","webpack:///./lib/chart_factory.js","webpack:///./lib/night_switch.js","webpack:///./index.js"],"names":["pixelRatio","window","devicePixelRatio","toCssSize","value","fromCssSize","drawLines","ctx","x","lines","lineStates","lineGrades","lineColors","width","height","offsetW","offsetH","graphOffsetH","left","right","dX","maxHeight","minHeight","lineWidth","zoomGrade","inOut","line","label","drawLine","grade","color","bottomGraphOffsetH","dRange","dx","scaleX","scaleY","strokeStyle","fromIndex","getLowerIndex","toIndex","getUpperIndex","prevX","prevXCoord","length","zeroH","beginPath","moveTo","i","xi","y","yCoord","lineTo","stroke","roundingProbes","calcYAlignment","maxVal","minVal","topOffset","maxBottomOffset","highestLine","lowestLine","vals","bottomOffset","max","min","top","bottom","probe","topVal","floorTo","bottomVal","ceilTo","val","mod","drawGrid","nlines","fromMax","toMax","currentMax","fromMin","toMin","currentMin","lineMax","lineMin","getColor","getYColor","fromRight","lineGrade","textSize","nightGrade","topLineOffset","scale","fromCurTop","toCurTop","fromCurBottom","toCurBottom","fromTopOffset","fromBottomOffset","toTopOffset","toBottomOffset","fromOffsetH","dFrom","toOffsetH","dTo","Math","abs","drawGridLines","fromVal","toVal","yColor","fillStyle","linesDiff","valsDiff","v","measureText","fillText","drawDates","baseX","xDiff","format","fromPeriod","toPeriod","fromFillStyle","toFillStyle","toN","floor","p","timestamp","drawDate","fromN","shortMonths","months","shortDays","days","formatDate","d","Date","getUTCDate","getUTCMonth","getUTCFullYear","leftPad","getUTCHours","getUTCDay","dateOffset","position","text","controlWidth","previewPadding","controlRadius","drawScrollControlls","from","to","getPreviewBlurColor","getPreviewControlColor","fromH","toH","drawRoundedRect","closePath","fill","fromX","toX","fromY","toY","leftRadius","rightRadius","quadraticCurveTo","drawCheckboxes","maxWidth","checkboxes","checkboxHeight","checkboxRadius","checkboxMargin","checkboxFont","ctxFont","font","leftOffset","checkbox","textWidth","drawCheckbox","checkboxBorderWidth","radius","checkGrade","o","legendPadding","legendOffset","crossRadius","drawRuller","rullerWidth","rullerHeight","range","getRullerColor","alphaGrade","drawLinesLegend","lineKinds","lineLabels","closestIndex","paramKinds","textFont","getLegendColor","getLegendBorderColor","getLegendFontColor","getBackgroundColor","coordinates","drawArrow","legendFont","contentWidth","contentHeight","maxValueWidth","lowestTopOffset","name","nameWidth","valWidth","approxValue","lowerIndex","approximateHeight","upperIndex","param","legendWidth","legendHeight","legendOffsetLeft","additionalOffset","nextOffset","rightOverflow","textOffsetH","arrowSide","drawLinesCross","topGraphOffsetH","currentMaxHeight","currentMinHeight","arc","PI","affinity","drawHeader","headerHeight","fontSize","magnifierLineWidth","drawZoomOutControl","coords","magnifierHeight","magnifierRadius","zoomOutText","drawDateRangeSummary","headerFontSize","baseDate","isRange","leftTimestamp","rightTimestamp","procent","idx","binarySearch","getClosestIndex","arr","len","j","m","diff","getMaxY","getMinY","Infinity","colorFromRGBA","r","g","b","a","animatableAlphaHEXcolor","hex","alpha","R","getR","G","getG","B","getB","animatableHexColor","fromHex","fromAlpha","toHex","toAlpha","fromR","fromG","fromB","dR","dG","dB","dAlpha","dynamicHexColor","toAltHex","toAltAlpha","toDR","toDG","toDB","toAltDR","toAltDG","toAltDB","toDAlpha","toDAltAlpha","pickGrade","notPickGrade","parseInt","slice","AnimatedCanvas","options","animations","running","prevMs","undefined","el","document","createElement","className","canvasEl","getContext","appendChild","setFont","setSize","step","ms","requestAnimationFrame","diffMs","hasAnimations","uniqName","anim","container","prop","duration","render","style","fontFamily","LineChart","data","headerText","header","details","overview","getX","getLines","names","checkboxLabelToIndex","colors","push","id","currentLeft","scrollLeft","currentRight","scrollRight","currentRange","fromMaxHeight","toMaxHeight","fromMinHeight","toMinHeight","datesGrade","moveDir","legendShown","legendMoving","legendPosition","pickedIndex","legendCoordinates","zoomFromGrade","zoomToGrade","zoomedIndex","zoomedData","ref","zoomState","zoomOutCoords","yAlign","addEventListener","e","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","onTouchStart","onTouchMove","onTouchEnd","animationDurationMs","getGridColor","getAxisColor","getZoomOutColor","setBasicSizes","setWidth","previewOffsetH","checkboxesOffsetH","previewHeight","padH","checkboxesAreaHeight","chartHeight","mainLinesOffsetH","datesOffsetH","resize","chartWidth","padW","lineJoin","datesDiff","previewPadW","previewPadH","previewLineWidth","gridLineWidth","legendTextSize","legendFontSize","dateRangeFontSize","animate","addAnimation","index","direction","getDetails","clearRect","calc","drawLineChart","shrink","yAxisdateFormat","legendDateFormat","calcHeight","calcDates","visibleMaxHeight","visibleMinHeight","maxAnim","minAnim","currentDiff","fromLeft","toRight","columns","lineIdToIndexMap","column","k","offset","types","rangeMaxHeight","rangeMinHeight","scrollStart","dir","movePosition","offsetDiff","dOffset","bound","move","border","getBoundingClientRect","canvasX","canvasY","fromW","toW","c","getDir","clientX","clientY","setMoveDir","getLabel","toggle","zoom","offsetLeft","setPickedIndex","cancelAnimation","destinationPosition","stopPropagation","setScroll","clickCheckbox","clickZoomOut","clickLegend","showLegend","setMove","moveLegend","setNoMove","stopMovingLegend","ev","targetTouches","enable","AnimatableChart","result","LineYScaled","lines2","splice","details2","currentMaxHeight2","fromMaxHeight2","toMaxHeight2","maxHeight2","currentMinHeight2","fromMinHeight2","toMinHeight2","minHeight2","yAlign2","getAxisColor1","getAxisColor2","rangeMaxHeight2","rangeMinHeight2","StackedBarChart","BarChart","PieChart","create","parent","chart","y_scaled","offsetWidth","stacked","percentage","Object","keys","some","NightSwitch","cb","state","textEl","switch","setText","bodyEl","getElementsByTagName","textContent","factory","ChartFactory","charts","getElementById","datum","switchMode","forEach","nightMode","nightSwitch"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","const pixelRatio = window.devicePixelRatio || 1\n\nexport function toCssSize (value) {\n    return value / pixelRatio\n}\n\nexport function fromCssSize (value) {\n    return value * pixelRatio\n}\n\nexport function drawLines (ctx, x, lines, lineStates, lineGrades, lineColors, width, height, offsetW, offsetH, graphOffsetH, left, right, dX, maxHeight, minHeight, lineWidth, zoomGrade, inOut) {\n    for (let line of lines) {\n        const label = line[0]\n        if (lineStates[label] || lineGrades[label] > 0) {\n            drawLine(ctx, x, line, lineGrades[label], lineColors[label], width, height, offsetW, offsetH, graphOffsetH, left, right, dX, maxHeight, minHeight, lineWidth, zoomGrade, inOut)\n        }\n    }\n}\n\nexport function drawLine (ctx, x, line, grade, color, width, height, offsetW, offsetH, bottomGraphOffsetH, left, right, dX, maxHeight, minHeight, lineWidth, zoomGrade, inOut) {\n\n    if (minHeight > maxHeight) {\n        return\n    }\n\n    const dRange = (right - left) / 2 * (1 - zoomGrade)\n    const dx = dX * (1 - zoomGrade)\n\n    left = left + dRange\n    right = right - dRange\n    dX = dX - dx\n\n    const scaleX = width / dX\n    const scaleY = (height - bottomGraphOffsetH) / (maxHeight - minHeight)\n\n    ctx.lineWidth = lineWidth\n    ctx.strokeStyle = color(grade * zoomGrade)\n\n    const fromIndex = getLowerIndex(x, left - offsetW / width)\n    const toIndex = getUpperIndex(x, right + offsetW / width)\n\n    let prevX = x[fromIndex]\n    let prevXCoord = offsetW +\n        ((prevX - x[1]) / ((x[x.length - 1] - x[1])) - left) * width / (right - left)\n\n    const zeroH = offsetH + height - bottomGraphOffsetH\n\n    ctx.beginPath()\n    ctx.moveTo(prevXCoord, zeroH - line[fromIndex] * scaleY)\n\n    for (let i = fromIndex + 1; i <= toIndex; i++) {\n\n        const xi = x[i]\n        const y = line[i] - minHeight\n\n        const yCoord = zeroH - y * scaleY\n\n        prevXCoord = prevXCoord + (xi - prevX) * scaleX\n        ctx.lineTo(prevXCoord, yCoord)\n        prevX = xi\n    }\n\n    ctx.stroke()\n}\n\nconst roundingProbes = [ 2, 5, 10, 100, 1000, 10000, 100000, 1000000 ]\n\nexport function calcYAlignment (maxVal, minVal, topOffset, maxBottomOffset, highestLine, lowestLine, height, vals) {\n\n    let bottomOffset = height * minVal / maxVal\n    bottomOffset = bottomOffset > maxBottomOffset ? maxBottomOffset : bottomOffset\n\n    vals.max = maxVal - (maxVal - minVal) * (topOffset - highestLine) / (topOffset - bottomOffset)\n    vals.min = minVal + (maxVal - minVal) * (lowestLine - bottomOffset) / (topOffset - bottomOffset)\n    vals.top = height - topOffset\n    vals.bottom = bottomOffset\n\n    for (let probe of roundingProbes) {\n\n        const topVal = floorTo(vals.max, probe)\n        const bottomVal = ceilTo(vals.min, probe)\n\n        if (bottomVal >= topVal) {\n            break\n        }\n\n        let top = (maxVal - topVal) / (topVal - bottomVal) * (highestLine - lowestLine)\n\n        if (top >= (height - highestLine)) {\n            break\n        }\n\n        let bottom = (bottomVal - minVal) / (topVal - bottomVal) * (highestLine - lowestLine)\n\n        if (bottom >= lowestLine) {\n            break\n        }\n\n        vals.max = topVal\n        vals.min = bottomVal\n        vals.top = height - highestLine - top\n        vals.bottom = lowestLine - bottom\n    }\n\n    return vals\n}\n\nfunction floorTo (val, mod) {\n    return ((val / mod) | 0) * mod\n}\n\nfunction ceilTo (val, mod) {\n    return (((val / mod) | 0) + 1) * mod\n}\n\nexport function drawGrid (ctx, offsetW, offsetH, width, height, nlines,\n    fromMax, toMax, currentMax,\n    fromMin, toMin, currentMin,\n    lineMax, lineMin,\n    topOffset, bottomOffset,\n    getColor, getYColor, fromRight, lineGrade, lineWidth, textSize, nightGrade, zoomGrade) {\n\n    if (toMin > toMax) {\n        return\n    }\n\n    if (lineGrade === 0) {\n        return\n    }\n\n    const topLineOffset = height - topOffset\n\n    const scale = (topLineOffset - bottomOffset) / (currentMax - currentMin)\n\n    const fromCurTop = topLineOffset - (currentMax - fromMax) * scale\n    const toCurTop = topLineOffset + (toMax - currentMax) * scale\n    const fromCurBottom = bottomOffset + (fromMin - currentMin) * scale\n    const toCurBottom = bottomOffset - (currentMin - toMin) * scale\n\n    const fromTopOffset = (fromCurTop - fromCurBottom) / (topLineOffset - bottomOffset) * topOffset\n    const fromBottomOffset = (fromCurTop - fromCurBottom) / (topLineOffset - bottomOffset) * bottomOffset\n    const toTopOffset = (toCurTop - toCurBottom) / (topLineOffset - bottomOffset) * topOffset\n    const toBottomOffset = (toCurTop - toCurBottom) / (topLineOffset - bottomOffset) * bottomOffset\n\n    const fromOffsetH = fromCurTop + fromTopOffset\n    const dFrom = fromCurTop - fromCurBottom + fromTopOffset + fromBottomOffset\n    const toOffsetH = toCurTop + toTopOffset\n    const dTo = toCurTop - toCurBottom + toTopOffset + toBottomOffset\n\n    const grade = (Math.abs(toMax - fromMax) + Math.abs(toMin - fromMin)) === 0\n        ? 1\n        : (Math.abs(fromMax - currentMax) + Math.abs(fromMin - currentMin)) /\n            (Math.abs(toMax - fromMax) + Math.abs(toMin - fromMin))\n\n    ctx.lineWidth = lineWidth\n    ctx.strokeStyle = getColor(nightGrade, 1)\n\n    ctx.beginPath()\n\n    ctx.moveTo(offsetW, height + offsetH)\n    ctx.lineTo(offsetW + width, height + offsetH)\n\n    ctx.stroke()\n\n    drawGridLines(ctx, offsetW, height + offsetH - toOffsetH, width, dTo, nlines, lineMax, lineMin, textSize, fromRight, getColor(nightGrade, grade * zoomGrade), getYColor(nightGrade, grade * zoomGrade), grade)\n\n    if (grade < 1) {\n        drawGridLines(ctx, offsetW, height + offsetH - fromOffsetH, width, dFrom, nlines, lineMax, lineMin, textSize, fromRight, getColor(nightGrade, (1 - grade) * zoomGrade), getYColor(nightGrade, (1 - grade) * zoomGrade), grade)\n    }\n}\n\nfunction drawGridLines (ctx, offsetW, offsetH, width, height, nlines, fromVal, toVal, textSize, fromRight, color, yColor, grade) {\n\n    ctx.strokeStyle = color\n    ctx.fillStyle = yColor\n\n    ctx.beginPath()\n\n    const linesDiff = height / (nlines + 1)\n    const valsDiff = (fromVal - toVal) / (nlines - 1)\n\n    for (let i = 0, y = offsetH + linesDiff, v = fromVal; i < nlines; i++, y += linesDiff, v -= valsDiff) {\n        ctx.moveTo(offsetW, y)\n        ctx.lineTo(offsetW + width, y)\n        const x = fromRight ? offsetW + width - ctx.measureText(v).width : offsetW\n        ctx.fillText(v | 0, x, y - textSize / 2)\n    }\n\n    const v = (toVal - valsDiff) | 0\n    const x = fromRight ? offsetW + width - ctx.measureText(v).width : offsetW\n    ctx.fillText(v, x, offsetH + height - textSize / 2)\n\n    ctx.stroke()\n}\n\nexport function drawDates (ctx, offsetW, offsetH, scale, baseX, xDiff, format, left, right, fromPeriod, toPeriod, grade, getColor, nightGrade, zoomGrade) {\n\n    let fromFillStyle, toFillStyle\n\n    if (fromPeriod > toPeriod) {\n        toFillStyle = getColor(nightGrade, grade * zoomGrade)\n        fromFillStyle = getColor(nightGrade, zoomGrade)\n    } else {\n        toFillStyle = getColor(nightGrade, zoomGrade)\n        fromFillStyle = getColor(nightGrade, (1 - grade) * zoomGrade)\n    }\n\n    ctx.fillStyle = toFillStyle\n    const toN = Math.floor(left / toPeriod) - 1\n    for (let p = toPeriod * toN; p < right + toPeriod; p += toPeriod) {\n        const timestamp = Math.floor(baseX + xDiff * p)\n        drawDate(ctx, offsetW, offsetH, timestamp, format, p, left, scale)\n    }\n\n    if (fromPeriod === toPeriod) {\n        return\n    }\n\n    ctx.fillStyle = fromFillStyle\n    const fromN = Math.floor(left / fromPeriod) - 1\n    for (let p = fromPeriod * fromN; p < right + fromPeriod; p += fromPeriod) {\n        const timestamp = Math.floor(baseX + xDiff * p)\n        drawDate(ctx, offsetW, offsetH, timestamp, p, left, scale)\n    }\n}\n\nconst shortMonths = [\n    'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\n    'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\n]\nconst months = [\n    'January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'\n]\nconst shortDays = [ 'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat' ]\nconst days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n\n/*\n- Apr 1 'monthdate'\n- 1 April 2019 'date'\n- Saturday, 1 April 2019 'weekdate'\n- Sat, 1 April 2019 'shortweekdate'\n- 12:00 'hours'\n*/\n\nexport function formatDate (timestamp, format) {\n\n    const d = new Date(timestamp)\n\n    switch (format) {\n        case 'date':\n            return d.getUTCDate() + ' ' + months[d.getUTCMonth()] + ' ' + d.getUTCFullYear()\n        case 'hours':\n            return leftPad(d.getUTCHours()) + ':00'\n        case 'monthdate':\n            return shortMonths[d.getUTCMonth()] + ' ' + d.getUTCDate()\n        case 'weekdate':\n            return shortDays[d.getUTCDay()] + ', ' + d.getUTCDate() + ' ' + months[d.getUTCMonth()] + ' ' + d.getUTCFullYear()\n        case 'shortweekdate':\n            return days[d.getUTCDay()] + ', ' + d.getUTCDate() + ' ' + months[d.getUTCMonth()] + ' ' + d.getUTCFullYear()\n\n    }\n}\n\nfunction leftPad (v) {\n    return v < 10 ? '0' + v : v\n}\n\nconst dateOffset = fromCssSize(18)\n\nfunction drawDate (ctx, offsetW, offsetH, timestamp, format, position, left, scale) {\n    const text = formatDate(timestamp, format)\n    ctx.fillText(text, offsetW + (position - left) * scale - dateOffset, offsetH)\n}\n\nexport const controlWidth = fromCssSize(10)\nexport const previewPadding = fromCssSize(2)\nconst controlRadius = fromCssSize(8)\n\nexport function drawScrollControlls (ctx, offsetW, offsetH, width, height, from, to,\n    getPreviewBlurColor, getPreviewControlColor, nightGrade, zoomGrade) {\n\n    const left = offsetW + from * width + controlWidth\n    const right = offsetW + to * width - controlWidth\n    const fromH = offsetH - previewPadding\n    const toH = offsetH + height + previewPadding\n\n    ctx.fillStyle = getPreviewBlurColor(nightGrade, zoomGrade)\n    ctx.beginPath()\n    drawRoundedRect(ctx, offsetW, left, fromH, toH, controlRadius, 0)\n    drawRoundedRect(ctx, right, offsetW + width, fromH, toH, 0, controlRadius)\n    ctx.closePath()\n    ctx.fill()\n\n    ctx.fillStyle = getPreviewControlColor(nightGrade, zoomGrade)\n    ctx.beginPath()\n    drawRoundedRect(ctx, left - controlWidth, left, fromH, toH, controlRadius, 0)\n    drawRoundedRect(ctx, right, right + controlWidth, fromH, toH, 0, controlRadius)\n    ctx.closePath()\n    ctx.fill()\n\n    ctx.strokeStyle = getPreviewControlColor(nightGrade, zoomGrade)\n    ctx.moveTo(left, fromH)\n    ctx.lineTo(right, fromH)\n    ctx.moveTo(left, toH)\n    ctx.lineTo(right, toH)\n    ctx.stroke()\n}\n\nexport function drawRoundedRect (ctx, fromX, toX, fromY, toY, leftRadius, rightRadius) {\n    ctx.moveTo(fromX + leftRadius, fromY)\n    ctx.lineTo(toX - rightRadius, fromY)\n    ctx.quadraticCurveTo(toX, fromY, toX, fromY + rightRadius)\n    ctx.lineTo(toX, toY - rightRadius)\n    ctx.quadraticCurveTo(toX, toY, toX - rightRadius, toY)\n    ctx.lineTo(fromX + leftRadius, toY)\n    ctx.quadraticCurveTo(fromX, toY, fromX, toY - leftRadius)\n    ctx.lineTo(fromX, fromY + leftRadius)\n    ctx.quadraticCurveTo(fromX, fromY, fromX + leftRadius, fromY)\n}\n\nexport function drawCheckboxes (ctx, offsetW, offsetH, maxWidth, checkboxes, checkboxHeight, checkboxRadius, checkboxMargin, checkboxFont, nightGrade) {\n\n    const ctxFont = ctx.font\n\n    ctx.font = (checkboxHeight / 2) + 'px ' + checkboxFont\n\n    let leftOffset = offsetW, topOffset = offsetH\n\n    for (let checkbox of checkboxes) {\n        const textWidth = ctx.measureText(checkbox.label).width\n        const width = textWidth + 1.5 * checkboxHeight\n        if (leftOffset + width + 1.5 * checkboxMargin > maxWidth) {\n            leftOffset = offsetW\n            topOffset = checkboxHeight + checkboxMargin\n        }\n        drawCheckbox(ctx, leftOffset, topOffset, width, checkboxHeight, checkboxRadius,\n            checkbox.label, textWidth, checkbox.getColor, checkbox.grade, nightGrade)\n        checkbox.x = leftOffset\n        checkbox.y = topOffset\n        checkbox.toX = leftOffset + width\n        checkbox.toY = topOffset + checkboxHeight\n        leftOffset += width + checkboxMargin\n    }\n\n    ctx.font = ctxFont\n}\n\nconst checkboxBorderWidth = fromCssSize(4)\n\nexport function drawCheckbox (ctx, offsetW, offsetH, width, height, radius, text, textWidth, getColor, grade, nightGrade) {\n\n    ctx.strokeStyle = getColor(0, 0)\n    ctx.lineWidth = checkboxBorderWidth\n\n    ctx.beginPath()\n    ctx.fillStyle = getColor(1 - grade, nightGrade)\n    drawRoundedRect(ctx, offsetW, offsetW + width, offsetH, offsetH + height, radius, radius)\n    ctx.closePath()\n    ctx.stroke()\n    ctx.fill()\n\n    ctx.fillStyle = getColor(grade, 0)\n    ctx.strokeStyle = ctx.fillStyle\n    ctx.fillText(text, offsetW + 0.75 * height + height * grade / 3, offsetH + 2/3 * height)\n\n    if (grade > 0.5) {\n        const checkGrade = 2 * (grade - 0.5)\n        ctx.lineWidth = checkboxBorderWidth / 2\n        ctx.beginPath()\n        const o = offsetW + height / 4\n        ctx.moveTo(o, offsetH + height / 2)\n        ctx.lineTo(o + height / 6, offsetH + height * 2/3)\n        ctx.lineTo(o + height / 6 + height / 3 * checkGrade, offsetH + height * 2/3 - height / 3 * checkGrade)\n        ctx.stroke()\n    }\n}\n\nconst legendPadding = fromCssSize(10)\nconst legendOffset = fromCssSize(10)\nconst crossRadius = fromCssSize(4)\n\nexport function drawRuller (ctx, offsetW, offsetH, rullerWidth, rullerHeight, width, left, right, range, position, getRullerColor, alphaGrade, nightGrade) {\n\n    const leftOffset = offsetW + (position - left) / (range) * width\n\n    ctx.lineWidth = rullerWidth\n    ctx.strokeStyle = getRullerColor(nightGrade, alphaGrade)\n    ctx.beginPath()\n    ctx.moveTo(leftOffset, offsetH)\n    ctx.lineTo(leftOffset, offsetH + rullerHeight)\n    ctx.stroke()\n}\n\nexport function drawLinesLegend (ctx, x, lineKinds, lineLabels, lineStates, lineGrades, lineColors, lineWidth,\n    position, closestIndex, offsetW, offsetH, left, right, range, width, height, xDiff,\n    paramKinds,\n    textSize, textFont, getLegendColor, getLegendBorderColor, getLegendFontColor, getBackgroundColor,\n    alphaGrade, nightGrade, coordinates, zoomGrade, format, drawArrow) {\n\n    const ctxFont = ctx.font\n\n    const legendFont = textSize + 'px ' + textFont\n\n    const timestamp = Math.floor(x[1] + xDiff * position)\n\n    const text = formatDate(timestamp, format)\n\n    const leftOffset = offsetW + (position - left) / (range) * width\n\n    ctx.font = 'bold ' + legendFont\n    let contentWidth = ctx.measureText(text).width + 3 * legendPadding\n    let contentHeight = textSize\n\n    let maxValueWidth = 0\n\n    let lowestTopOffset = height\n\n    for (let i = 0; i < lineKinds.length; i++) {\n\n        const lines = lineKinds[i]\n\n        for (const line of lines) {\n\n            const label = line[0]\n\n            if (lineStates[label] || lineGrades[label] > 0) {\n\n                const val = line[closestIndex]\n                const name = lineLabels[label]\n\n                ctx.font = legendFont\n                const nameWidth = ctx.measureText(name).width\n                ctx.font = 'bold ' + legendFont\n                const valWidth = ctx.measureText(val).width\n\n                contentHeight += legendPadding + textSize\n\n                const lineWidth = valWidth + nameWidth + legendPadding\n\n                if (lineWidth > contentWidth) {\n                    contentWidth = lineWidth\n                }\n\n                if (valWidth > maxValueWidth) {\n                    maxValueWidth = valWidth\n                }\n\n                let approxValue = val\n\n                if (x[closestIndex] > timestamp) {\n                    const lowerIndex = Math.max(1, closestIndex - 1)\n                    approxValue = approximateHeight(x, line, timestamp, lowerIndex, closestIndex)\n                } else if (x[closestIndex] < timestamp) {\n                    const upperIndex = Math.min(x.length - 1, closestIndex + 1)\n                    approxValue = approximateHeight(x, line, timestamp, closestIndex, upperIndex)\n                }\n\n                const param = paramKinds[i]\n\n                // const topOffset = height - (approxValue - currentMinHeight) * (height - topGraphOffsetH - bottomGraphOffsetH) / (currentMaxHeight - currentMinHeight)\n                // top, bottom, max, min\n                const topOffset = height - (approxValue - param[3]) * (height - param[0] - param[1]) / (param[2] - param[3])\n\n                if (topOffset < lowestTopOffset) {\n                    lowestTopOffset = topOffset\n                }\n            }\n        }\n    }\n\n    const legendWidth = contentWidth + 2 * legendPadding\n    const legendHeight = contentHeight + 2 * legendPadding\n\n    let legendOffsetLeft = leftOffset - legendWidth / 2\n\n    let additionalOffset = 0\n\n    if (lowestTopOffset - legendPadding < offsetH + legendHeight) {\n        additionalOffset = legendWidth / 2 + legendPadding\n    }\n\n    let nextOffset = legendOffsetLeft + additionalOffset\n\n    if (nextOffset < 0) {\n        additionalOffset = additionalOffset ? -additionalOffset : legendWidth / 2 + 10\n    }\n\n    const rightOverflow = nextOffset + legendWidth - width + offsetW\n\n    if (rightOverflow > 0) {\n        additionalOffset = additionalOffset ? -additionalOffset : -legendWidth / 2 - 10\n    }\n\n    legendOffsetLeft += additionalOffset\n\n    ctx.fillStyle = getLegendColor(nightGrade, alphaGrade)\n    ctx.strokeStyle = getLegendBorderColor(alphaGrade)\n    ctx.lineWidth = 1\n    ctx.beginPath()\n    coordinates.x = legendOffsetLeft\n    coordinates.toX = coordinates.x + legendWidth\n    coordinates.y = offsetH\n    coordinates.toY = coordinates.y + legendHeight\n    drawRoundedRect(ctx, coordinates.x, coordinates.toX, coordinates.y, coordinates.toY, controlRadius, controlRadius)\n    ctx.closePath()\n    ctx.fill()\n    ctx.stroke()\n\n    let textOffsetH = coordinates.y + legendPadding + textSize\n\n    ctx.fillStyle = getLegendFontColor(nightGrade, alphaGrade)\n    ctx.fillText(text, coordinates.x + legendPadding, textOffsetH)\n\n    if (drawArrow) {\n        ctx.beginPath()\n        const arrowSide = textSize / 2\n        ctx.moveTo(coordinates.toX - legendPadding - arrowSide, coordinates.y + legendPadding)\n        ctx.lineTo(coordinates.toX - legendPadding, coordinates.y + legendPadding + arrowSide)\n        ctx.lineTo(coordinates.toX - legendPadding - arrowSide, coordinates.y + legendPadding + textSize)\n        ctx.stroke()\n    }\n\n    textOffsetH += legendPadding + textSize\n\n    for (let lines of lineKinds) {\n        for (const line of lines) {\n\n            const label = line[0]\n\n            if (lineStates[label] || lineGrades[label] > 0) {\n\n                const value = line[closestIndex]\n                const name = lineLabels[label]\n\n                ctx.font = legendFont\n                ctx.fillStyle = getLegendFontColor(nightGrade, lineGrades[label] * alphaGrade)\n                ctx.fillText(name, coordinates.x + legendPadding, textOffsetH)\n\n                ctx.font = 'bold ' + legendFont\n                ctx.fillStyle = lineColors[label](lineGrades[label] * zoomGrade)\n                const valWidth = ctx.measureText(value).width\n                ctx.fillText(value, coordinates.x + legendPadding + contentWidth - valWidth, textOffsetH)\n\n                textOffsetH += legendPadding + textSize\n            }\n        }\n    }\n\n    ctx.font = ctxFont\n}\n\nexport function drawLinesCross (ctx, x, line, lineLabels, lineStates, lineGrades, lineColors, lineWidth,\n    position, closestIndex, offsetW, offsetH, left, right, range, width, height, xDiff,\n    topGraphOffsetH, bottomGraphOffsetH, currentMaxHeight, currentMinHeight,\n    getBackgroundColor, nightGrade, zoomGrade) {\n\n    if (zoomGrade < 1) { return }\n\n    if (currentMinHeight >= currentMaxHeight) {\n        return\n    }\n\n    const label = line[0]\n\n    const scaleY = (height - topGraphOffsetH - bottomGraphOffsetH) / (currentMaxHeight - currentMinHeight)\n    const leftOffset = offsetW + (position - left) / (range) * width\n\n    const timestamp = Math.floor(x[1] + xDiff * position)\n\n    if (lineStates[label] || lineGrades[label] > 0) {\n\n        const value = line[closestIndex]\n        ctx.strokeStyle = lineColors[label](lineGrades[label] * zoomGrade)\n\n        let approxValue = value\n\n        if (x[closestIndex] > timestamp) {\n            const lowerIndex = Math.max(1, closestIndex - 1)\n            approxValue = approximateHeight(x, line, timestamp, lowerIndex, closestIndex)\n        } else if (x[closestIndex] < timestamp) {\n            const upperIndex = Math.min(x.length - 1, closestIndex + 1)\n            approxValue = approximateHeight(x, line, timestamp, closestIndex, upperIndex)\n        }\n\n        const topOffset = offsetH + height - bottomGraphOffsetH - (approxValue - currentMinHeight) * scaleY\n\n        ctx.fillStyle = getBackgroundColor(nightGrade)\n        ctx.lineWidth = lineWidth\n        ctx.beginPath()\n        ctx.arc(leftOffset, topOffset, crossRadius, 0, 2 * Math.PI)\n        ctx.fill()\n        ctx.stroke()\n    }\n}\n\nfunction approximateHeight (x, line, timestamp, lowerIndex, upperIndex) {\n    const affinity = (timestamp - x[lowerIndex]) / (x[upperIndex] - x[lowerIndex])\n    return line[lowerIndex] + (line[upperIndex] - line[lowerIndex]) * affinity\n}\n\nexport function drawHeader (ctx, offsetW, offsetH, headerHeight, fontSize, font, text, getColor, nightGrade, zoomGrade) {\n\n    let ctxFont = ctx.font\n\n    ctx.fillStyle = getColor(nightGrade, zoomGrade)\n    ctx.font = 'bold ' + fontSize + 'px ' + font\n\n    ctx.fillText(text, offsetW, offsetH + (headerHeight + fontSize) / 2)\n\n    ctx.font = ctxFont\n}\n\nconst magnifierLineWidth = fromCssSize(2)\n\nexport function drawZoomOutControl (ctx, offsetW, offsetH, headerHeight, fontSize, font, getColor, nightGrade, zoomGrade, coords) {\n\n    let ctxFont = ctx.font\n\n    ctx.fillStyle = getColor(nightGrade, zoomGrade)\n    ctx.strokeStyle = ctx.fillStyle\n    ctx.font = 'bold ' + fontSize + 'px ' + font\n\n    const magnifierHeight = fontSize + 2 * magnifierLineWidth\n    const magnifierRadius = (fontSize - 2 * magnifierLineWidth) / 2\n\n    ctx.lineWidth = magnifierLineWidth\n    ctx.beginPath()\n\n    ctx.arc(offsetW + magnifierRadius, headerHeight / 2, magnifierRadius, 0, 2 * Math.PI)\n    ctx.moveTo(offsetW + magnifierRadius - 1.5 * magnifierLineWidth, headerHeight / 2)\n    ctx.lineTo(offsetW + magnifierRadius + 1.5 * magnifierLineWidth, headerHeight / 2)\n    ctx.moveTo(offsetW + 1.5 * magnifierRadius, headerHeight / 2 + 0.5 * magnifierRadius)\n    ctx.lineTo(offsetW + 2.5 * magnifierRadius, headerHeight / 2 + 1.5 * magnifierRadius)\n\n    ctx.stroke()\n\n    const zoomOutText = 'Zoom Out'\n\n    coords.x = offsetW\n    coords.toX = offsetW + ctx.measureText(zoomOutText).width + magnifierHeight\n    coords.y = offsetH\n    coords.toY = coords.y + headerHeight\n\n    ctx.fillText(zoomOutText, offsetW + magnifierHeight, offsetH + (headerHeight + fontSize) / 2)\n\n    ctx.font = ctxFont\n}\n\nexport function drawDateRangeSummary (ctx, offsetW, offsetH, width, headerHeight, headerFontSize, baseDate, xDiff, left, right, isRange, fontSize, font, getColor, nightGrade, zoomGrade) {\n\n    let ctxFont = ctx.font\n\n    ctx.fillStyle = getColor(nightGrade, zoomGrade)\n    ctx.font = 'bold ' + fontSize + 'px ' + font\n\n    const leftTimestamp = baseDate + xDiff * left\n    const rightTimestamp = baseDate + xDiff * right\n\n    let text\n\n    if (isRange) {\n        text = formatDate(leftTimestamp, 'date') + ' - ' + formatDate(rightTimestamp, 'date')\n    } else {\n        text = formatDate((leftTimestamp + rightTimestamp) / 2, 'weekdate')\n    }\n\n    ctx.fillText(text, offsetW + width - ctx.measureText(text).width, offsetH + (headerHeight + fontSize) / 2 + (headerFontSize - fontSize) / 2)\n\n    ctx.font = ctxFont\n}\n\nexport function getLowerIndex (x, procent) {\n    const val = x[1] + (x[x.length - 1] - x[1]) * procent\n    const idx = binarySearch(x, val, 1)\n    return x[idx] > val ? Math.max(idx - 1, 1) : idx\n}\n\nexport function getUpperIndex (x, procent) {\n    const val = x[1] + (x[x.length - 1] - x[1]) * procent\n    const idx = binarySearch(x, val, 1)\n    return x[idx] < val ? Math.min(idx + 1, x.length - 1) : idx\n}\n\n\nexport function getClosestIndex (x, procent) {\n    const val = x[1] + (x[x.length - 1] - x[1]) * procent\n    return binarySearch(x, val, 1)\n}\n\nfunction binarySearch (arr, val, i = 0) {\n\n    const len = arr.length\n\n    let j = len - 1\n\n    while (i < j) {\n        const m = (j + i) >>> 1\n        const v = arr[m]\n        if (v > val) {\n            j = m - 1\n        } else if (v < val) {\n            i = m + 1\n        } else {\n            return m\n        }\n    }\n\n    const diff = val - arr[i]\n\n    if (diff > 0) {\n        return i < len - 1 && diff > arr[i+1] - val ? i + 1 : i\n    } else {\n        return i > 0 && diff < arr[i-1] - val ? i - 1 : i\n    }\n}\n\nexport function getMaxY (x, lines, lineStates, left, right) {\n\n    let max = 0\n\n    const from = getLowerIndex(x, left)\n    const to = getUpperIndex(x, right)\n\n    for (const line of lines) {\n\n        if (!lineStates[line[0]]) {\n            continue\n        }\n\n        for (let i = from; i < to; i++) {\n            if (line[i] > max) {\n                max = line[i]\n            }\n        }\n    }\n\n    return max\n}\n\nexport function getMinY (x, lines, lineStates, left, right) {\n\n    let min = Infinity\n\n    const from = getLowerIndex(x, left)\n    const to = getUpperIndex(x, right)\n\n    for (const line of lines) {\n\n        if (!lineStates[line[0]]) {\n            continue\n        }\n\n        for (let i = from; i < to; i++) {\n            if (line[i] < min) {\n                min = line[i]\n            }\n        }\n    }\n\n    return min\n}\n\nfunction colorFromRGBA (r, g, b, a) {\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')'\n}\n\nexport function animatableAlphaHEXcolor (hex, alpha) {\n\n    const R = getR(hex)\n    const G = getG(hex)\n    const B = getB(hex)\n\n    return function (grade) {\n        return colorFromRGBA(R, G, B, alpha * grade)\n    }\n}\n\nexport function animatableHexColor (fromHex, fromAlpha, toHex, toAlpha) {\n\n    const fromR = getR(fromHex)\n    const fromG = getG(fromHex)\n    const fromB = getB(fromHex)\n    const dR = getR(toHex) - fromR\n    const dG = getG(toHex) - fromG\n    const dB = getB(toHex) - fromB\n    const dAlpha = toAlpha - fromAlpha\n\n    return function (grade, alphaGrade = 1) {\n        return colorFromRGBA(\n            fromR + dR * grade,\n            fromG + dG * grade,\n            fromB + dB * grade,\n            (fromAlpha + dAlpha * grade) * alphaGrade\n        )\n    }\n}\n\nexport function dynamicHexColor (fromHex, fromAlpha, toHex, toAlpha, toAltHex, toAltAlpha) {\n\n    const fromR = getR(fromHex)\n    const fromG = getG(fromHex)\n    const fromB = getB(fromHex)\n    const toDR = getR(toHex) - fromR\n    const toDG = getG(toHex) - fromG\n    const toDB = getB(toHex) - fromB\n    const toAltDR = getR(toAltHex) - fromR\n    const toAltDG = getG(toAltHex) - fromG\n    const toAltDB = getB(toAltHex) - fromB\n    const toDAlpha = toAlpha - fromAlpha\n    const toDAltAlpha = toAltAlpha - fromAlpha\n\n    return function (grade, pickGrade = 0) {\n        const notPickGrade = 1 - pickGrade\n        return colorFromRGBA(\n            (fromR + toDR * grade) * notPickGrade +\n            (fromR + toAltDR * grade) * pickGrade,\n            (fromG + toDG * grade) * notPickGrade +\n            (fromG + toAltDG * grade) * pickGrade,\n            (fromB + toDB * grade) * notPickGrade +\n            (fromB + toAltDB * grade) * pickGrade,\n            (fromAlpha + toDAlpha * grade) * notPickGrade +\n            (fromAlpha + toDAltAlpha * grade) * pickGrade\n        )\n    }\n}\n\nfunction getR (hex) {\n    return parseInt(hex.slice(1, 3), 16)\n}\n\nfunction getG (hex) {\n    return parseInt(hex.slice(3, 5), 16)\n}\n\nfunction getB (hex) {\n    return parseInt(hex.slice(5), 16)\n}\n","import {\n    toCssSize,\n    fromCssSize\n} from './draw-tools'\n\nclass AnimatedCanvas {\n\n    constructor (options) {\n\n        this.animations = {}\n        this.running = false\n        this.prevMs = undefined\n\n        this.el = document.createElement('div')\n        this.el.className = 'chart'\n\n        this.canvasEl = document.createElement('canvas')\n        this.ctx = this.canvasEl.getContext('2d')\n\n        this.el.appendChild(this.canvasEl)\n\n        this.setFont(options)\n        this.setSize(options)\n    }\n\n    animate () {\n\n        if (this.running) {\n            return\n        }\n\n        this.running = true\n\n        const step = (ms) => {\n\n            if (!this.prevMs) {\n                this.prevMs = ms\n                requestAnimationFrame(step)\n                return\n            }\n\n            const diffMs = ms - this.prevMs\n            this.prevMs = ms\n\n            if (diffMs === 0) {\n                requestAnimationFrame(step)\n                return\n            }\n\n            let hasAnimations = false\n\n            for (const uniqName in this.animations) {\n                const anim = this.animations[uniqName]\n                if (!anim || anim.from === anim.to || anim.from === Infinity || anim.to === Infinity) {\n                    this.animations[uniqName] = null\n                    continue\n                }\n                hasAnimations = true\n                anim.container[anim.prop] += (anim.to - anim.from) * diffMs / anim.duration\n                if ((anim.container[anim.prop] - anim.from) / (anim.to - anim.from) >= 1) {\n                    anim.container[anim.prop] = anim.to\n                    anim.from = anim.to\n                }\n            }\n\n            if (hasAnimations) {\n                requestAnimationFrame(step)\n            } else {\n                this.prevMs = undefined\n                this.running = false\n            }\n\n            this.render()\n        }\n\n        requestAnimationFrame(step)\n    }\n\n    render () {\n\n    }\n\n    addAnimation (container, prop, to, duration, uniqName) {\n        this.animations[uniqName || prop] = {\n            container,\n            prop,\n            from: container[prop],\n            to,\n            duration\n        }\n    }\n\n    cancelAnimation (uniqName) {\n        delete this.animations[uniqName]\n    }\n\n    setSize (options) {\n\n        this.width = fromCssSize(options.width)\n        this.canvasEl.width = this.width\n        this.canvasEl.style.width = options.width + 'px'\n\n        this.height = fromCssSize(options.height)\n        this.canvasEl.height = this.height\n        this.canvasEl.style.height = options.height + 'px'\n    }\n\n    setFont (options) {\n        this.textSize = fromCssSize(options.fontSize)\n        this.textFont = options.fontFamily\n        this.ctxFont = this.textSize + 'px ' + options.fontFamily\n        this.ctx.font = this.ctxFont\n    }\n}\n\nexport default AnimatedCanvas\n","import AnimatableChart from '../animatable_chart'\nimport {\n\n    controlWidth,\n    previewPadding,\n    calcYAlignment,\n\n    animatableAlphaHEXcolor,\n    animatableHexColor,\n    dynamicHexColor,\n\n    fromCssSize,\n    toCssSize,\n    getMaxY,\n    getMinY,\n    getClosestIndex,\n    getLowerIndex,\n    getUpperIndex,\n    drawLines,\n    drawScrollControlls,\n    drawGrid,\n    drawTranslateYLabels,\n    drawDates,\n    drawCheckboxes,\n    drawLinesLegend,\n    drawHeader,\n    drawZoomOutControl,\n    drawDateRangeSummary,\n    drawRuller,\n    drawLinesCross,\n} from '../draw-tools'\n\nexport default class LineChart extends AnimatableChart {\n\n    constructor (data, options) {\n        super(options)\n\n        this.headerText = options.header\n\n        this.details = data.details\n\n        data = data.overview\n\n        this.x = getX(data)\n        this.lines = getLines(data)\n\n        this.xDiff = this.x[this.x.length - 1] - this.x[1]\n        this.lineStates = {}\n        this.lineGrades = {}\n        this.lineColors = {}\n        this.lineLabels = data.names\n        this.checkboxes = []\n        this.checkboxLabelToIndex = {}\n        let i = 0\n        for (let label in data.names) {\n            this.lineStates[label] = true\n            this.lineGrades[label] = 1\n            this.lineColors[label] = animatableAlphaHEXcolor(data.colors[label], 1)\n            this.checkboxLabelToIndex[label] = i++\n            this.checkboxes.push({\n                id: label,\n                label: data.names[label],\n                getColor: dynamicHexColor(data.colors[label], 1, '#FFFFFF', 1, '#26333F', 1),\n                grade: 1,\n                x: 0,\n                y: 0,\n                toX: 0,\n                toY: 0,\n            })\n        }\n\n        this.currentLeft = this.scrollLeft = options.from\n        this.currentRight = this.scrollRight = options.to\n        this.currentRange = options.to - options.from\n\n        this.currentMaxHeight = this.fromMaxHeight = this.toMaxHeight =\n            getMaxY(this.x, this.lines, this.lineStates, this.currentLeft, this.currentRight)\n        this.maxHeight = getMaxY(this.x, this.lines, this.lineStates, 0, 1)\n\n        this.currentMinHeight = this.fromMinHeight = this.toMinHeight =\n            getMinY(this.x, this.lines, this.lineStates, this.currentLeft, this.currentRight)\n        this.minHeight = getMinY(this.x, this.lines, this.lineStates, 0, 1)\n\n        this.fromPeriod = this.toPeriod = 0\n        this.datesGrade = 1\n\n        this.moveDir = 'no'\n\n        this.legendShown = false\n        this.legendMoving = false\n        this.legendPosition = 0\n        this.pickedIndex = 0\n        this.legendCoordinates = {}\n\n        this.nightGrade = 0\n\n        this.zoomFromGrade = 1\n        this.zoomToGrade = 0\n        this.zoomedIndex = -1\n        this.zoomedData = null\n        this.ref = this\n        this.zoomState = 'overview'\n        this.zoomOutCoords = {}\n\n        this.yAlign = { top: 0, bottom: 0 }\n\n        this.el.addEventListener('mousedown', e => this.onMouseDown(e))\n        this.el.addEventListener('mousemove', e => this.onMouseMove(e))\n        this.el.addEventListener('mouseup', e => this.onMouseUp(e))\n        this.el.addEventListener('mouseleave', e => this.onMouseLeave(e))\n\n        this.el.addEventListener('touchstart', e => this.onTouchStart(e))\n        this.el.addEventListener('touchmove', e => this.onTouchMove(e))\n        this.el.addEventListener('touchend', e => this.onTouchEnd(e))\n\n\n        this.animationDurationMs = 250\n\n        this.getGridColor = animatableHexColor('#182D3B', 0.1, '#FFFFFF', 0.1)\n        this.getAxisColor = animatableHexColor('#8E8E93', 1, '#A3B1C2', 0.6)\n        this.getRullerColor = animatableHexColor('#182D3B', 0.1, '#FFFFFF', 0.1)\n        this.getLegendBorderColor = animatableAlphaHEXcolor('#1E1E1E', 0.2)\n        this.getLegendFontColor = animatableHexColor('#000000', 1, '#FFFFFF', 1)\n        this.getLegendColor = animatableHexColor('#FFFFFF', 1, '#1F2A35', 1)\n        this.getBackgroundColor = animatableHexColor('#FFFFFF', 1, '#26333F', 1)\n        this.getPreviewBlurColor = animatableHexColor('#E2EEF9', 0.6, '#304259', 0.6)\n        this.getPreviewControlColor = animatableHexColor('#C0D1E1', 1, '#56626D', 1)\n        this.getZoomOutColor = animatableHexColor('#108BE3', 1, '#48AAF0', 1)\n    }\n\n    setSize (options) {\n\n        this.setBasicSizes(options)\n        this.setWidth(options.width)\n\n        const previewOffsetH = options.headerHeight + options.height + options.fontSize * 2\n        const checkboxesOffsetH = previewOffsetH + options.previewHeight + options.padH\n        const height = checkboxesOffsetH + options.checkboxesAreaHeight\n\n        this.height = fromCssSize(height)\n        this.canvasEl.height = fromCssSize(height)\n        this.canvasEl.style.height = height + 'px'\n\n        this.chartHeight = fromCssSize(options.height - 2 * options.padH)\n        this.mainLinesOffsetH = this.headerHeight + this.padH\n        this.datesOffsetH = this.headerHeight + this.chartHeight + this.padH + 1.5 * this.textSize\n        this.previewOffsetH = fromCssSize(previewOffsetH)\n        this.checkboxesOffsetH = fromCssSize(checkboxesOffsetH)\n    }\n\n    setWidth (width, resize) {\n\n        this.width = fromCssSize(width)\n        this.canvasEl.width = this.width\n        this.canvasEl.style.width = width + 'px'\n\n        this.chartWidth = this.width - 2 * this.padW\n\n        this.ctx.font = this.ctxFont\n        this.ctx.lineJoin = 'bevel'\n\n        if (resize) {\n            this.render()\n        }\n    }\n\n    setBasicSizes (options) {\n        this.padW = fromCssSize(options.padW)\n        this.padH = fromCssSize(options.padH)\n        this.datesDiff = fromCssSize(options.datesDiff)\n        this.previewPadW = fromCssSize(options.previewPadW)\n        this.previewPadH = fromCssSize(options.previewPadH)\n        this.previewHeight = fromCssSize(options.previewHeight)\n        this.checkboxHeight = fromCssSize(options.checkboxHeight)\n        this.checkboxRadius = fromCssSize(options.checkboxRadius)\n        this.checkboxMargin = fromCssSize(options.checkboxMargin)\n        this.lineWidth = fromCssSize(options.lineWidth)\n        this.rullerWidth = fromCssSize(options.rullerWidth)\n        this.previewLineWidth = fromCssSize(options.previewLineWidth)\n        this.gridLineWidth = fromCssSize(options.gridLineWidth)\n        this.legendTextSize = fromCssSize(options.legendFontSize)\n        this.headerFontSize = fromCssSize(options.headerFontSize)\n        this.dateRangeFontSize = fromCssSize(options.dateRangeFontSize)\n        this.headerHeight = fromCssSize(options.headerHeight)\n    }\n\n    move (ref, left, right) {\n        ref.currentLeft = left\n        ref.currentRight = right\n        ref.currentRange = right - left\n        this.animate()\n    }\n\n    toggle (label) {\n        this.lineStates[label] = !this.lineStates[label]\n        const to = +this.lineStates[label]\n        this.addAnimation(this.lineGrades, label, to, this.animationDurationMs)\n        this.addAnimation(this.checkboxes[this.checkboxLabelToIndex[label]], 'grade', to, this.animationDurationMs, 'checkbox_' + label)\n        this.animate()\n    }\n\n    zoom (index, direction) {\n\n        if (direction) {\n            this.addAnimation(this, 'zoomFromGrade', 0, this.animationDurationMs)\n            if (index !== this.zoomedIndex) {\n                this.zoomedData = this.getDetails(index)\n                this.zoomedIndex = index\n            }\n            this.ref = this.zoomedData\n            this.addAnimation(this, 'zoomToGrade', 1, this.animationDurationMs)\n            this.zoomState = 'details'\n        } else {\n            this.ref = this\n            this.addAnimation(this, 'zoomFromGrade', 1, this.animationDurationMs)\n            this.addAnimation(this, 'zoomToGrade', 0, this.animationDurationMs)\n            this.zoomState = 'overview'\n        }\n\n        this.animate()\n    }\n\n    render () {\n\n        this.ctx.clearRect(0, 0, this.width, this.height)\n\n        if (this.zoomFromGrade > 0) {\n            this.calc(this)\n\n            drawHeader(this.ctx, this.padW, 0, this.headerHeight, this.headerFontSize, this.textFont, this.headerText, this.getLegendFontColor, this.nightGrade, this.zoomFromGrade)\n            drawDateRangeSummary(this.ctx, this.padW, 0, this.chartWidth, this.headerHeight, this.headerFontSize, this.x[1], this.xDiff, this.currentLeft, this.currentRight, true, this.dateRangeFontSize, this.textFont, this.getLegendFontColor, this.nightGrade, this.zoomFromGrade)\n\n            this.drawLineChart(this, false, 'monthdate', 'shortweekdate', this.zoomFromGrade)\n        }\n\n        if (this.zoomToGrade > 0) {\n            const details = this.zoomedData\n            this.calc(details)\n\n            drawZoomOutControl(this.ctx, this.padW, 0, this.headerHeight, this.headerFontSize, this.textFont, this.getZoomOutColor, this.nightGrade, this.zoomToGrade, this.zoomOutCoords)\n            drawDateRangeSummary(this.ctx, this.padW, 0, this.chartWidth, this.headerHeight, this.headerFontSize, details.x[1], details.xDiff, details.currentLeft, details.currentRight, false, this.dateRangeFontSize, this.textFont, this.getLegendFontColor, this.nightGrade, this.zoomToGrade)\n\n            this.drawLineChart(details, true, 'hours', 'hours', this.zoomToGrade)\n        }\n\n        // redraw only if checked\n        drawCheckboxes(this.ctx, this.padW, this.checkboxesOffsetH, this.chartWidth,\n            this.checkboxes, this.checkboxHeight, this.checkboxRadius, this.checkboxMargin, this.textFont, this.nightGrade)\n    }\n\n    drawLineChart (ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade) {\n\n        drawGrid(this.ctx, this.padW, this.headerHeight, this.chartWidth, this.chartHeight + this.padH, 5,\n            ref.fromMaxHeight, ref.toMaxHeight, ref.currentMaxHeight,\n            ref.fromMinHeight, ref.toMinHeight, ref.currentMinHeight,\n            ref.yAlign.max, ref.yAlign.min, ref.yAlign.top, ref.yAlign.bottom,\n            this.getGridColor, this.getAxisColor, false, 1, this.gridLineWidth, this.textSize, this.nightGrade, zoomGrade)\n\n        drawLines(this.ctx, ref.x, ref.lines, this.lineStates, this.lineGrades, this.lineColors,\n            this.chartWidth, this.chartHeight + this.padH - ref.yAlign.top, this.padW, this.headerHeight + ref.yAlign.top, ref.yAlign.bottom,\n            ref.currentLeft, ref.currentRight, ref.xDiff * ref.currentRange, ref.currentMaxHeight, ref.currentMinHeight, this.lineWidth, zoomGrade, shrink)\n\n        // redraw only if moving\n        drawDates(this.ctx, this.padW, this.datesOffsetH,\n            this.chartWidth / ref.currentRange, ref.x[1], ref.xDiff, yAxisdateFormat, ref.currentLeft, ref.currentRight,\n            this.fromPeriod, this.toPeriod, this.datesGrade, this.getAxisColor, this.nightGrade, zoomGrade)\n\n        drawLines(this.ctx, ref.x, ref.lines, this.lineStates, this.lineGrades, this.lineColors,\n            this.chartWidth, this.previewHeight, this.padW, this.previewOffsetH, 0,\n            0, 1, ref.xDiff, ref.maxHeight, ref.minHeight, this.previewLineWidth, zoomGrade, shrink)\n\n        // redraw only if moving or checked\n        drawScrollControlls(this.ctx, this.padW, this.previewOffsetH, this.chartWidth, this.previewHeight,\n            ref.currentLeft, ref.currentRight, this.getPreviewBlurColor, this.getPreviewControlColor, this.nightGrade, zoomGrade)\n\n        if (ref.legendShown && (zoomGrade < 1 || (ref.legendPosition >= ref.currentLeft && ref.legendPosition <= ref.currentRight))) {\n\n            drawRuller(this.ctx, this.padW, this.headerHeight + this.padH, this.rullerWidth, this.chartHeight, this.chartWidth,\n                ref.currentLeft, ref.currentRight, ref.currentRange, ref.legendPosition, this.getRullerColor, zoomGrade, this.nightGrade)\n\n            for (let line of ref.lines) {\n                drawLinesCross(this.ctx, ref.x, line, this.lineLabels, this.lineStates, this.lineGrades, this.lineColors, this.lineWidth,\n                    ref.legendPosition, ref.pickedIndex, this.padW, this.headerHeight, ref.currentLeft, ref.currentRight, ref.currentRange,\n                    this.chartWidth, this.chartHeight + this.padH, ref.xDiff,\n                    ref.yAlign.top, ref.yAlign.bottom, ref.currentMaxHeight, ref.currentMinHeight,\n                    this.getBackgroundColor, this.nightGrade, zoomGrade)\n            }\n\n            drawLinesLegend(this.ctx, ref.x, [ref.lines], this.lineLabels, this.lineStates, this.lineGrades, this.lineColors, this.lineWidth,\n                ref.legendPosition, ref.pickedIndex, this.padW, this.headerHeight + this.padH, ref.currentLeft, ref.currentRight, ref.currentRange,\n                this.chartWidth, this.chartHeight + this.padH, ref.xDiff,\n                [[ref.yAlign.top, ref.yAlign.bottom, ref.currentMaxHeight, ref.currentMinHeight]],\n                this.legendTextSize, this.textFont, this.getLegendColor, this.getLegendBorderColor, this.getLegendFontColor, this.getBackgroundColor,\n                zoomGrade, this.nightGrade, ref.legendCoordinates, zoomGrade, legendDateFormat, this.zoomState === 'overview')\n        }\n    }\n\n    calc (ref) {\n        this.calcHeight(ref)\n        this.calcDates(ref)\n        this.calcYAlignment(ref)\n    }\n\n    calcYAlignment(ref) {\n\n        const chartHeight = this.chartHeight + this.padH\n        const linesDiff = chartHeight / 6\n\n        calcYAlignment(ref.toMaxHeight, ref.toMinHeight,\n            chartHeight - this.padH, this.padH, chartHeight - linesDiff, linesDiff, chartHeight, ref.yAlign)\n    }\n\n    calcHeight (ref) {\n\n        const visibleMaxHeight = getMaxY(ref.x, ref.lines, ref.lineStates, ref.currentLeft, ref.currentRight)\n\n        if (visibleMaxHeight !== ref.toMaxHeight) {\n            const uniqName = this.zoomState + 'currentMaxHeight'\n            this.addAnimation(ref, 'currentMaxHeight', visibleMaxHeight, this.animationDurationMs, uniqName)\n            this.animate()\n        }\n\n        const visibleMinHeight = getMinY(ref.x, ref.lines, ref.lineStates, ref.currentLeft, ref.currentRight)\n\n        if (visibleMinHeight !== ref.toMinHeight) {\n            const uniqName = this.zoomState + 'currentMinHeight'\n            this.addAnimation(ref, 'currentMinHeight', visibleMinHeight, this.animationDurationMs, uniqName)\n            this.animate()\n        }\n\n        const maxAnim = this.animations[this.zoomState + 'currentMaxHeight']\n\n        if (maxAnim) {\n            ref.fromMaxHeight = maxAnim.from\n            ref.toMaxHeight = maxAnim.to\n        }\n\n        const minAnim = this.animations[this.zoomState + 'currentMinHeight']\n\n        if (minAnim) {\n            ref.fromMinHeight = minAnim.from\n            ref.toMinHeight = minAnim.to\n        }\n    }\n\n    calcDates (ref) {\n\n        if (ref.currentRange < (1 / ref.x.length)) {\n            ref.fromPeriod = 0\n            return\n        }\n\n        if (ref.fromPeriod === 0) {\n            ref.fromPeriod = ref.toPeriod =\n                this.datesDiff * (ref.currentRange) / this.chartWidth\n        }\n\n        const currentDiff = ref.toPeriod * this.chartWidth / ref.currentRange\n\n        if (currentDiff >= 2 * this.datesDiff) {\n            const uniqName = this.zoomState + 'datesGrade'\n            ref.fromPeriod = ref.toPeriod\n            ref.toPeriod = ref.toPeriod / 2\n            ref.datesGrade = 0\n            this.addAnimation(ref, 'datesGrade', 1, this.animationDurationMs, uniqName)\n            this.animate()\n        } else if (currentDiff < this.datesDiff) {\n            const uniqName = this.zoomState + 'datesGrade'\n            ref.fromPeriod = ref.toPeriod\n            ref.toPeriod = ref.toPeriod * 2\n            this.datesGrade = 0\n            this.addAnimation(ref, 'datesGrade', 1, this.animationDurationMs, uniqName)\n            this.animate()\n        }\n    }\n\n    getDetails (index) {\n\n        let fromLeft = index - 3\n        let toRight = index + 3\n\n        if (fromLeft < 1) {\n            toRight += 1 - fromLeft\n            fromLeft = 1\n        } else if (toRight >= this.x.length) {\n            fromLeft -= toRight - this.x.length + 1\n            toRight = this.x.length - 1\n        }\n\n        const columns = [], lineIdToIndexMap = {}\n\n        for (let i = fromLeft; i <= toRight; i++) {\n            const timestamp = this.x[i]\n            const details = this.details[timestamp]\n            for (const column of details.columns) {\n                if (lineIdToIndexMap[column[0]] === undefined) {\n                    lineIdToIndexMap[column[0]] = columns.length\n                    columns.push(column.slice())\n                } else {\n                    let k = column.length\n                    const to = columns[lineIdToIndexMap[column[0]]]\n                    const offset = to.length - 1\n                    while (k-- > 1) {\n                        to[offset + k] = column[k]\n                    }\n                }\n            }\n        }\n\n        let scrollLeft, scrollRight\n        const currentLeft = scrollLeft = (index - fromLeft) / 7\n        const currentRight = scrollRight = currentLeft + 1 / 7\n        const currentRange = currentRight - currentLeft\n\n        const data = { columns, types: this.details[this.x[1]].types }\n        const x = getX(data)\n        const lines = getLines(data)\n        const rangeMaxHeight = getMaxY(x, lines, this.lineStates, currentLeft, currentRight)\n        const rangeMinHeight = getMinY(x, lines, this.lineStates, currentLeft, currentRight)\n\n        const maxHeight = getMaxY(x, lines, this.lineStates, 0, 1)\n        const minHeight = getMinY(x, lines, this.lineStates, 0, 1)\n\n        let fromMaxHeight, toMaxHeight, currentMaxHeight,\n            fromMinHeight, toMinHeight, currentMinHeight\n\n        fromMaxHeight = toMaxHeight = currentMaxHeight = rangeMaxHeight\n        fromMinHeight = toMinHeight = currentMinHeight = rangeMinHeight\n\n        const xDiff = x[x.length - 1] - x[1]\n\n        return {\n            x,\n            lines,\n            maxHeight, minHeight,\n            fromMaxHeight, toMaxHeight, currentMaxHeight,\n            fromMinHeight, toMinHeight, currentMinHeight,\n            currentLeft, currentRight, currentRange,\n            xDiff,\n\n            lineStates: this.lineStates,\n            fromPeriod: 0,\n            toPeriod: 0,\n            datesGrade: 1,\n\n            moveDir: 'no',\n            scrollStart: 0,\n            scrollLeft, scrollRight,\n\n            legendShown: false,\n            legendMoving: false,\n            legendCoordinates: {},\n            pickedIndex: -1,\n            legendPosition: 0,\n            yAlign: {},\n        }\n    }\n\n    setNoMove (ref) {\n        ref.moveDir = 'no'\n        ref.scrollLeft = ref.currentLeft\n        ref.scrollRight = ref.currentRight\n    }\n\n    setMoveDir (ref, dir, position) {\n        ref.moveDir = dir\n        ref.scrollStart = position\n        ref.scrollLeft = ref.currentLeft\n        ref.scrollRight = ref.currentRight\n    }\n\n    setMove (ref, movePosition) {\n\n        if (ref.moveDir === 'no') {\n            return\n        }\n\n        let from = ref.scrollLeft, to = ref.scrollRight\n\n        const offsetDiff = fromCssSize(movePosition - ref.scrollStart)\n        const dOffset = offsetDiff / this.chartWidth\n        const bound = 2 * controlWidth / this.chartWidth\n\n        if (ref.moveDir === 'left') {\n            from += dOffset\n            if (from + bound > to) {\n                from = to - bound\n            }\n            if (from < 0) {\n                from = 0\n            }\n        } else if (ref.moveDir === 'right') {\n            to += dOffset\n            if (from + bound > to) {\n                to = from + bound\n            }\n            if (to > 1) {\n                to = 1\n            }\n        } else {\n            from += dOffset\n            to += dOffset\n            if (from < 0) {\n                to = to - from\n                from = 0\n            }\n            if (to > 1) {\n                from = from - (to - 1)\n                to = 1\n            }\n        }\n\n        this.move(ref, from, to)\n    }\n\n    getDir (ref, x, y) {\n\n        const border = this.canvasEl.getBoundingClientRect()\n\n        const canvasX = fromCssSize(x - border.left)\n        const canvasY = fromCssSize(y - border.top)\n\n        const fromW = this.padW + ref.currentLeft * this.chartWidth - controlWidth\n        const toW = this.padW + ref.currentRight * this.chartWidth + controlWidth\n        const fromH = this.previewOffsetH - previewPadding\n        const toH = this.previewOffsetH + this.previewHeight + previewPadding\n\n        if (canvasX < fromW || canvasX > toW || canvasY < fromH || canvasY > toH) {\n            return 'no'\n        }\n\n        if (canvasX < fromW + 2 * controlWidth) {\n            return 'left'\n        } else if (canvasX > toW - 2 * controlWidth) {\n            return 'right'\n        } else {\n            return 'both'\n        }\n    }\n\n    getLabel (x, y) {\n\n        const border = this.canvasEl.getBoundingClientRect()\n\n        const canvasX = fromCssSize(x - border.left)\n        const canvasY = fromCssSize(y - border.top)\n\n        if (canvasY < this.checkboxesOffsetH) {\n            return\n        }\n        for (const c of this.checkboxes) {\n            if (c.x <= canvasX && c.toX >= canvasX && c.y <= canvasY && c.toY >= canvasY ) {\n                return c.id\n            }\n        }\n\n        return\n    }\n\n    setScroll (ref, e) {\n        const dir = this.getDir(ref, e.clientX, e.clientY)\n        if (dir === 'no') {\n            return\n        }\n        this.setMoveDir(ref, dir, e.clientX)\n    }\n\n    clickCheckbox (e) {\n        const label = this.getLabel(e.clientX, e.clientY)\n        if (label) {\n            this.toggle(label)\n        }\n    }\n\n    clickZoomOut (e) {\n\n        const border = this.canvasEl.getBoundingClientRect()\n\n        const canvasX = fromCssSize(e.clientX - border.left)\n        const canvasY = fromCssSize(e.clientY - border.top)\n\n        const c = this.zoomOutCoords\n\n        if (c.x <= canvasX && c.toX >= canvasX && c.y <= canvasY && c.toY >= canvasY ) {\n            this.zoom(this.pickedIndex, false)\n        }\n    }\n\n    clickLegend (ref, e) {\n\n        if (!ref.legendShown) {\n            return false\n        }\n\n        const border = this.canvasEl.getBoundingClientRect()\n\n        const canvasX = fromCssSize(e.clientX - border.left)\n        const canvasY = fromCssSize(e.clientY - border.top)\n\n        const c = ref.legendCoordinates\n\n        if (canvasX >= c.x && canvasX <= c.toX && canvasY >= c.y && canvasY <= c.toY) {\n            if (ref === this) {\n                this.zoom(this.pickedIndex, true)\n            }\n            return true\n        }\n\n        return false\n    }\n\n    showLegend (ref, e) {\n\n        if (ref.moveDir !== 'no') {\n            return\n        }\n\n        const bound = this.el.getBoundingClientRect()\n\n        const canvasY = fromCssSize(e.clientY - bound.top)\n\n        if (canvasY > this.padH + this.chartHeight || canvasY < this.legendCoordinates.y) {\n            return\n        }\n\n        const offsetLeft = fromCssSize(e.clientX - bound.left)\n\n        this.setPickedIndex(ref, offsetLeft)\n\n        this.cancelAnimation('legendPosition')\n\n        ref.legendMoving = true\n        ref.legendShown = true\n\n        this.render()\n    }\n\n    moveLegend (ref, e) {\n\n        if (!ref.legendMoving) {\n            return\n        }\n\n        const bound = this.el.getBoundingClientRect()\n\n        const canvasY = fromCssSize(e.clientY - bound.top)\n\n        if (canvasY > this.padH + this.chartHeight || canvasY <= this.headerHeight) {\n            return\n        }\n\n        const offsetLeft = fromCssSize(e.clientX - bound.left)\n\n        this.setPickedIndex(ref, offsetLeft)\n\n        this.render()\n    }\n\n    setPickedIndex (ref, offsetLeft) {\n\n        let position = ref.currentLeft + (offsetLeft - this.padW) / this.chartWidth * ref.currentRange\n\n        if (position < ref.currentLeft) {\n            position = ref.currentLeft\n        } else if (position > ref.currentRight) {\n            position = ref.currentRight\n        }\n\n        ref.legendPosition = position\n        ref.pickedIndex = getClosestIndex(ref.x, position)\n    }\n\n    stopMovingLegend (ref) {\n        if (!ref.legendMoving) { return }\n        ref.legendMoving = false\n        const destinationPosition = (ref.x[ref.pickedIndex] - ref.x[1]) / ref.xDiff\n        const uniqName = this.zoomState + 'legendPosition'\n        this.addAnimation(ref, 'legendPosition', destinationPosition, this.animationDurationMs, uniqName)\n        this.animate()\n    }\n\n    onMouseDown (e) {\n        e.stopPropagation()\n        this.setScroll(this.ref, e)\n        this.clickCheckbox(e)\n        this.clickZoomOut(e)\n        if (!this.clickLegend(this.ref, e)) {\n            this.showLegend(this.ref, e)\n        }\n    }\n\n    onMouseMove (e) {\n        e.stopPropagation()\n        this.setMove(this.ref, e.clientX)\n        this.moveLegend(this.ref, e)\n    }\n\n    onMouseUp (e) {\n        e.stopPropagation()\n        this.setNoMove(this.ref)\n        this.stopMovingLegend(this.ref)\n    }\n\n    onMouseLeave (e) {\n        e.stopPropagation()\n        this.setNoMove(this.ref)\n    }\n\n    onTouchStart (e) {\n        e.stopPropagation()\n        const ev = e.targetTouches[0]\n        this.setScroll(this.ref, ev)\n        this.clickCheckbox(ev)\n        this.clickZoomOut(ev)\n        if (!this.clickLegend(this.ref, ev)) {\n            this.showLegend(this.ref, ev)\n        }\n    }\n\n    onTouchMove (e) {\n        e.stopPropagation()\n\n        const ev = e.targetTouches[0]\n        this.setMove(this.ref, ev.clientX)\n        this.moveLegend(this.ref, ev)\n    }\n\n    onTouchEnd (e) {\n        e.stopPropagation()\n        this.setNoMove()\n        this.stopMovingLegend(this.ref)\n    }\n\n    nightMode (enable) {\n        if (enable) {\n            this.addAnimation(this, 'nightGrade', 1, this.animationDurationMs)\n        } else {\n            this.addAnimation(this, 'nightGrade', 0, this.animationDurationMs)\n        }\n        this.animate()\n    }\n}\n\nfunction getX (data) {\n    for (let column of data.columns) {\n        if (data.types[column[0]] === 'x') {\n            return column\n        }\n    }\n}\n\nfunction getLines (data) {\n    const result = []\n    for (let column of data.columns) {\n        if (data.types[column[0]] === 'line') {\n            result.push(column)\n        }\n    }\n    return result\n}\n","import LineChart from './line'\nimport {\n\n    calcYAlignment,\n    animatableHexColor,\n\n    fromCssSize,\n    toCssSize,\n    getMaxY,\n    getMinY,\n    getClosestIndex,\n    getLowerIndex,\n    getUpperIndex,\n    drawLines,\n    drawScrollControlls,\n    drawGrid,\n    drawTranslateYLabels,\n    drawDates,\n    drawCheckboxes,\n    drawLinesLegend,\n    drawHeader,\n    drawZoomOutControl,\n    drawDateRangeSummary,\n    drawRuller,\n    drawLinesCross,\n} from '../draw-tools'\n\nconst animationDurationMs = 250\n\nexport default class LineYScaled extends LineChart {\n\n    constructor (data, options) {\n\n        const lines2 = data.overview.columns.splice(2, 1)\n\n        const details2 = {}\n\n        for (let timestamp in data.details) {\n            details2[timestamp] = data.details[timestamp].columns.splice(2, 1)[0]\n        }\n\n        super(data, options)\n\n        this.lines2 = lines2\n        this.details2 = details2\n\n        this.currentMaxHeight2 = this.fromMaxHeight2 = this.toMaxHeight2 =\n            getMaxY(this.x, lines2, this.lineStates, this.currentLeft, this.currentRight)\n        this.maxHeight2 = getMaxY(this.x, lines2, this.lineStates, 0, 1)\n\n        this.currentMinHeight2 = this.fromMinHeight2 = this.toMinHeight2 =\n            getMinY(this.x, lines2, this.lineStates, this.currentLeft, this.currentRight)\n        this.minHeight2 = getMinY(this.x, lines2, this.lineStates, 0, 1)\n\n        this.yAlign2 = {}\n\n        this.getAxisColor1 = animatableHexColor(data.overview.colors['y0'], 1, data.overview.colors['y0'], 1)\n        this.getAxisColor2 = animatableHexColor(data.overview.colors['y1'], 1, data.overview.colors['y0'], 1)\n    }\n\n    drawLineChart (ref, shrink, yAxisdateFormat, legendDateFormat, zoomGrade) {\n\n        drawGrid(this.ctx, this.padW, this.headerHeight, this.chartWidth, this.chartHeight + this.padH, 5,\n            ref.fromMaxHeight, ref.toMaxHeight, ref.currentMaxHeight,\n            ref.fromMinHeight, ref.toMinHeight, ref.currentMinHeight,\n            ref.yAlign.max, ref.yAlign.min, ref.yAlign.top, ref.yAlign.bottom,\n            this.getGridColor, this.getAxisColor1, false, this.lineGrades['y0'], this.gridLineWidth, this.textSize, this.nightGrade, zoomGrade)\n\n        drawGrid(this.ctx, this.padW, this.headerHeight, this.chartWidth, this.chartHeight + this.padH, 5,\n            ref.fromMaxHeight2, ref.toMaxHeight2, ref.currentMaxHeight2,\n            ref.fromMinHeight2, ref.toMinHeight2, ref.currentMinHeight2,\n            ref.yAlign2.max, ref.yAlign2.min, ref.yAlign2.top, ref.yAlign2.bottom,\n            this.getGridColor, this.getAxisColor2, true, this.lineGrades['y1'], this.gridLineWidth, this.textSize, this.nightGrade, zoomGrade)\n\n        drawLines(this.ctx, ref.x, ref.lines2, this.lineStates, this.lineGrades, this.lineColors,\n            this.chartWidth, this.chartHeight + this.padH - ref.yAlign2.top, this.padW, this.headerHeight + ref.yAlign2.top, ref.yAlign2.bottom,\n            ref.currentLeft, ref.currentRight, ref.xDiff * ref.currentRange,\n            ref.currentMaxHeight2, ref.currentMinHeight2, this.lineWidth, zoomGrade, shrink)\n\n        drawLines(this.ctx, ref.x, ref.lines, this.lineStates, this.lineGrades, this.lineColors,\n            this.chartWidth, this.chartHeight + this.padH - ref.yAlign.top, this.padW, this.headerHeight + ref.yAlign.top, ref.yAlign.bottom,\n            ref.currentLeft, ref.currentRight, ref.xDiff * ref.currentRange, ref.currentMaxHeight, ref.currentMinHeight, this.lineWidth, zoomGrade, shrink)\n\n        // redraw only if moving\n        drawDates(this.ctx, this.padW, this.datesOffsetH,\n            this.chartWidth / ref.currentRange, ref.x[1], ref.xDiff, yAxisdateFormat, ref.currentLeft, ref.currentRight,\n            this.fromPeriod, this.toPeriod, this.datesGrade, this.getAxisColor, this.nightGrade, zoomGrade)\n\n        drawLines(this.ctx, ref.x, ref.lines2, this.lineStates, this.lineGrades, this.lineColors,\n            this.chartWidth, this.previewHeight, this.padW, this.previewOffsetH, 0,\n            0, 1, ref.xDiff, ref.maxHeight2, ref.minHeight2, this.previewLineWidth, zoomGrade, shrink)\n\n        drawLines(this.ctx, ref.x, ref.lines, this.lineStates, this.lineGrades, this.lineColors,\n            this.chartWidth, this.previewHeight, this.padW, this.previewOffsetH, 0,\n            0, 1, ref.xDiff, ref.maxHeight, ref.minHeight, this.previewLineWidth, zoomGrade, shrink)\n\n        // redraw only if moving or checked\n        drawScrollControlls(this.ctx, this.padW, this.previewOffsetH, this.chartWidth, this.previewHeight,\n            ref.currentLeft, ref.currentRight, this.getPreviewBlurColor, this.getPreviewControlColor, this.nightGrade, zoomGrade)\n\n        if (ref.legendShown && (zoomGrade < 1 || (ref.legendPosition >= ref.currentLeft && ref.legendPosition <= ref.currentRight))) {\n\n            drawRuller(this.ctx, this.padW, this.headerHeight + this.padH, this.rullerWidth, this.chartHeight, this.chartWidth,\n                ref.currentLeft, ref.currentRight, ref.currentRange, ref.legendPosition, this.getRullerColor, zoomGrade, this.nightGrade)\n\n            for (let line of ref.lines) {\n                drawLinesCross(this.ctx, ref.x, line, this.lineLabels, this.lineStates, this.lineGrades, this.lineColors, this.lineWidth,\n                    ref.legendPosition, ref.pickedIndex, this.padW, this.headerHeight, ref.currentLeft, ref.currentRight, ref.currentRange,\n                    this.chartWidth, this.chartHeight + this.padH, ref.xDiff,\n                    ref.yAlign.top, ref.yAlign.bottom, ref.currentMaxHeight, ref.currentMinHeight,\n                    this.getBackgroundColor, this.nightGrade, zoomGrade)\n            }\n\n            for (let line of ref.lines2) {\n                drawLinesCross(this.ctx, ref.x, line, this.lineLabels, this.lineStates, this.lineGrades, this.lineColors, this.lineWidth,\n                    ref.legendPosition, ref.pickedIndex, this.padW, this.headerHeight, ref.currentLeft, ref.currentRight, ref.currentRange,\n                    this.chartWidth, this.chartHeight + this.padH, ref.xDiff,\n                    ref.yAlign2.top, ref.yAlign2.bottom, ref.currentMaxHeight2, ref.currentMinHeight2,\n                    this.getBackgroundColor, this.nightGrade, zoomGrade)\n            }\n\n            drawLinesLegend(this.ctx, ref.x, [ref.lines, ref.lines2], this.lineLabels, this.lineStates, this.lineGrades, this.lineColors, this.lineWidth,\n                ref.legendPosition, ref.pickedIndex, this.padW, this.headerHeight + this.padH, ref.currentLeft, ref.currentRight, ref.currentRange,\n                this.chartWidth, this.chartHeight + this.padH, ref.xDiff,\n                [\n                    [ref.yAlign.top, ref.yAlign.bottom, ref.currentMaxHeight, ref.currentMinHeight,],\n                    [ref.yAlign2.top, ref.yAlign2.bottom, ref.currentMaxHeight2, ref.currentMinHeight2,]\n                ],\n                this.legendTextSize, this.textFont, this.getLegendColor, this.getLegendBorderColor, this.getLegendFontColor, this.getBackgroundColor,\n                zoomGrade, this.nightGrade, ref.legendCoordinates, zoomGrade, legendDateFormat, this.zoomState === 'overview')\n        }\n    }\n\n    calcYAlignment(ref) {\n\n        super.calcYAlignment(ref)\n\n        const chartHeight = this.chartHeight + this.padH\n        const linesDiff = chartHeight / 6\n\n        calcYAlignment(ref.toMaxHeight2, ref.toMinHeight2,\n            chartHeight - this.padH, this.padH, chartHeight - linesDiff, linesDiff, chartHeight, ref.yAlign2)\n    }\n\n    calcHeight (ref) {\n\n        super.calcHeight(ref)\n\n        const visibleMaxHeight = getMaxY(ref.x, ref.lines2, ref.lineStates, ref.currentLeft, ref.currentRight)\n\n        if (visibleMaxHeight !== ref.toMaxHeight2) {\n            const uniqName = this.zoomState + 'currentMaxHeight2'\n            this.addAnimation(ref, 'currentMaxHeight2', visibleMaxHeight, animationDurationMs, uniqName)\n            this.animate()\n        }\n\n        const visibleMinHeight = getMinY(ref.x, ref.lines2, ref.lineStates, ref.currentLeft, ref.currentRight)\n\n        if (visibleMinHeight !== ref.toMinHeight2) {\n            const uniqName = this.zoomState + 'currentMinHeight2'\n            this.addAnimation(ref, 'currentMinHeight2', visibleMinHeight, animationDurationMs, uniqName)\n            this.animate()\n        }\n\n        const maxAnim = this.animations[this.zoomState + 'currentMaxHeight2']\n\n        if (maxAnim) {\n            ref.fromMaxHeight2 = maxAnim.from\n            ref.toMaxHeight2 = maxAnim.to\n        }\n\n        const minAnim = this.animations[this.zoomState + 'currentMinHeight2']\n\n        if (minAnim) {\n            ref.fromMinHeight2 = minAnim.from\n            ref.toMinHeight2 = minAnim.to\n        }\n    }\n\n    getDetails (index) {\n\n        const details = super.getDetails(index)\n\n        let fromLeft = index - 3\n        let toRight = index + 3\n\n        if (fromLeft < 1) {\n            toRight += 1 - fromLeft\n            fromLeft = 1\n        } else if (toRight >= this.x.length) {\n            fromLeft -= toRight - this.x.length + 1\n            toRight = this.x.length - 1\n        }\n\n        let lines2 = []\n\n        for (let i = fromLeft; i <= toRight; i++) {\n            const timestamp = this.x[i]\n            const details2 = this.details2[timestamp]\n            if (!lines2.length) {\n                lines2[0] = details2[0]\n            }\n            let k = details2.length\n            const offset = lines2.length - 1\n            while (k-- > 1) {\n                lines2[offset + k] = details2[k]\n            }\n        }\n\n        lines2 = [lines2]\n\n        const rangeMaxHeight2 = getMaxY(details.x, lines2, this.lineStates, details.currentLeft, details.currentRight)\n        const rangeMinHeight2 = getMinY(details.x, lines2, this.lineStates, details.currentLeft, details.currentRight)\n\n        const maxHeight2 = getMaxY(details.x, lines2, this.lineStates, 0, 1)\n        const minHeight2 = getMinY(details.x, lines2, this.lineStates, 0, 1)\n\n        let fromMaxHeight2, toMaxHeight2, currentMaxHeight2,\n            fromMinHeight2, toMinHeight2, currentMinHeight2\n\n        fromMaxHeight2 = toMaxHeight2 = currentMaxHeight2 = rangeMaxHeight2\n        fromMinHeight2 = toMinHeight2 = currentMinHeight2 = rangeMinHeight2\n\n        details.lines2 = lines2\n        details.maxHeight2 = maxHeight2\n        details.minHeight2 = minHeight2\n        details.fromMaxHeight2 = fromMaxHeight2\n        details.toMaxHeight2 = toMaxHeight2\n        details.currentMaxHeight2 = currentMaxHeight2\n        details.fromMinHeight2 = fromMinHeight2\n        details.toMinHeight2 = toMinHeight2\n        details.currentMinHeight2 = currentMinHeight2\n        details.yAlign2 = {}\n\n        return details\n    }\n}\n","import AnimatableChart from '../animatable_chart'\n\nexport default class StackedBarChart extends AnimatableChart {\n\n    constructor (data, options) {\n        super(options)\n    }\n\n    render () {\n        this.ctx.font = '30px serif'\n        this.ctx.fillStyle = 'black'\n        this.ctx.fillText('StackedBarChart not implemented', 0, 30)\n    }\n\n    setWidth () {\n\n    }\n}\n","import AnimatableChart from '../animatable_chart'\n\nexport default class BarChart extends AnimatableChart {\n\n    constructor (data, options) {\n        super(options)\n    }\n\n    render () {\n        this.ctx.font = '30px serif'\n        this.ctx.fillStyle = 'black'\n        this.ctx.fillText('BarChart not implemented', 0, 30)\n    }\n\n    setWidth () {\n\n    }\n}\n","import AnimatableChart from '../animatable_chart'\n\nexport default class PieChart extends AnimatableChart {\n\n    constructor (data, options) {\n        super(options)\n    }\n\n    render () {\n        this.ctx.font = '30px serif'\n        this.ctx.fillStyle = 'black'\n        this.ctx.fillText('PieChart not implemented', 0, 30)\n    }\n\n    setWidth () {\n\n    }\n}\n","import LineChart from './charts/line'\nimport LineYScaled from './charts/line-y-scaled'\nimport StackedBarChart from './charts/bar-stacked'\nimport BarChart from './charts/bar'\nimport PieChart from './charts/pie'\n\nexport default function () {\n\n    return {\n\n        create: function (data, parent) {\n\n            let chart = null\n\n            const overview = data.overview\n\n            if (overview.y_scaled) {\n                chart = new LineYScaled(data, {\n                    width: parent.offsetWidth,\n                    height: 320,\n                    fontFamily: 'Helvetica, sans-serif',\n                    fontSize: 10,\n                    padW: 10,\n                    padH: 20,\n                    lineWidth: 2,\n                    previewPadW: 10,\n                    previewPadH: 4,\n                    previewHeight: 32,\n                    previewLineWidth: 1,\n                    checkboxesAreaHeight: 80,\n                    checkboxHeight: 28,\n                    checkboxRadius: 14,\n                    checkboxMargin: 8,\n                    legendFontSize: 12,\n                    rullerWidth: 1,\n                    from: 0.75,\n                    to: 1,\n                    datesDiff: 60,\n                    gridLineWidth: 1,\n                    header: 'Line Y Scaled Chart',\n                    headerFontSize: 14,\n                    dateRangeFontSize: 12,\n                    headerHeight: 20,\n                })\n            } else if (overview.stacked && overview.percentage) {\n                chart = new PieChart(data, {\n                    width: parent.offsetWidth,\n                    height: 320,\n                    fontFamily: 'Helvetica, sans-serif',\n                    fontSize: 10,\n                    padW: 10,\n                    padH: 20,\n                    lineWidth: 2,\n                    previewPadW: 10,\n                    previewPadH: 4,\n                    previewHeight: 32,\n                    previewLineWidth: 1,\n                    checkboxesAreaHeight: 80,\n                    checkboxHeight: 28,\n                    checkboxRadius: 14,\n                    checkboxMargin: 8,\n                    legendFontSize: 12,\n                    rullerWidth: 1,\n                    from: 0.75,\n                    to: 1,\n                    datesDiff: 60,\n                    gridLineWidth: 1,\n                    header: 'Pie Chart',\n                    headerFontSize: 14,\n                    dateRangeFontSize: 12,\n                    headerHeight: 20,\n                })\n            } else if (overview.stacked) {\n                chart = new StackedBarChart(data, {\n                    width: parent.offsetWidth,\n                    height: 320,\n                    fontFamily: 'Helvetica, sans-serif',\n                    fontSize: 10,\n                    padW: 10,\n                    padH: 20,\n                    lineWidth: 2,\n                    previewPadW: 10,\n                    previewPadH: 4,\n                    previewHeight: 32,\n                    previewLineWidth: 1,\n                    checkboxesAreaHeight: 80,\n                    checkboxHeight: 28,\n                    checkboxRadius: 14,\n                    checkboxMargin: 8,\n                    legendFontSize: 12,\n                    rullerWidth: 1,\n                    from: 0.75,\n                    to: 1,\n                    datesDiff: 60,\n                    gridLineWidth: 1,\n                    header: 'Stacked Bar Chart',\n                    headerFontSize: 14,\n                    dateRangeFontSize: 12,\n                    headerHeight: 20,\n                })\n            } else if (Object.keys(overview.types).some(k => overview.types[k] === 'bar')) {\n                chart = new BarChart(data, {\n                    width: parent.offsetWidth,\n                    height: 320,\n                    fontFamily: 'Helvetica, sans-serif',\n                    fontSize: 10,\n                    padW: 10,\n                    padH: 20,\n                    lineWidth: 2,\n                    previewPadW: 10,\n                    previewPadH: 4,\n                    previewHeight: 32,\n                    previewLineWidth: 1,\n                    checkboxesAreaHeight: 80,\n                    checkboxHeight: 28,\n                    checkboxRadius: 14,\n                    checkboxMargin: 8,\n                    legendFontSize: 12,\n                    rullerWidth: 1,\n                    from: 0.75,\n                    to: 1,\n                    datesDiff: 60,\n                    gridLineWidth: 1,\n                    header: 'Bar Chart',\n                    headerFontSize: 14,\n                    dateRangeFontSize: 12,\n                    headerHeight: 20,\n                })\n            } else {\n                chart = new LineChart(data, {\n                    width: parent.offsetWidth,\n                    height: 320,\n                    fontFamily: 'Helvetica, sans-serif',\n                    fontSize: 10,\n                    padW: 10,\n                    padH: 20,\n                    lineWidth: 2,\n                    previewPadW: 10,\n                    previewPadH: 4,\n                    previewHeight: 32,\n                    previewLineWidth: 1,\n                    checkboxesAreaHeight: 80,\n                    checkboxHeight: 28,\n                    checkboxRadius: 14,\n                    checkboxMargin: 8,\n                    legendFontSize: 12,\n                    rullerWidth: 1,\n                    from: 0.75,\n                    to: 1,\n                    datesDiff: 60,\n                    gridLineWidth: 1,\n                    header: 'Line Chart',\n                    headerFontSize: 14,\n                    dateRangeFontSize: 12,\n                    headerHeight: 20,\n                })\n            }\n\n            parent.appendChild(chart.el)\n            chart.render()\n\n            return chart\n        },\n    }\n}\n","class NightSwitch {\n\n    constructor (cb) {\n        this.cb = cb\n\n        this.state = false\n\n        this.el = document.createElement('div')\n        this.el.className = 'night-switch day'\n        this.textEl = document.createElement('span')\n        this.textEl.className = 'night-switch-text'\n        this.el.appendChild(this.textEl)\n\n        this.el.addEventListener('click', () => this.switch())\n\n        this.setText()\n    }\n\n    switch () {\n        this.state = !this.state\n        const bodyEl = document.getElementsByTagName('body')[0]\n        this.state ? bodyEl.className = 'night' : bodyEl.className = 'day'\n        this.state ? this.el.className = 'night-switch night' : this.el.className = 'night-switch day'\n        this.setText()\n        this.cb(this.state)\n    }\n\n    setText () {\n        this.textEl.textContent = this.state\n            ? 'Switch to Day Mode'\n            : 'Switch to Night Mode'\n    }\n}\n\nexport default NightSwitch\n","import ChartFactory from './lib/chart_factory'\nimport NightSwitch from './lib/night_switch'\n\nimport data from './generated_data'\n\nconst factory = new ChartFactory()\n\nlet charts = []\n\ndocument.addEventListener('DOMContentLoaded', function () {\n\n    const parent = document.getElementById('root')\n\n    for (let datum of data) {\n        charts.push(factory.create(datum, parent))\n    }\n\n    function switchMode (enable) {\n        charts.forEach(function (chart) {\n            chart.nightMode(enable)\n        })\n    }\n\n    const nightSwitch = new NightSwitch(switchMode)\n    parent.appendChild(nightSwitch.el)\n\n    function resize (width) {\n        charts.forEach(function (chart) {\n            chart.setWidth(width, true)\n        })\n    }\n\n    window.addEventListener('resize', function () {\n        resize(parent.offsetWidth)\n    })\n\n    resize(parent.offsetWidth)\n})\n"],"sourceRoot":""}